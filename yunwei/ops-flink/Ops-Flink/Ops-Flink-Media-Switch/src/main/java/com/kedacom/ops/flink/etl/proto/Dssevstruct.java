// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dssevstruct.proto

package com.kedacom.ops.flink.etl.proto;

public final class Dssevstruct {
  private Dssevstruct() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface DssMessageWrapOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .com.kedacom.ops.flink.etl.proto.CltDssEvent event = 1;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.CltDssEvent event = 1;</code>
     */
    boolean hasEvent();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.CltDssEvent event = 1;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.CltDssEvent getEvent();

    // optional bytes message_body = 2;
    /**
     * <code>optional bytes message_body = 2;</code>
     *
     * <pre>
     * ������Ϣ���л�������
     * </pre>
     */
    boolean hasMessageBody();
    /**
     * <code>optional bytes message_body = 2;</code>
     *
     * <pre>
     * ������Ϣ���л�������
     * </pre>
     */
    com.google.protobuf.ByteString getMessageBody();

    // optional bytes context = 3;
    /**
     * <code>optional bytes context = 3;</code>
     *
     * <pre>
     * �ͻ��Զ���������
     * </pre>
     */
    boolean hasContext();
    /**
     * <code>optional bytes context = 3;</code>
     *
     * <pre>
     * �ͻ��Զ���������
     * </pre>
     */
    com.google.protobuf.ByteString getContext();

    // optional uint32 masterid = 4;
    /**
     * <code>optional uint32 masterid = 4;</code>
     */
    boolean hasMasterid();
    /**
     * <code>optional uint32 masterid = 4;</code>
     */
    int getMasterid();

    // optional bytes message_uuid = 5;
    /**
     * <code>optional bytes message_uuid = 5;</code>
     */
    boolean hasMessageUuid();
    /**
     * <code>optional bytes message_uuid = 5;</code>
     */
    com.google.protobuf.ByteString getMessageUuid();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssMessageWrap}
   */
  public static final class DssMessageWrap extends
      com.google.protobuf.GeneratedMessage
      implements DssMessageWrapOrBuilder {
    // Use DssMessageWrap.newBuilder() to construct.
    private DssMessageWrap(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssMessageWrap(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssMessageWrap defaultInstance;
    public static DssMessageWrap getDefaultInstance() {
      return defaultInstance;
    }

    public DssMessageWrap getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssMessageWrap_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssMessageWrap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DssMessageWrap.class, Builder.class);
    }

    public static com.google.protobuf.Parser<DssMessageWrap> PARSER =
        new com.google.protobuf.AbstractParser<DssMessageWrap>() {
      public DssMessageWrap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @Override
    public com.google.protobuf.Parser<DssMessageWrap> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .com.kedacom.ops.flink.etl.proto.CltDssEvent event = 1;
    public static final int EVENT_FIELD_NUMBER = 1;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.CltDssEvent event_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.CltDssEvent event = 1;</code>
     */
    public boolean hasEvent() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.CltDssEvent event = 1;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.CltDssEvent getEvent() {
      return event_;
    }

    // optional bytes message_body = 2;
    public static final int MESSAGE_BODY_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString messageBody_;
    /**
     * <code>optional bytes message_body = 2;</code>
     *
     * <pre>
     * ������Ϣ���л�������
     * </pre>
     */
    public boolean hasMessageBody() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes message_body = 2;</code>
     *
     * <pre>
     * ������Ϣ���л�������
     * </pre>
     */
    public com.google.protobuf.ByteString getMessageBody() {
      return messageBody_;
    }

    // optional bytes context = 3;
    public static final int CONTEXT_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString context_;
    /**
     * <code>optional bytes context = 3;</code>
     *
     * <pre>
     * �ͻ��Զ���������
     * </pre>
     */
    public boolean hasContext() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes context = 3;</code>
     *
     * <pre>
     * �ͻ��Զ���������
     * </pre>
     */
    public com.google.protobuf.ByteString getContext() {
      return context_;
    }

    // optional uint32 masterid = 4;
    public static final int MASTERID_FIELD_NUMBER = 4;
    private int masterid_;
    /**
     * <code>optional uint32 masterid = 4;</code>
     */
    public boolean hasMasterid() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 masterid = 4;</code>
     */
    public int getMasterid() {
      return masterid_;
    }

    // optional bytes message_uuid = 5;
    public static final int MESSAGE_UUID_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString messageUuid_;
    /**
     * <code>optional bytes message_uuid = 5;</code>
     */
    public boolean hasMessageUuid() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bytes message_uuid = 5;</code>
     */
    public com.google.protobuf.ByteString getMessageUuid() {
      return messageUuid_;
    }

    private void initFields() {
      event_ = com.kedacom.ops.flink.etl.proto.Dssevenum.CltDssEvent.CLT_DSS_CREATCLIENT_REQ;
      messageBody_ = com.google.protobuf.ByteString.EMPTY;
      context_ = com.google.protobuf.ByteString.EMPTY;
      masterid_ = 0;
      messageUuid_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static DssMessageWrap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DssMessageWrap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DssMessageWrap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DssMessageWrap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DssMessageWrap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DssMessageWrap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static DssMessageWrap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static DssMessageWrap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static DssMessageWrap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DssMessageWrap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DssMessageWrap prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssMessageWrap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DssMessageWrapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssMessageWrap_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssMessageWrap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DssMessageWrap.class, Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevstruct.DssMessageWrap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        event_ = com.kedacom.ops.flink.etl.proto.Dssevenum.CltDssEvent.CLT_DSS_CREATCLIENT_REQ;
        bitField0_ = (bitField0_ & ~0x00000001);
        messageBody_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        context_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        masterid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        messageUuid_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssMessageWrap_descriptor;
      }

      public DssMessageWrap getDefaultInstanceForType() {
        return DssMessageWrap.getDefaultInstance();
      }

      public DssMessageWrap build() {
        DssMessageWrap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public DssMessageWrap buildPartial() {
        DssMessageWrap result = new DssMessageWrap(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.event_ = event_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.messageBody_ = messageBody_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.context_ = context_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.masterid_ = masterid_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.messageUuid_ = messageUuid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional .com.kedacom.ops.flink.etl.proto.CltDssEvent event = 1;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.CltDssEvent event_ = com.kedacom.ops.flink.etl.proto.Dssevenum.CltDssEvent.CLT_DSS_CREATCLIENT_REQ;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.CltDssEvent event = 1;</code>
       */
      public boolean hasEvent() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.CltDssEvent event = 1;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.CltDssEvent getEvent() {
        return event_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.CltDssEvent event = 1;</code>
       */
      public Builder setEvent(com.kedacom.ops.flink.etl.proto.Dssevenum.CltDssEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        event_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.CltDssEvent event = 1;</code>
       */
      public Builder clearEvent() {
        bitField0_ = (bitField0_ & ~0x00000001);
        event_ = com.kedacom.ops.flink.etl.proto.Dssevenum.CltDssEvent.CLT_DSS_CREATCLIENT_REQ;
        onChanged();
        return this;
      }

      // optional bytes message_body = 2;
      private com.google.protobuf.ByteString messageBody_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes message_body = 2;</code>
       *
       * <pre>
       * ������Ϣ���л�������
       * </pre>
       */
      public boolean hasMessageBody() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes message_body = 2;</code>
       *
       * <pre>
       * ������Ϣ���л�������
       * </pre>
       */
      public com.google.protobuf.ByteString getMessageBody() {
        return messageBody_;
      }
      /**
       * <code>optional bytes message_body = 2;</code>
       *
       * <pre>
       * ������Ϣ���л�������
       * </pre>
       */
      public Builder setMessageBody(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        messageBody_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes message_body = 2;</code>
       *
       * <pre>
       * ������Ϣ���л�������
       * </pre>
       */
      public Builder clearMessageBody() {
        bitField0_ = (bitField0_ & ~0x00000002);
        messageBody_ = getDefaultInstance().getMessageBody();
        onChanged();
        return this;
      }

      // optional bytes context = 3;
      private com.google.protobuf.ByteString context_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes context = 3;</code>
       *
       * <pre>
       * �ͻ��Զ���������
       * </pre>
       */
      public boolean hasContext() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes context = 3;</code>
       *
       * <pre>
       * �ͻ��Զ���������
       * </pre>
       */
      public com.google.protobuf.ByteString getContext() {
        return context_;
      }
      /**
       * <code>optional bytes context = 3;</code>
       *
       * <pre>
       * �ͻ��Զ���������
       * </pre>
       */
      public Builder setContext(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        context_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes context = 3;</code>
       *
       * <pre>
       * �ͻ��Զ���������
       * </pre>
       */
      public Builder clearContext() {
        bitField0_ = (bitField0_ & ~0x00000004);
        context_ = getDefaultInstance().getContext();
        onChanged();
        return this;
      }

      // optional uint32 masterid = 4;
      private int masterid_ ;
      /**
       * <code>optional uint32 masterid = 4;</code>
       */
      public boolean hasMasterid() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 masterid = 4;</code>
       */
      public int getMasterid() {
        return masterid_;
      }
      /**
       * <code>optional uint32 masterid = 4;</code>
       */
      public Builder setMasterid(int value) {
        bitField0_ |= 0x00000008;
        masterid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 masterid = 4;</code>
       */
      public Builder clearMasterid() {
        bitField0_ = (bitField0_ & ~0x00000008);
        masterid_ = 0;
        onChanged();
        return this;
      }

      // optional bytes message_uuid = 5;
      private com.google.protobuf.ByteString messageUuid_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes message_uuid = 5;</code>
       */
      public boolean hasMessageUuid() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bytes message_uuid = 5;</code>
       */
      public com.google.protobuf.ByteString getMessageUuid() {
        return messageUuid_;
      }
      /**
       * <code>optional bytes message_uuid = 5;</code>
       */
      public Builder setMessageUuid(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        messageUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes message_uuid = 5;</code>
       */
      public Builder clearMessageUuid() {
        bitField0_ = (bitField0_ & ~0x00000010);
        messageUuid_ = getDefaultInstance().getMessageUuid();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssMessageWrap)
    }

    static {
      defaultInstance = new DssMessageWrap(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssMessageWrap)
  }

  public interface DssCarrierAttrOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string Carrier = 1;
    /**
     * <code>optional string Carrier = 1;</code>
     */
    boolean hasCarrier();
    /**
     * <code>optional string Carrier = 1;</code>
     */
    String getCarrier();
    /**
     * <code>optional string Carrier = 1;</code>
     */
    com.google.protobuf.ByteString
        getCarrierBytes();

    // optional bool IsCrossDmz = 2;
    /**
     * <code>optional bool IsCrossDmz = 2;</code>
     */
    boolean hasIsCrossDmz();
    /**
     * <code>optional bool IsCrossDmz = 2;</code>
     */
    boolean getIsCrossDmz();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCarrierAttr}
   */
  public static final class DssCarrierAttr extends
      com.google.protobuf.GeneratedMessage
      implements DssCarrierAttrOrBuilder {
    // Use DssCarrierAttr.newBuilder() to construct.
    private DssCarrierAttr(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCarrierAttr(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCarrierAttr defaultInstance;
    public static DssCarrierAttr getDefaultInstance() {
      return defaultInstance;
    }

    public DssCarrierAttr getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssCarrierAttr_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssCarrierAttr_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DssCarrierAttr.class, Builder.class);
    }

    public static com.google.protobuf.Parser<DssCarrierAttr> PARSER =
        new com.google.protobuf.AbstractParser<DssCarrierAttr>() {
      public DssCarrierAttr parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @Override
    public com.google.protobuf.Parser<DssCarrierAttr> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string Carrier = 1;
    public static final int CARRIER_FIELD_NUMBER = 1;
    private Object carrier_;
    /**
     * <code>optional string Carrier = 1;</code>
     */
    public boolean hasCarrier() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string Carrier = 1;</code>
     */
    public String getCarrier() {
      Object ref = carrier_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          carrier_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string Carrier = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCarrierBytes() {
      Object ref = carrier_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        carrier_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool IsCrossDmz = 2;
    public static final int ISCROSSDMZ_FIELD_NUMBER = 2;
    private boolean isCrossDmz_;
    /**
     * <code>optional bool IsCrossDmz = 2;</code>
     */
    public boolean hasIsCrossDmz() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool IsCrossDmz = 2;</code>
     */
    public boolean getIsCrossDmz() {
      return isCrossDmz_;
    }

    private void initFields() {
      carrier_ = "";
      isCrossDmz_ = false;
    }
    public static DssCarrierAttr parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DssCarrierAttr parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DssCarrierAttr parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DssCarrierAttr parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DssCarrierAttr parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DssCarrierAttr parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static DssCarrierAttr parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static DssCarrierAttr parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static DssCarrierAttr parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DssCarrierAttr parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DssCarrierAttr prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCarrierAttr}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DssCarrierAttrOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssCarrierAttr_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssCarrierAttr_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DssCarrierAttr.class, Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        carrier_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        isCrossDmz_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssCarrierAttr_descriptor;
      }

      public DssCarrierAttr getDefaultInstanceForType() {
        return DssCarrierAttr.getDefaultInstance();
      }

      public DssCarrierAttr build() {
        DssCarrierAttr result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public DssCarrierAttr buildPartial() {
        DssCarrierAttr result = new DssCarrierAttr(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.carrier_ = carrier_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isCrossDmz_ = isCrossDmz_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional string Carrier = 1;
      private Object carrier_ = "";
      /**
       * <code>optional string Carrier = 1;</code>
       */
      public boolean hasCarrier() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string Carrier = 1;</code>
       */
      public String getCarrier() {
        Object ref = carrier_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          carrier_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string Carrier = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCarrierBytes() {
        Object ref = carrier_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          carrier_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string Carrier = 1;</code>
       */
      public Builder setCarrier(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        carrier_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string Carrier = 1;</code>
       */
      public Builder clearCarrier() {
        bitField0_ = (bitField0_ & ~0x00000001);
        carrier_ = getDefaultInstance().getCarrier();
        onChanged();
        return this;
      }
      /**
       * <code>optional string Carrier = 1;</code>
       */
      public Builder setCarrierBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        carrier_ = value;
        onChanged();
        return this;
      }

      // optional bool IsCrossDmz = 2;
      private boolean isCrossDmz_ ;
      /**
       * <code>optional bool IsCrossDmz = 2;</code>
       */
      public boolean hasIsCrossDmz() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool IsCrossDmz = 2;</code>
       */
      public boolean getIsCrossDmz() {
        return isCrossDmz_;
      }
      /**
       * <code>optional bool IsCrossDmz = 2;</code>
       */
      public Builder setIsCrossDmz(boolean value) {
        bitField0_ |= 0x00000002;
        isCrossDmz_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool IsCrossDmz = 2;</code>
       */
      public Builder clearIsCrossDmz() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isCrossDmz_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCarrierAttr)
    }

    static {
      defaultInstance = new DssCarrierAttr(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCarrierAttr)
  }

  public interface DssCarrierAddrOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string CarrierIp = 1;
    /**
     * <code>optional string CarrierIp = 1;</code>
     */
    boolean hasCarrierIp();
    /**
     * <code>optional string CarrierIp = 1;</code>
     */
    String getCarrierIp();
    /**
     * <code>optional string CarrierIp = 1;</code>
     */
    com.google.protobuf.ByteString
        getCarrierIpBytes();

    // optional string DmzIp = 2;
    /**
     * <code>optional string DmzIp = 2;</code>
     */
    boolean hasDmzIp();
    /**
     * <code>optional string DmzIp = 2;</code>
     */
    String getDmzIp();
    /**
     * <code>optional string DmzIp = 2;</code>
     */
    com.google.protobuf.ByteString
        getDmzIpBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCarrierAddr}
   */
  public static final class DssCarrierAddr extends
      com.google.protobuf.GeneratedMessage
      implements DssCarrierAddrOrBuilder {
    // Use DssCarrierAddr.newBuilder() to construct.
    private DssCarrierAddr(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCarrierAddr(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCarrierAddr defaultInstance;
    public static DssCarrierAddr getDefaultInstance() {
      return defaultInstance;
    }

    public DssCarrierAddr getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssCarrierAddr_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssCarrierAddr_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DssCarrierAddr.class, Builder.class);
    }

    public static com.google.protobuf.Parser<DssCarrierAddr> PARSER =
        new com.google.protobuf.AbstractParser<DssCarrierAddr>() {
      public DssCarrierAddr parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @Override
    public com.google.protobuf.Parser<DssCarrierAddr> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string CarrierIp = 1;
    public static final int CARRIERIP_FIELD_NUMBER = 1;
    private Object carrierIp_;
    /**
     * <code>optional string CarrierIp = 1;</code>
     */
    public boolean hasCarrierIp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string CarrierIp = 1;</code>
     */
    public String getCarrierIp() {
      Object ref = carrierIp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          carrierIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string CarrierIp = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCarrierIpBytes() {
      Object ref = carrierIp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        carrierIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string DmzIp = 2;
    public static final int DMZIP_FIELD_NUMBER = 2;
    private Object dmzIp_;
    /**
     * <code>optional string DmzIp = 2;</code>
     */
    public boolean hasDmzIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string DmzIp = 2;</code>
     */
    public String getDmzIp() {
      Object ref = dmzIp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dmzIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string DmzIp = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDmzIpBytes() {
      Object ref = dmzIp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        dmzIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      carrierIp_ = "";
      dmzIp_ = "";
    }
    public static DssCarrierAddr parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DssCarrierAddr parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DssCarrierAddr parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DssCarrierAddr parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DssCarrierAddr parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DssCarrierAddr parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static DssCarrierAddr parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static DssCarrierAddr parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static DssCarrierAddr parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DssCarrierAddr parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DssCarrierAddr prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCarrierAddr}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DssCarrierAddrOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssCarrierAddr_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssCarrierAddr_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DssCarrierAddr.class, Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        carrierIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        dmzIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssCarrierAddr_descriptor;
      }

      public DssCarrierAddr getDefaultInstanceForType() {
        return DssCarrierAddr.getDefaultInstance();
      }

      public DssCarrierAddr build() {
        DssCarrierAddr result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public DssCarrierAddr buildPartial() {
        DssCarrierAddr result = new DssCarrierAddr(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.carrierIp_ = carrierIp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dmzIp_ = dmzIp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional string CarrierIp = 1;
      private Object carrierIp_ = "";
      /**
       * <code>optional string CarrierIp = 1;</code>
       */
      public boolean hasCarrierIp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string CarrierIp = 1;</code>
       */
      public String getCarrierIp() {
        Object ref = carrierIp_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          carrierIp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string CarrierIp = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCarrierIpBytes() {
        Object ref = carrierIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          carrierIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string CarrierIp = 1;</code>
       */
      public Builder setCarrierIp(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        carrierIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string CarrierIp = 1;</code>
       */
      public Builder clearCarrierIp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        carrierIp_ = getDefaultInstance().getCarrierIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string CarrierIp = 1;</code>
       */
      public Builder setCarrierIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        carrierIp_ = value;
        onChanged();
        return this;
      }

      // optional string DmzIp = 2;
      private Object dmzIp_ = "";
      /**
       * <code>optional string DmzIp = 2;</code>
       */
      public boolean hasDmzIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string DmzIp = 2;</code>
       */
      public String getDmzIp() {
        Object ref = dmzIp_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          dmzIp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string DmzIp = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDmzIpBytes() {
        Object ref = dmzIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          dmzIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string DmzIp = 2;</code>
       */
      public Builder setDmzIp(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        dmzIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string DmzIp = 2;</code>
       */
      public Builder clearDmzIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dmzIp_ = getDefaultInstance().getDmzIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string DmzIp = 2;</code>
       */
      public Builder setDmzIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        dmzIp_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCarrierAddr)
    }

    static {
      defaultInstance = new DssCarrierAddr(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCarrierAddr)
  }

  public interface DssNetAddrOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string IpAddr = 1;
    /**
     * <code>optional string IpAddr = 1;</code>
     */
    boolean hasIpAddr();
    /**
     * <code>optional string IpAddr = 1;</code>
     */
    String getIpAddr();
    /**
     * <code>optional string IpAddr = 1;</code>
     */
    com.google.protobuf.ByteString
        getIpAddrBytes();

    // optional uint32 Port = 2;
    /**
     * <code>optional uint32 Port = 2;</code>
     */
    boolean hasPort();
    /**
     * <code>optional uint32 Port = 2;</code>
     */
    int getPort();

    // optional uint32 LostRate = 3;
    /**
     * <code>optional uint32 LostRate = 3;</code>
     */
    boolean hasLostRate();
    /**
     * <code>optional uint32 LostRate = 3;</code>
     */
    int getLostRate();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssNetAddr}
   */
  public static final class DssNetAddr extends
      com.google.protobuf.GeneratedMessage
      implements DssNetAddrOrBuilder {
    // Use DssNetAddr.newBuilder() to construct.
    private DssNetAddr(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssNetAddr(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssNetAddr defaultInstance;
    public static DssNetAddr getDefaultInstance() {
      return defaultInstance;
    }

    public DssNetAddr getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssNetAddr_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssNetAddr_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DssNetAddr.class, Builder.class);
    }

    public static com.google.protobuf.Parser<DssNetAddr> PARSER =
        new com.google.protobuf.AbstractParser<DssNetAddr>() {
      public DssNetAddr parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @Override
    public com.google.protobuf.Parser<DssNetAddr> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string IpAddr = 1;
    public static final int IPADDR_FIELD_NUMBER = 1;
    private Object ipAddr_;
    /**
     * <code>optional string IpAddr = 1;</code>
     */
    public boolean hasIpAddr() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string IpAddr = 1;</code>
     */
    public String getIpAddr() {
      Object ref = ipAddr_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ipAddr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string IpAddr = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIpAddrBytes() {
      Object ref = ipAddr_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        ipAddr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 Port = 2;
    public static final int PORT_FIELD_NUMBER = 2;
    private int port_;
    /**
     * <code>optional uint32 Port = 2;</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 Port = 2;</code>
     */
    public int getPort() {
      return port_;
    }

    // optional uint32 LostRate = 3;
    public static final int LOSTRATE_FIELD_NUMBER = 3;
    private int lostRate_;
    /**
     * <code>optional uint32 LostRate = 3;</code>
     */
    public boolean hasLostRate() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 LostRate = 3;</code>
     */
    public int getLostRate() {
      return lostRate_;
    }

    private void initFields() {
      ipAddr_ = "";
      port_ = 0;
      lostRate_ = 0;
    }
    public static DssNetAddr parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DssNetAddr parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DssNetAddr parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DssNetAddr parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DssNetAddr parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DssNetAddr parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static DssNetAddr parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static DssNetAddr parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static DssNetAddr parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DssNetAddr parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DssNetAddr prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssNetAddr}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DssNetAddrOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssNetAddr_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssNetAddr_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DssNetAddr.class, Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ipAddr_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        lostRate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssNetAddr_descriptor;
      }

      public DssNetAddr getDefaultInstanceForType() {
        return DssNetAddr.getDefaultInstance();
      }

      public DssNetAddr build() {
        DssNetAddr result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public DssNetAddr buildPartial() {
        DssNetAddr result = new DssNetAddr(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ipAddr_ = ipAddr_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lostRate_ = lostRate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional string IpAddr = 1;
      private Object ipAddr_ = "";
      /**
       * <code>optional string IpAddr = 1;</code>
       */
      public boolean hasIpAddr() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string IpAddr = 1;</code>
       */
      public String getIpAddr() {
        Object ref = ipAddr_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ipAddr_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string IpAddr = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIpAddrBytes() {
        Object ref = ipAddr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          ipAddr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string IpAddr = 1;</code>
       */
      public Builder setIpAddr(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ipAddr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string IpAddr = 1;</code>
       */
      public Builder clearIpAddr() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ipAddr_ = getDefaultInstance().getIpAddr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string IpAddr = 1;</code>
       */
      public Builder setIpAddrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ipAddr_ = value;
        onChanged();
        return this;
      }

      // optional uint32 Port = 2;
      private int port_ ;
      /**
       * <code>optional uint32 Port = 2;</code>
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 Port = 2;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <code>optional uint32 Port = 2;</code>
       */
      public Builder setPort(int value) {
        bitField0_ |= 0x00000002;
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 Port = 2;</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000002);
        port_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 LostRate = 3;
      private int lostRate_ ;
      /**
       * <code>optional uint32 LostRate = 3;</code>
       */
      public boolean hasLostRate() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 LostRate = 3;</code>
       */
      public int getLostRate() {
        return lostRate_;
      }
      /**
       * <code>optional uint32 LostRate = 3;</code>
       */
      public Builder setLostRate(int value) {
        bitField0_ |= 0x00000004;
        lostRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 LostRate = 3;</code>
       */
      public Builder clearLostRate() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lostRate_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssNetAddr)
    }

    static {
      defaultInstance = new DssNetAddr(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssNetAddr)
  }

  public interface DssFixedPtOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool isfixed = 1;
    /**
     * <code>optional bool isfixed = 1;</code>
     */
    boolean hasIsfixed();
    /**
     * <code>optional bool isfixed = 1;</code>
     */
    boolean getIsfixed();

    // optional uint32 type = 2;
    /**
     * <code>optional uint32 type = 2;</code>
     */
    boolean hasType();
    /**
     * <code>optional uint32 type = 2;</code>
     */
    int getType();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssFixedPt}
   */
  public static final class DssFixedPt extends
      com.google.protobuf.GeneratedMessage
      implements DssFixedPtOrBuilder {
    // Use DssFixedPt.newBuilder() to construct.
    private DssFixedPt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssFixedPt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssFixedPt defaultInstance;
    public static DssFixedPt getDefaultInstance() {
      return defaultInstance;
    }

    public DssFixedPt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssFixedPt_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssFixedPt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DssFixedPt.class, Builder.class);
    }

    public static com.google.protobuf.Parser<DssFixedPt> PARSER =
        new com.google.protobuf.AbstractParser<DssFixedPt>() {
      public DssFixedPt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @Override
    public com.google.protobuf.Parser<DssFixedPt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool isfixed = 1;
    public static final int ISFIXED_FIELD_NUMBER = 1;
    private boolean isfixed_;
    /**
     * <code>optional bool isfixed = 1;</code>
     */
    public boolean hasIsfixed() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool isfixed = 1;</code>
     */
    public boolean getIsfixed() {
      return isfixed_;
    }

    // optional uint32 type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>optional uint32 type = 2;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 type = 2;</code>
     */
    public int getType() {
      return type_;
    }

    private void initFields() {
      isfixed_ = false;
      type_ = 0;
    }
    public static DssFixedPt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DssFixedPt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DssFixedPt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DssFixedPt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DssFixedPt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DssFixedPt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static DssFixedPt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static DssFixedPt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static DssFixedPt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DssFixedPt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DssFixedPt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssFixedPt}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DssFixedPtOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssFixedPt_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssFixedPt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DssFixedPt.class, Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        isfixed_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssFixedPt_descriptor;
      }

      public DssFixedPt getDefaultInstanceForType() {
        return DssFixedPt.getDefaultInstance();
      }

      public DssFixedPt build() {
        DssFixedPt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public DssFixedPt buildPartial() {
        DssFixedPt result = new DssFixedPt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isfixed_ = isfixed_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional bool isfixed = 1;
      private boolean isfixed_ ;
      /**
       * <code>optional bool isfixed = 1;</code>
       */
      public boolean hasIsfixed() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool isfixed = 1;</code>
       */
      public boolean getIsfixed() {
        return isfixed_;
      }
      /**
       * <code>optional bool isfixed = 1;</code>
       */
      public Builder setIsfixed(boolean value) {
        bitField0_ |= 0x00000001;
        isfixed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isfixed = 1;</code>
       */
      public Builder clearIsfixed() {
        bitField0_ = (bitField0_ & ~0x00000001);
        isfixed_ = false;
        onChanged();
        return this;
      }

      // optional uint32 type = 2;
      private int type_ ;
      /**
       * <code>optional uint32 type = 2;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 type = 2;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional uint32 type = 2;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 type = 2;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssFixedPt)
    }

    static {
      defaultInstance = new DssFixedPt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssFixedPt)
  }

  public interface DssSecKeyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 keytype = 1;
    /**
     * <code>optional uint32 keytype = 1;</code>
     */
    boolean hasKeytype();
    /**
     * <code>optional uint32 keytype = 1;</code>
     */
    int getKeytype();

    // optional uint32 keylen = 2;
    /**
     * <code>optional uint32 keylen = 2;</code>
     */
    boolean hasKeylen();
    /**
     * <code>optional uint32 keylen = 2;</code>
     */
    int getKeylen();

    // optional bytes key = 3;
    /**
     * <code>optional bytes key = 3;</code>
     */
    boolean hasKey();
    /**
     * <code>optional bytes key = 3;</code>
     */
    com.google.protobuf.ByteString getKey();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssSecKey}
   */
  public static final class DssSecKey extends
      com.google.protobuf.GeneratedMessage
      implements DssSecKeyOrBuilder {
    // Use DssSecKey.newBuilder() to construct.
    private DssSecKey(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssSecKey(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssSecKey defaultInstance;
    public static DssSecKey getDefaultInstance() {
      return defaultInstance;
    }

    public DssSecKey getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssSecKey_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssSecKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DssSecKey.class, Builder.class);
    }

    public static com.google.protobuf.Parser<DssSecKey> PARSER =
        new com.google.protobuf.AbstractParser<DssSecKey>() {
      public DssSecKey parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @Override
    public com.google.protobuf.Parser<DssSecKey> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 keytype = 1;
    public static final int KEYTYPE_FIELD_NUMBER = 1;
    private int keytype_;
    /**
     * <code>optional uint32 keytype = 1;</code>
     */
    public boolean hasKeytype() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 keytype = 1;</code>
     */
    public int getKeytype() {
      return keytype_;
    }

    // optional uint32 keylen = 2;
    public static final int KEYLEN_FIELD_NUMBER = 2;
    private int keylen_;
    /**
     * <code>optional uint32 keylen = 2;</code>
     */
    public boolean hasKeylen() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 keylen = 2;</code>
     */
    public int getKeylen() {
      return keylen_;
    }

    // optional bytes key = 3;
    public static final int KEY_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString key_;
    /**
     * <code>optional bytes key = 3;</code>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes key = 3;</code>
     */
    public com.google.protobuf.ByteString getKey() {
      return key_;
    }

    private void initFields() {
      keytype_ = 0;
      keylen_ = 0;
      key_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static DssSecKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DssSecKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DssSecKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DssSecKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DssSecKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DssSecKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static DssSecKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static DssSecKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static DssSecKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DssSecKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DssSecKey prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssSecKey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DssSecKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssSecKey_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssSecKey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DssSecKey.class, Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keytype_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        keylen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        key_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssSecKey_descriptor;
      }

      public DssSecKey getDefaultInstanceForType() {
        return DssSecKey.getDefaultInstance();
      }

      public DssSecKey build() {
        DssSecKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public DssSecKey buildPartial() {
        DssSecKey result = new DssSecKey(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keytype_ = keytype_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.keylen_ = keylen_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.key_ = key_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 keytype = 1;
      private int keytype_ ;
      /**
       * <code>optional uint32 keytype = 1;</code>
       */
      public boolean hasKeytype() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 keytype = 1;</code>
       */
      public int getKeytype() {
        return keytype_;
      }
      /**
       * <code>optional uint32 keytype = 1;</code>
       */
      public Builder setKeytype(int value) {
        bitField0_ |= 0x00000001;
        keytype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 keytype = 1;</code>
       */
      public Builder clearKeytype() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keytype_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 keylen = 2;
      private int keylen_ ;
      /**
       * <code>optional uint32 keylen = 2;</code>
       */
      public boolean hasKeylen() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 keylen = 2;</code>
       */
      public int getKeylen() {
        return keylen_;
      }
      /**
       * <code>optional uint32 keylen = 2;</code>
       */
      public Builder setKeylen(int value) {
        bitField0_ |= 0x00000002;
        keylen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 keylen = 2;</code>
       */
      public Builder clearKeylen() {
        bitField0_ = (bitField0_ & ~0x00000002);
        keylen_ = 0;
        onChanged();
        return this;
      }

      // optional bytes key = 3;
      private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes key = 3;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes key = 3;</code>
       */
      public com.google.protobuf.ByteString getKey() {
        return key_;
      }
      /**
       * <code>optional bytes key = 3;</code>
       */
      public Builder setKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes key = 3;</code>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000004);
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssSecKey)
    }

    static {
      defaultInstance = new DssSecKey(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssSecKey)
  }

  public interface DssCipherOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 cipherswitch = 1;
    /**
     * <code>optional uint32 cipherswitch = 1;</code>
     */
    boolean hasCipherswitch();
    /**
     * <code>optional uint32 cipherswitch = 1;</code>
     */
    int getCipherswitch();

    // optional uint32 ciphertype = 2;
    /**
     * <code>optional uint32 ciphertype = 2;</code>
     */
    boolean hasCiphertype();
    /**
     * <code>optional uint32 ciphertype = 2;</code>
     */
    int getCiphertype();

    // optional uint32 cipherpolicy = 3;
    /**
     * <code>optional uint32 cipherpolicy = 3;</code>
     */
    boolean hasCipherpolicy();
    /**
     * <code>optional uint32 cipherpolicy = 3;</code>
     */
    int getCipherpolicy();

    // optional bool iscipher = 4;
    /**
     * <code>optional bool iscipher = 4;</code>
     */
    boolean hasIscipher();
    /**
     * <code>optional bool iscipher = 4;</code>
     */
    boolean getIscipher();

    // optional uint32 cipheralgid = 5;
    /**
     * <code>optional uint32 cipheralgid = 5;</code>
     */
    boolean hasCipheralgid();
    /**
     * <code>optional uint32 cipheralgid = 5;</code>
     */
    int getCipheralgid();

    // optional uint32 ciphermode = 6;
    /**
     * <code>optional uint32 ciphermode = 6;</code>
     */
    boolean hasCiphermode();
    /**
     * <code>optional uint32 ciphermode = 6;</code>
     */
    int getCiphermode();

    // optional .com.kedacom.ops.flink.etl.proto.DssSecKey seckey = 7;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey seckey = 7;</code>
     */
    boolean hasSeckey();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey seckey = 7;</code>
     */
    DssSecKey getSeckey();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey seckey = 7;</code>
     */
    DssSecKeyOrBuilder getSeckeyOrBuilder();

    // optional bool isauth = 8;
    /**
     * <code>optional bool isauth = 8;</code>
     */
    boolean hasIsauth();
    /**
     * <code>optional bool isauth = 8;</code>
     */
    boolean getIsauth();

    // optional uint32 authalgid = 9;
    /**
     * <code>optional uint32 authalgid = 9;</code>
     */
    boolean hasAuthalgid();
    /**
     * <code>optional uint32 authalgid = 9;</code>
     */
    int getAuthalgid();

    // optional uint32 authtaglen = 10;
    /**
     * <code>optional uint32 authtaglen = 10;</code>
     */
    boolean hasAuthtaglen();
    /**
     * <code>optional uint32 authtaglen = 10;</code>
     */
    int getAuthtaglen();

    // optional .com.kedacom.ops.flink.etl.proto.DssSecKey authkey = 11;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey authkey = 11;</code>
     */
    boolean hasAuthkey();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey authkey = 11;</code>
     */
    DssSecKey getAuthkey();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey authkey = 11;</code>
     */
    DssSecKeyOrBuilder getAuthkeyOrBuilder();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCipher}
   */
  public static final class DssCipher extends
      com.google.protobuf.GeneratedMessage
      implements DssCipherOrBuilder {
    // Use DssCipher.newBuilder() to construct.
    private DssCipher(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCipher(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCipher defaultInstance;
    public static DssCipher getDefaultInstance() {
      return defaultInstance;
    }

    public DssCipher getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssCipher_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssCipher_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DssCipher.class, Builder.class);
    }

    public static com.google.protobuf.Parser<DssCipher> PARSER =
        new com.google.protobuf.AbstractParser<DssCipher>() {
      public DssCipher parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @Override
    public com.google.protobuf.Parser<DssCipher> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 cipherswitch = 1;
    public static final int CIPHERSWITCH_FIELD_NUMBER = 1;
    private int cipherswitch_;
    /**
     * <code>optional uint32 cipherswitch = 1;</code>
     */
    public boolean hasCipherswitch() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 cipherswitch = 1;</code>
     */
    public int getCipherswitch() {
      return cipherswitch_;
    }

    // optional uint32 ciphertype = 2;
    public static final int CIPHERTYPE_FIELD_NUMBER = 2;
    private int ciphertype_;
    /**
     * <code>optional uint32 ciphertype = 2;</code>
     */
    public boolean hasCiphertype() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ciphertype = 2;</code>
     */
    public int getCiphertype() {
      return ciphertype_;
    }

    // optional uint32 cipherpolicy = 3;
    public static final int CIPHERPOLICY_FIELD_NUMBER = 3;
    private int cipherpolicy_;
    /**
     * <code>optional uint32 cipherpolicy = 3;</code>
     */
    public boolean hasCipherpolicy() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 cipherpolicy = 3;</code>
     */
    public int getCipherpolicy() {
      return cipherpolicy_;
    }

    // optional bool iscipher = 4;
    public static final int ISCIPHER_FIELD_NUMBER = 4;
    private boolean iscipher_;
    /**
     * <code>optional bool iscipher = 4;</code>
     */
    public boolean hasIscipher() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool iscipher = 4;</code>
     */
    public boolean getIscipher() {
      return iscipher_;
    }

    // optional uint32 cipheralgid = 5;
    public static final int CIPHERALGID_FIELD_NUMBER = 5;
    private int cipheralgid_;
    /**
     * <code>optional uint32 cipheralgid = 5;</code>
     */
    public boolean hasCipheralgid() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 cipheralgid = 5;</code>
     */
    public int getCipheralgid() {
      return cipheralgid_;
    }

    // optional uint32 ciphermode = 6;
    public static final int CIPHERMODE_FIELD_NUMBER = 6;
    private int ciphermode_;
    /**
     * <code>optional uint32 ciphermode = 6;</code>
     */
    public boolean hasCiphermode() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 ciphermode = 6;</code>
     */
    public int getCiphermode() {
      return ciphermode_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssSecKey seckey = 7;
    public static final int SECKEY_FIELD_NUMBER = 7;
    private DssSecKey seckey_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey seckey = 7;</code>
     */
    public boolean hasSeckey() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey seckey = 7;</code>
     */
    public DssSecKey getSeckey() {
      return seckey_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey seckey = 7;</code>
     */
    public DssSecKeyOrBuilder getSeckeyOrBuilder() {
      return seckey_;
    }

    // optional bool isauth = 8;
    public static final int ISAUTH_FIELD_NUMBER = 8;
    private boolean isauth_;
    /**
     * <code>optional bool isauth = 8;</code>
     */
    public boolean hasIsauth() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool isauth = 8;</code>
     */
    public boolean getIsauth() {
      return isauth_;
    }

    // optional uint32 authalgid = 9;
    public static final int AUTHALGID_FIELD_NUMBER = 9;
    private int authalgid_;
    /**
     * <code>optional uint32 authalgid = 9;</code>
     */
    public boolean hasAuthalgid() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 authalgid = 9;</code>
     */
    public int getAuthalgid() {
      return authalgid_;
    }

    // optional uint32 authtaglen = 10;
    public static final int AUTHTAGLEN_FIELD_NUMBER = 10;
    private int authtaglen_;
    /**
     * <code>optional uint32 authtaglen = 10;</code>
     */
    public boolean hasAuthtaglen() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 authtaglen = 10;</code>
     */
    public int getAuthtaglen() {
      return authtaglen_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssSecKey authkey = 11;
    public static final int AUTHKEY_FIELD_NUMBER = 11;
    private DssSecKey authkey_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey authkey = 11;</code>
     */
    public boolean hasAuthkey() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey authkey = 11;</code>
     */
    public DssSecKey getAuthkey() {
      return authkey_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey authkey = 11;</code>
     */
    public DssSecKeyOrBuilder getAuthkeyOrBuilder() {
      return authkey_;
    }

    private void initFields() {
      cipherswitch_ = 0;
      ciphertype_ = 0;
      cipherpolicy_ = 0;
      iscipher_ = false;
      cipheralgid_ = 0;
      ciphermode_ = 0;
      seckey_ = DssSecKey.getDefaultInstance();
      isauth_ = false;
      authalgid_ = 0;
      authtaglen_ = 0;
      authkey_ = DssSecKey.getDefaultInstance();
    }
    public static DssCipher parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DssCipher parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DssCipher parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DssCipher parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DssCipher parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DssCipher parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static DssCipher parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static DssCipher parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static DssCipher parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DssCipher parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DssCipher prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCipher}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DssCipherOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssCipher_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssCipher_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DssCipher.class, Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSeckeyFieldBuilder();
          getAuthkeyFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cipherswitch_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ciphertype_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cipherpolicy_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        iscipher_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        cipheralgid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        ciphermode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (seckeyBuilder_ == null) {
          seckey_ = DssSecKey.getDefaultInstance();
        } else {
          seckeyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        isauth_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        authalgid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        authtaglen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        if (authkeyBuilder_ == null) {
          authkey_ = DssSecKey.getDefaultInstance();
        } else {
          authkeyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Dssevstruct.internal_static_com_kedacom_ops_flink_etl_proto_DssCipher_descriptor;
      }

      public DssCipher getDefaultInstanceForType() {
        return DssCipher.getDefaultInstance();
      }

      public DssCipher build() {
        DssCipher result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public DssCipher buildPartial() {
        DssCipher result = new DssCipher(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cipherswitch_ = cipherswitch_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ciphertype_ = ciphertype_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cipherpolicy_ = cipherpolicy_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.iscipher_ = iscipher_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.cipheralgid_ = cipheralgid_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.ciphermode_ = ciphermode_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (seckeyBuilder_ == null) {
          result.seckey_ = seckey_;
        } else {
          result.seckey_ = seckeyBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.isauth_ = isauth_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.authalgid_ = authalgid_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.authtaglen_ = authtaglen_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (authkeyBuilder_ == null) {
          result.authkey_ = authkey_;
        } else {
          result.authkey_ = authkeyBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 cipherswitch = 1;
      private int cipherswitch_ ;
      /**
       * <code>optional uint32 cipherswitch = 1;</code>
       */
      public boolean hasCipherswitch() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 cipherswitch = 1;</code>
       */
      public int getCipherswitch() {
        return cipherswitch_;
      }
      /**
       * <code>optional uint32 cipherswitch = 1;</code>
       */
      public Builder setCipherswitch(int value) {
        bitField0_ |= 0x00000001;
        cipherswitch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 cipherswitch = 1;</code>
       */
      public Builder clearCipherswitch() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cipherswitch_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ciphertype = 2;
      private int ciphertype_ ;
      /**
       * <code>optional uint32 ciphertype = 2;</code>
       */
      public boolean hasCiphertype() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 ciphertype = 2;</code>
       */
      public int getCiphertype() {
        return ciphertype_;
      }
      /**
       * <code>optional uint32 ciphertype = 2;</code>
       */
      public Builder setCiphertype(int value) {
        bitField0_ |= 0x00000002;
        ciphertype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ciphertype = 2;</code>
       */
      public Builder clearCiphertype() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ciphertype_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 cipherpolicy = 3;
      private int cipherpolicy_ ;
      /**
       * <code>optional uint32 cipherpolicy = 3;</code>
       */
      public boolean hasCipherpolicy() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 cipherpolicy = 3;</code>
       */
      public int getCipherpolicy() {
        return cipherpolicy_;
      }
      /**
       * <code>optional uint32 cipherpolicy = 3;</code>
       */
      public Builder setCipherpolicy(int value) {
        bitField0_ |= 0x00000004;
        cipherpolicy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 cipherpolicy = 3;</code>
       */
      public Builder clearCipherpolicy() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cipherpolicy_ = 0;
        onChanged();
        return this;
      }

      // optional bool iscipher = 4;
      private boolean iscipher_ ;
      /**
       * <code>optional bool iscipher = 4;</code>
       */
      public boolean hasIscipher() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool iscipher = 4;</code>
       */
      public boolean getIscipher() {
        return iscipher_;
      }
      /**
       * <code>optional bool iscipher = 4;</code>
       */
      public Builder setIscipher(boolean value) {
        bitField0_ |= 0x00000008;
        iscipher_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool iscipher = 4;</code>
       */
      public Builder clearIscipher() {
        bitField0_ = (bitField0_ & ~0x00000008);
        iscipher_ = false;
        onChanged();
        return this;
      }

      // optional uint32 cipheralgid = 5;
      private int cipheralgid_ ;
      /**
       * <code>optional uint32 cipheralgid = 5;</code>
       */
      public boolean hasCipheralgid() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 cipheralgid = 5;</code>
       */
      public int getCipheralgid() {
        return cipheralgid_;
      }
      /**
       * <code>optional uint32 cipheralgid = 5;</code>
       */
      public Builder setCipheralgid(int value) {
        bitField0_ |= 0x00000010;
        cipheralgid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 cipheralgid = 5;</code>
       */
      public Builder clearCipheralgid() {
        bitField0_ = (bitField0_ & ~0x00000010);
        cipheralgid_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ciphermode = 6;
      private int ciphermode_ ;
      /**
       * <code>optional uint32 ciphermode = 6;</code>
       */
      public boolean hasCiphermode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 ciphermode = 6;</code>
       */
      public int getCiphermode() {
        return ciphermode_;
      }
      /**
       * <code>optional uint32 ciphermode = 6;</code>
       */
      public Builder setCiphermode(int value) {
        bitField0_ |= 0x00000020;
        ciphermode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ciphermode = 6;</code>
       */
      public Builder clearCiphermode() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ciphermode_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssSecKey seckey = 7;
      private DssSecKey seckey_ = DssSecKey.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DssSecKey, DssSecKey.Builder, DssSecKeyOrBuilder> seckeyBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey seckey = 7;</code>
       */
      public boolean hasSeckey() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey seckey = 7;</code>
       */
      public DssSecKey getSeckey() {
        if (seckeyBuilder_ == null) {
          return seckey_;
        } else {
          return seckeyBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey seckey = 7;</code>
       */
      public Builder setSeckey(DssSecKey value) {
        if (seckeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          seckey_ = value;
          onChanged();
        } else {
          seckeyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey seckey = 7;</code>
       */
      public Builder setSeckey(
          DssSecKey.Builder builderForValue) {
        if (seckeyBuilder_ == null) {
          seckey_ = builderForValue.build();
          onChanged();
        } else {
          seckeyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey seckey = 7;</code>
       */
      public Builder mergeSeckey(DssSecKey value) {
        if (seckeyBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              seckey_ != DssSecKey.getDefaultInstance()) {
            seckey_ =
              DssSecKey.newBuilder(seckey_).mergeFrom(value).buildPartial();
          } else {
            seckey_ = value;
          }
          onChanged();
        } else {
          seckeyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey seckey = 7;</code>
       */
      public Builder clearSeckey() {
        if (seckeyBuilder_ == null) {
          seckey_ = DssSecKey.getDefaultInstance();
          onChanged();
        } else {
          seckeyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey seckey = 7;</code>
       */
      public DssSecKey.Builder getSeckeyBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getSeckeyFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey seckey = 7;</code>
       */
      public DssSecKeyOrBuilder getSeckeyOrBuilder() {
        if (seckeyBuilder_ != null) {
          return seckeyBuilder_.getMessageOrBuilder();
        } else {
          return seckey_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey seckey = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          DssSecKey, DssSecKey.Builder, DssSecKeyOrBuilder>
          getSeckeyFieldBuilder() {
        if (seckeyBuilder_ == null) {
          seckeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DssSecKey, DssSecKey.Builder, DssSecKeyOrBuilder>(
                  seckey_,
                  getParentForChildren(),
                  isClean());
          seckey_ = null;
        }
        return seckeyBuilder_;
      }

      // optional bool isauth = 8;
      private boolean isauth_ ;
      /**
       * <code>optional bool isauth = 8;</code>
       */
      public boolean hasIsauth() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool isauth = 8;</code>
       */
      public boolean getIsauth() {
        return isauth_;
      }
      /**
       * <code>optional bool isauth = 8;</code>
       */
      public Builder setIsauth(boolean value) {
        bitField0_ |= 0x00000080;
        isauth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isauth = 8;</code>
       */
      public Builder clearIsauth() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isauth_ = false;
        onChanged();
        return this;
      }

      // optional uint32 authalgid = 9;
      private int authalgid_ ;
      /**
       * <code>optional uint32 authalgid = 9;</code>
       */
      public boolean hasAuthalgid() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 authalgid = 9;</code>
       */
      public int getAuthalgid() {
        return authalgid_;
      }
      /**
       * <code>optional uint32 authalgid = 9;</code>
       */
      public Builder setAuthalgid(int value) {
        bitField0_ |= 0x00000100;
        authalgid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 authalgid = 9;</code>
       */
      public Builder clearAuthalgid() {
        bitField0_ = (bitField0_ & ~0x00000100);
        authalgid_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 authtaglen = 10;
      private int authtaglen_ ;
      /**
       * <code>optional uint32 authtaglen = 10;</code>
       */
      public boolean hasAuthtaglen() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 authtaglen = 10;</code>
       */
      public int getAuthtaglen() {
        return authtaglen_;
      }
      /**
       * <code>optional uint32 authtaglen = 10;</code>
       */
      public Builder setAuthtaglen(int value) {
        bitField0_ |= 0x00000200;
        authtaglen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 authtaglen = 10;</code>
       */
      public Builder clearAuthtaglen() {
        bitField0_ = (bitField0_ & ~0x00000200);
        authtaglen_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssSecKey authkey = 11;
      private DssSecKey authkey_ = DssSecKey.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DssSecKey, DssSecKey.Builder, DssSecKeyOrBuilder> authkeyBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey authkey = 11;</code>
       */
      public boolean hasAuthkey() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey authkey = 11;</code>
       */
      public DssSecKey getAuthkey() {
        if (authkeyBuilder_ == null) {
          return authkey_;
        } else {
          return authkeyBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey authkey = 11;</code>
       */
      public Builder setAuthkey(DssSecKey value) {
        if (authkeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          authkey_ = value;
          onChanged();
        } else {
          authkeyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey authkey = 11;</code>
       */
      public Builder setAuthkey(
          DssSecKey.Builder builderForValue) {
        if (authkeyBuilder_ == null) {
          authkey_ = builderForValue.build();
          onChanged();
        } else {
          authkeyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey authkey = 11;</code>
       */
      public Builder mergeAuthkey(DssSecKey value) {
        if (authkeyBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              authkey_ != DssSecKey.getDefaultInstance()) {
            authkey_ =
              DssSecKey.newBuilder(authkey_).mergeFrom(value).buildPartial();
          } else {
            authkey_ = value;
          }
          onChanged();
        } else {
          authkeyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey authkey = 11;</code>
       */
      public Builder clearAuthkey() {
        if (authkeyBuilder_ == null) {
          authkey_ = DssSecKey.getDefaultInstance();
          onChanged();
        } else {
          authkeyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey authkey = 11;</code>
       */
      public DssSecKey.Builder getAuthkeyBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getAuthkeyFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey authkey = 11;</code>
       */
      public DssSecKeyOrBuilder getAuthkeyOrBuilder() {
        if (authkeyBuilder_ != null) {
          return authkeyBuilder_.getMessageOrBuilder();
        } else {
          return authkey_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey authkey = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          DssSecKey, DssSecKey.Builder, DssSecKeyOrBuilder>
          getAuthkeyFieldBuilder() {
        if (authkeyBuilder_ == null) {
          authkeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DssSecKey, DssSecKey.Builder, DssSecKeyOrBuilder>(
                  authkey_,
                  getParentForChildren(),
                  isClean());
          authkey_ = null;
        }
        return authkeyBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCipher)
    }

    static {
      defaultInstance = new DssCipher(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCipher)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssMessageWrap_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssMessageWrap_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCarrierAttr_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCarrierAttr_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCarrierAddr_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCarrierAddr_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssNetAddr_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssNetAddr_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssFixedPt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssFixedPt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssSecKey_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssSecKey_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCipher_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCipher_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\021dssevstruct.proto\022\037com.kedacom.ops.fli" +
      "nk.etl.proto\032\017dssevenum.proto\"\234\001\n\016DssMes" +
      "sageWrap\022;\n\005event\030\001 \001(\0162,.com.kedacom.op" +
      "s.flink.etl.proto.CltDssEvent\022\024\n\014message" +
      "_body\030\002 \001(\014\022\017\n\007context\030\003 \001(\014\022\020\n\010masterid" +
      "\030\004 \001(\r\022\024\n\014message_uuid\030\005 \001(\014\"5\n\016DssCarri" +
      "erAttr\022\017\n\007Carrier\030\001 \001(\t\022\022\n\nIsCrossDmz\030\002 " +
      "\001(\010\"2\n\016DssCarrierAddr\022\021\n\tCarrierIp\030\001 \001(\t" +
      "\022\r\n\005DmzIp\030\002 \001(\t\"<\n\nDssNetAddr\022\016\n\006IpAddr\030" +
      "\001 \001(\t\022\014\n\004Port\030\002 \001(\r\022\020\n\010LostRate\030\003 \001(\r\"+\n",
      "\nDssFixedPt\022\017\n\007isfixed\030\001 \001(\010\022\014\n\004type\030\002 \001" +
      "(\r\"9\n\tDssSecKey\022\017\n\007keytype\030\001 \001(\r\022\016\n\006keyl" +
      "en\030\002 \001(\r\022\013\n\003key\030\003 \001(\014\"\266\002\n\tDssCipher\022\024\n\014c" +
      "ipherswitch\030\001 \001(\r\022\022\n\nciphertype\030\002 \001(\r\022\024\n" +
      "\014cipherpolicy\030\003 \001(\r\022\020\n\010iscipher\030\004 \001(\010\022\023\n" +
      "\013cipheralgid\030\005 \001(\r\022\022\n\nciphermode\030\006 \001(\r\022:" +
      "\n\006seckey\030\007 \001(\0132*.com.kedacom.ops.flink.e" +
      "tl.proto.DssSecKey\022\016\n\006isauth\030\010 \001(\010\022\021\n\tau" +
      "thalgid\030\t \001(\r\022\022\n\nauthtaglen\030\n \001(\r\022;\n\007aut" +
      "hkey\030\013 \001(\0132*.com.kedacom.ops.flink.etl.p",
      "roto.DssSecKeyB\002H\002P\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_kedacom_ops_flink_etl_proto_DssMessageWrap_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_kedacom_ops_flink_etl_proto_DssMessageWrap_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssMessageWrap_descriptor,
              new String[] { "Event", "MessageBody", "Context", "Masterid", "MessageUuid", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCarrierAttr_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCarrierAttr_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCarrierAttr_descriptor,
              new String[] { "Carrier", "IsCrossDmz", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCarrierAddr_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCarrierAddr_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCarrierAddr_descriptor,
              new String[] { "CarrierIp", "DmzIp", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssNetAddr_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_kedacom_ops_flink_etl_proto_DssNetAddr_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssNetAddr_descriptor,
              new String[] { "IpAddr", "Port", "LostRate", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssFixedPt_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_kedacom_ops_flink_etl_proto_DssFixedPt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssFixedPt_descriptor,
              new String[] { "Isfixed", "Type", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssSecKey_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_kedacom_ops_flink_etl_proto_DssSecKey_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssSecKey_descriptor,
              new String[] { "Keytype", "Keylen", "Key", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCipher_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCipher_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCipher_descriptor,
              new String[] { "Cipherswitch", "Ciphertype", "Cipherpolicy", "Iscipher", "Cipheralgid", "Ciphermode", "Seckey", "Isauth", "Authalgid", "Authtaglen", "Authkey", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.kedacom.ops.flink.etl.proto.Dssevenum.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
