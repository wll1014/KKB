// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dssevent.proto

package com.kedacom.ops.flink.etl.proto;

public final class Dssevent {
  private Dssevent() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CltDssConnectMasterReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    boolean hasAlias();
    java.lang.String getAlias();
    /**
     * <code>optional string Alias = 1;</code>
     */
    com.google.protobuf.ByteString
        getAliasBytes();

    // optional string QName = 2;
    /**
     * <code>optional string QName = 2;</code>
     */
    boolean hasQName();
    /**
     * <code>optional string QName = 2;</code>
     */
    java.lang.String getQName();
    /**
     * <code>optional string QName = 2;</code>
     */
    com.google.protobuf.ByteString
        getQNameBytes();

    // optional uint32 Materid = 3;
    /**
     * <code>optional uint32 Materid = 3;</code>
     */
    boolean hasMaterid();
    /**
     * <code>optional uint32 Materid = 3;</code>
     */
    int getMaterid();

    // optional string ProcessName = 4;
    /**
     * <code>optional string ProcessName = 4;</code>
     */
    boolean hasProcessName();
    /**
     * <code>optional string ProcessName = 4;</code>
     */
    java.lang.String getProcessName();
    /**
     * <code>optional string ProcessName = 4;</code>
     */
    com.google.protobuf.ByteString
        getProcessNameBytes();

    // optional string AppMoid = 5;
    /**
     * <code>optional string AppMoid = 5;</code>
     */
    boolean hasAppMoid();
    /**
     * <code>optional string AppMoid = 5;</code>
     */
    java.lang.String getAppMoid();
    /**
     * <code>optional string AppMoid = 5;</code>
     */
    com.google.protobuf.ByteString
        getAppMoidBytes();

    // optional bool bFirstConnect = 6 [default = false];
    /**
     * <code>optional bool bFirstConnect = 6 [default = false];</code>
     */
    boolean hasBFirstConnect();
    /**
     * <code>optional bool bFirstConnect = 6 [default = false];</code>
     */
    boolean getBFirstConnect();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssConnectMasterReq}
   */
  public static final class CltDssConnectMasterReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssConnectMasterReqOrBuilder {
    // Use CltDssConnectMasterReq.newBuilder() to construct.
    private CltDssConnectMasterReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssConnectMasterReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssConnectMasterReq defaultInstance;
    public static CltDssConnectMasterReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssConnectMasterReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssConnectMasterReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssConnectMasterReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssConnectMasterReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssConnectMasterReq>() {
      public CltDssConnectMasterReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssConnectMasterReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string Alias = 1;
    public static final int ALIAS_FIELD_NUMBER = 1;
    private java.lang.Object alias_;
    /**
     * <code>optional string Alias = 1;</code>
     */
    public boolean hasAlias() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string Alias = 1;</code>
     */
    public java.lang.String getAlias() {
      java.lang.Object ref = alias_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          alias_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string Alias = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAliasBytes() {
      java.lang.Object ref = alias_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        alias_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string QName = 2;
    public static final int QNAME_FIELD_NUMBER = 2;
    private java.lang.Object qName_;
    /**
     * <code>optional string QName = 2;</code>
     */
    public boolean hasQName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string QName = 2;</code>
     */
    public java.lang.String getQName() {
      java.lang.Object ref = qName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          qName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string QName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getQNameBytes() {
      java.lang.Object ref = qName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        qName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 Materid = 3;
    public static final int MATERID_FIELD_NUMBER = 3;
    private int materid_;
    /**
     * <code>optional uint32 Materid = 3;</code>
     */
    public boolean hasMaterid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 Materid = 3;</code>
     */
    public int getMaterid() {
      return materid_;
    }

    // optional string ProcessName = 4;
    public static final int PROCESSNAME_FIELD_NUMBER = 4;
    private java.lang.Object processName_;
    /**
     * <code>optional string ProcessName = 4;</code>
     */
    public boolean hasProcessName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string ProcessName = 4;</code>
     */
    public java.lang.String getProcessName() {
      java.lang.Object ref = processName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          processName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ProcessName = 4;</code>
     */
    public com.google.protobuf.ByteString
        getProcessNameBytes() {
      java.lang.Object ref = processName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        processName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string AppMoid = 5;
    public static final int APPMOID_FIELD_NUMBER = 5;
    private java.lang.Object appMoid_;
    /**
     * <code>optional string AppMoid = 5;</code>
     */
    public boolean hasAppMoid() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string AppMoid = 5;</code>
     */
    public java.lang.String getAppMoid() {
      java.lang.Object ref = appMoid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          appMoid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string AppMoid = 5;</code>
     */
    public com.google.protobuf.ByteString
        getAppMoidBytes() {
      java.lang.Object ref = appMoid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        appMoid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool bFirstConnect = 6 [default = false];
    public static final int BFIRSTCONNECT_FIELD_NUMBER = 6;
    private boolean bFirstConnect_;
    /**
     * <code>optional bool bFirstConnect = 6 [default = false];</code>
     */
    public boolean hasBFirstConnect() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool bFirstConnect = 6 [default = false];</code>
     */
    public boolean getBFirstConnect() {
      return bFirstConnect_;
    }

    private void initFields() {
      alias_ = "";
      qName_ = "";
      materid_ = 0;
      processName_ = "";
      appMoid_ = "";
      bFirstConnect_ = false;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssConnectMasterReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssConnectMasterReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssConnectMasterReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        alias_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        qName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        materid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        processName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        appMoid_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        bFirstConnect_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssConnectMasterReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssConnectMasterReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.alias_ = alias_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.qName_ = qName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.materid_ = materid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.processName_ = processName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.appMoid_ = appMoid_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.bFirstConnect_ = bFirstConnect_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional string Alias = 1;
      private java.lang.Object alias_ = "";
      /**
       * <code>optional string Alias = 1;</code>
       */
      public boolean hasAlias() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public java.lang.String getAlias() {
        java.lang.Object ref = alias_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          alias_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAliasBytes() {
        java.lang.Object ref = alias_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          alias_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public Builder setAlias(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        alias_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public Builder clearAlias() {
        bitField0_ = (bitField0_ & ~0x00000001);
        alias_ = getDefaultInstance().getAlias();
        onChanged();
        return this;
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public Builder setAliasBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        alias_ = value;
        onChanged();
        return this;
      }

      // optional string QName = 2;
      private java.lang.Object qName_ = "";
      /**
       * <code>optional string QName = 2;</code>
       */
      public boolean hasQName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string QName = 2;</code>
       */
      public java.lang.String getQName() {
        java.lang.Object ref = qName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          qName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string QName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getQNameBytes() {
        java.lang.Object ref = qName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          qName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string QName = 2;</code>
       */
      public Builder setQName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        qName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string QName = 2;</code>
       */
      public Builder clearQName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        qName_ = getDefaultInstance().getQName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string QName = 2;</code>
       */
      public Builder setQNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        qName_ = value;
        onChanged();
        return this;
      }

      // optional uint32 Materid = 3;
      private int materid_ ;
      /**
       * <code>optional uint32 Materid = 3;</code>
       */
      public boolean hasMaterid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 Materid = 3;</code>
       */
      public int getMaterid() {
        return materid_;
      }
      /**
       * <code>optional uint32 Materid = 3;</code>
       */
      public Builder setMaterid(int value) {
        bitField0_ |= 0x00000004;
        materid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 Materid = 3;</code>
       */
      public Builder clearMaterid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        materid_ = 0;
        onChanged();
        return this;
      }

      // optional string ProcessName = 4;
      private java.lang.Object processName_ = "";
      /**
       * <code>optional string ProcessName = 4;</code>
       */
      public boolean hasProcessName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string ProcessName = 4;</code>
       */
      public java.lang.String getProcessName() {
        java.lang.Object ref = processName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          processName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ProcessName = 4;</code>
       */
      public com.google.protobuf.ByteString
          getProcessNameBytes() {
        java.lang.Object ref = processName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          processName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ProcessName = 4;</code>
       */
      public Builder setProcessName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        processName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ProcessName = 4;</code>
       */
      public Builder clearProcessName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        processName_ = getDefaultInstance().getProcessName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ProcessName = 4;</code>
       */
      public Builder setProcessNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        processName_ = value;
        onChanged();
        return this;
      }

      // optional string AppMoid = 5;
      private java.lang.Object appMoid_ = "";
      /**
       * <code>optional string AppMoid = 5;</code>
       */
      public boolean hasAppMoid() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string AppMoid = 5;</code>
       */
      public java.lang.String getAppMoid() {
        java.lang.Object ref = appMoid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          appMoid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string AppMoid = 5;</code>
       */
      public com.google.protobuf.ByteString
          getAppMoidBytes() {
        java.lang.Object ref = appMoid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          appMoid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string AppMoid = 5;</code>
       */
      public Builder setAppMoid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        appMoid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string AppMoid = 5;</code>
       */
      public Builder clearAppMoid() {
        bitField0_ = (bitField0_ & ~0x00000010);
        appMoid_ = getDefaultInstance().getAppMoid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string AppMoid = 5;</code>
       */
      public Builder setAppMoidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        appMoid_ = value;
        onChanged();
        return this;
      }

      // optional bool bFirstConnect = 6 [default = false];
      private boolean bFirstConnect_ ;
      /**
       * <code>optional bool bFirstConnect = 6 [default = false];</code>
       */
      public boolean hasBFirstConnect() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool bFirstConnect = 6 [default = false];</code>
       */
      public boolean getBFirstConnect() {
        return bFirstConnect_;
      }
      /**
       * <code>optional bool bFirstConnect = 6 [default = false];</code>
       */
      public Builder setBFirstConnect(boolean value) {
        bitField0_ |= 0x00000020;
        bFirstConnect_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool bFirstConnect = 6 [default = false];</code>
       */
      public Builder clearBFirstConnect() {
        bitField0_ = (bitField0_ & ~0x00000020);
        bFirstConnect_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssConnectMasterReq)
    }

    static {
      defaultInstance = new CltDssConnectMasterReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssConnectMasterReq)
  }

  public interface DssCltConnectMasterAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string Alias = 1;
    /**
     * <code>optional string Alias = 1;</code>
     */
    boolean hasAlias();
    /**
     * <code>optional string Alias = 1;</code>
     */
    java.lang.String getAlias();
    /**
     * <code>optional string Alias = 1;</code>
     */
    com.google.protobuf.ByteString
        getAliasBytes();

    // optional uint32 ClientId = 2;
    /**
     * <code>optional uint32 ClientId = 2;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 2;</code>
     */
    int getClientId();

    // optional uint32 ClientTick = 3;
    /**
     * <code>optional uint32 ClientTick = 3;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 3;</code>
     */
    int getClientTick();

    // optional uint32 MasterId = 4;
    /**
     * <code>optional uint32 MasterId = 4;</code>
     */
    boolean hasMasterId();
    /**
     * <code>optional uint32 MasterId = 4;</code>
     */
    int getMasterId();

    // optional uint32 KeepaliveTime = 5;
    /**
     * <code>optional uint32 KeepaliveTime = 5;</code>
     *
     * <pre>
     *ms
     * </pre>
     */
    boolean hasKeepaliveTime();
    /**
     * <code>optional uint32 KeepaliveTime = 5;</code>
     *
     * <pre>
     *ms
     * </pre>
     */
    int getKeepaliveTime();

    // optional bool AnyWorker = 6;
    /**
     * <code>optional bool AnyWorker = 6;</code>
     */
    boolean hasAnyWorker();
    /**
     * <code>optional bool AnyWorker = 6;</code>
     */
    boolean getAnyWorker();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltConnectMasterAck}
   */
  public static final class DssCltConnectMasterAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltConnectMasterAckOrBuilder {
    // Use DssCltConnectMasterAck.newBuilder() to construct.
    private DssCltConnectMasterAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltConnectMasterAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltConnectMasterAck defaultInstance;
    public static DssCltConnectMasterAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltConnectMasterAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltConnectMasterAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltConnectMasterAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltConnectMasterAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltConnectMasterAck>() {
      public DssCltConnectMasterAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltConnectMasterAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string Alias = 1;
    public static final int ALIAS_FIELD_NUMBER = 1;
    private java.lang.Object alias_;
    /**
     * <code>optional string Alias = 1;</code>
     */
    public boolean hasAlias() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string Alias = 1;</code>
     */
    public java.lang.String getAlias() {
      java.lang.Object ref = alias_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          alias_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string Alias = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAliasBytes() {
      java.lang.Object ref = alias_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        alias_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 ClientId = 2;
    public static final int CLIENTID_FIELD_NUMBER = 2;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 2;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ClientId = 2;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 ClientTick = 3;
    public static final int CLIENTTICK_FIELD_NUMBER = 3;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 3;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 ClientTick = 3;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    // optional uint32 MasterId = 4;
    public static final int MASTERID_FIELD_NUMBER = 4;
    private int masterId_;
    /**
     * <code>optional uint32 MasterId = 4;</code>
     */
    public boolean hasMasterId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 MasterId = 4;</code>
     */
    public int getMasterId() {
      return masterId_;
    }

    // optional uint32 KeepaliveTime = 5;
    public static final int KEEPALIVETIME_FIELD_NUMBER = 5;
    private int keepaliveTime_;
    /**
     * <code>optional uint32 KeepaliveTime = 5;</code>
     *
     * <pre>
     *ms
     * </pre>
     */
    public boolean hasKeepaliveTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 KeepaliveTime = 5;</code>
     *
     * <pre>
     *ms
     * </pre>
     */
    public int getKeepaliveTime() {
      return keepaliveTime_;
    }

    // optional bool AnyWorker = 6;
    public static final int ANYWORKER_FIELD_NUMBER = 6;
    private boolean anyWorker_;
    /**
     * <code>optional bool AnyWorker = 6;</code>
     */
    public boolean hasAnyWorker() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool AnyWorker = 6;</code>
     */
    public boolean getAnyWorker() {
      return anyWorker_;
    }

    private void initFields() {
      alias_ = "";
      clientId_ = 0;
      clientTick_ = 0;
      masterId_ = 0;
      keepaliveTime_ = 0;
      anyWorker_ = false;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltConnectMasterAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltConnectMasterAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltConnectMasterAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        alias_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        masterId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        keepaliveTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        anyWorker_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltConnectMasterAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.alias_ = alias_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.clientTick_ = clientTick_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.masterId_ = masterId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.keepaliveTime_ = keepaliveTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.anyWorker_ = anyWorker_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional string Alias = 1;
      private java.lang.Object alias_ = "";
      /**
       * <code>optional string Alias = 1;</code>
       */
      public boolean hasAlias() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public java.lang.String getAlias() {
        java.lang.Object ref = alias_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          alias_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAliasBytes() {
        java.lang.Object ref = alias_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          alias_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public Builder setAlias(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        alias_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public Builder clearAlias() {
        bitField0_ = (bitField0_ & ~0x00000001);
        alias_ = getDefaultInstance().getAlias();
        onChanged();
        return this;
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public Builder setAliasBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        alias_ = value;
        onChanged();
        return this;
      }

      // optional uint32 ClientId = 2;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 2;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 ClientId = 2;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 2;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000002;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 2;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 3;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 3;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 ClientTick = 3;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 3;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000004;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 3;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 MasterId = 4;
      private int masterId_ ;
      /**
       * <code>optional uint32 MasterId = 4;</code>
       */
      public boolean hasMasterId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 MasterId = 4;</code>
       */
      public int getMasterId() {
        return masterId_;
      }
      /**
       * <code>optional uint32 MasterId = 4;</code>
       */
      public Builder setMasterId(int value) {
        bitField0_ |= 0x00000008;
        masterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 MasterId = 4;</code>
       */
      public Builder clearMasterId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        masterId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 KeepaliveTime = 5;
      private int keepaliveTime_ ;
      /**
       * <code>optional uint32 KeepaliveTime = 5;</code>
       *
       * <pre>
       *ms
       * </pre>
       */
      public boolean hasKeepaliveTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 KeepaliveTime = 5;</code>
       *
       * <pre>
       *ms
       * </pre>
       */
      public int getKeepaliveTime() {
        return keepaliveTime_;
      }
      /**
       * <code>optional uint32 KeepaliveTime = 5;</code>
       *
       * <pre>
       *ms
       * </pre>
       */
      public Builder setKeepaliveTime(int value) {
        bitField0_ |= 0x00000010;
        keepaliveTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 KeepaliveTime = 5;</code>
       *
       * <pre>
       *ms
       * </pre>
       */
      public Builder clearKeepaliveTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        keepaliveTime_ = 0;
        onChanged();
        return this;
      }

      // optional bool AnyWorker = 6;
      private boolean anyWorker_ ;
      /**
       * <code>optional bool AnyWorker = 6;</code>
       */
      public boolean hasAnyWorker() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool AnyWorker = 6;</code>
       */
      public boolean getAnyWorker() {
        return anyWorker_;
      }
      /**
       * <code>optional bool AnyWorker = 6;</code>
       */
      public Builder setAnyWorker(boolean value) {
        bitField0_ |= 0x00000020;
        anyWorker_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool AnyWorker = 6;</code>
       */
      public Builder clearAnyWorker() {
        bitField0_ = (bitField0_ & ~0x00000020);
        anyWorker_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltConnectMasterAck)
    }

    static {
      defaultInstance = new DssCltConnectMasterAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltConnectMasterAck)
  }

  public interface DssCltConnectMasterNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string Alias = 1;
    /**
     * <code>optional string Alias = 1;</code>
     */
    boolean hasAlias();
    /**
     * <code>optional string Alias = 1;</code>
     */
    java.lang.String getAlias();
    /**
     * <code>optional string Alias = 1;</code>
     */
    com.google.protobuf.ByteString
        getAliasBytes();

    // optional string QName = 2;
    /**
     * <code>optional string QName = 2;</code>
     */
    boolean hasQName();
    /**
     * <code>optional string QName = 2;</code>
     */
    java.lang.String getQName();
    /**
     * <code>optional string QName = 2;</code>
     */
    com.google.protobuf.ByteString
        getQNameBytes();

    // optional uint32 Materid = 3;
    /**
     * <code>optional uint32 Materid = 3;</code>
     */
    boolean hasMaterid();
    /**
     * <code>optional uint32 Materid = 3;</code>
     */
    int getMaterid();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltConnectMasterNack}
   */
  public static final class DssCltConnectMasterNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltConnectMasterNackOrBuilder {
    // Use DssCltConnectMasterNack.newBuilder() to construct.
    private DssCltConnectMasterNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltConnectMasterNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltConnectMasterNack defaultInstance;
    public static DssCltConnectMasterNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltConnectMasterNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltConnectMasterNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltConnectMasterNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltConnectMasterNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltConnectMasterNack>() {
      public DssCltConnectMasterNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltConnectMasterNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string Alias = 1;
    public static final int ALIAS_FIELD_NUMBER = 1;
    private java.lang.Object alias_;
    /**
     * <code>optional string Alias = 1;</code>
     */
    public boolean hasAlias() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string Alias = 1;</code>
     */
    public java.lang.String getAlias() {
      java.lang.Object ref = alias_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          alias_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string Alias = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAliasBytes() {
      java.lang.Object ref = alias_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        alias_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string QName = 2;
    public static final int QNAME_FIELD_NUMBER = 2;
    private java.lang.Object qName_;
    /**
     * <code>optional string QName = 2;</code>
     */
    public boolean hasQName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string QName = 2;</code>
     */
    public java.lang.String getQName() {
      java.lang.Object ref = qName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          qName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string QName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getQNameBytes() {
      java.lang.Object ref = qName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        qName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 Materid = 3;
    public static final int MATERID_FIELD_NUMBER = 3;
    private int materid_;
    /**
     * <code>optional uint32 Materid = 3;</code>
     */
    public boolean hasMaterid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 Materid = 3;</code>
     */
    public int getMaterid() {
      return materid_;
    }

    private void initFields() {
      alias_ = "";
      qName_ = "";
      materid_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltConnectMasterNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltConnectMasterNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltConnectMasterNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        alias_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        qName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        materid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltConnectMasterNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltConnectMasterNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.alias_ = alias_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.qName_ = qName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.materid_ = materid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional string Alias = 1;
      private java.lang.Object alias_ = "";
      /**
       * <code>optional string Alias = 1;</code>
       */
      public boolean hasAlias() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public java.lang.String getAlias() {
        java.lang.Object ref = alias_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          alias_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAliasBytes() {
        java.lang.Object ref = alias_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          alias_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public Builder setAlias(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        alias_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public Builder clearAlias() {
        bitField0_ = (bitField0_ & ~0x00000001);
        alias_ = getDefaultInstance().getAlias();
        onChanged();
        return this;
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public Builder setAliasBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        alias_ = value;
        onChanged();
        return this;
      }

      // optional string QName = 2;
      private java.lang.Object qName_ = "";
      /**
       * <code>optional string QName = 2;</code>
       */
      public boolean hasQName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string QName = 2;</code>
       */
      public java.lang.String getQName() {
        java.lang.Object ref = qName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          qName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string QName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getQNameBytes() {
        java.lang.Object ref = qName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          qName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string QName = 2;</code>
       */
      public Builder setQName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        qName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string QName = 2;</code>
       */
      public Builder clearQName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        qName_ = getDefaultInstance().getQName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string QName = 2;</code>
       */
      public Builder setQNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        qName_ = value;
        onChanged();
        return this;
      }

      // optional uint32 Materid = 3;
      private int materid_ ;
      /**
       * <code>optional uint32 Materid = 3;</code>
       */
      public boolean hasMaterid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 Materid = 3;</code>
       */
      public int getMaterid() {
        return materid_;
      }
      /**
       * <code>optional uint32 Materid = 3;</code>
       */
      public Builder setMaterid(int value) {
        bitField0_ |= 0x00000004;
        materid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 Materid = 3;</code>
       */
      public Builder clearMaterid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        materid_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltConnectMasterNack)
    }

    static {
      defaultInstance = new DssCltConnectMasterNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltConnectMasterNack)
  }

  public interface DssCltCreatClientReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string Alias = 1;
    /**
     * <code>optional string Alias = 1;</code>
     */
    boolean hasAlias();
    /**
     * <code>optional string Alias = 1;</code>
     */
    java.lang.String getAlias();
    /**
     * <code>optional string Alias = 1;</code>
     */
    com.google.protobuf.ByteString
        getAliasBytes();

    // optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
     */
    boolean hasClientType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType getClientType();

    // optional string QName = 3;
    /**
     * <code>optional string QName = 3;</code>
     */
    boolean hasQName();
    /**
     * <code>optional string QName = 3;</code>
     */
    java.lang.String getQName();
    /**
     * <code>optional string QName = 3;</code>
     */
    com.google.protobuf.ByteString
        getQNameBytes();

    // optional uint32 ReplyCallBack = 4;
    /**
     * <code>optional uint32 ReplyCallBack = 4;</code>
     *
     * <pre>
     * 2020-03-10 6.1后 reply_callback 替代 ReplyCallBack
     * </pre>
     */
    boolean hasReplyCallBack();
    /**
     * <code>optional uint32 ReplyCallBack = 4;</code>
     *
     * <pre>
     * 2020-03-10 6.1后 reply_callback 替代 ReplyCallBack
     * </pre>
     */
    int getReplyCallBack();

    // optional uint32 MasterId = 5;
    /**
     * <code>optional uint32 MasterId = 5;</code>
     */
    boolean hasMasterId();
    /**
     * <code>optional uint32 MasterId = 5;</code>
     */
    int getMasterId();

    // optional uint32 Context = 6;
    /**
     * <code>optional uint32 Context = 6;</code>
     */
    boolean hasContext();
    /**
     * <code>optional uint32 Context = 6;</code>
     */
    int getContext();

    // optional string ProcessName = 7;
    /**
     * <code>optional string ProcessName = 7;</code>
     */
    boolean hasProcessName();
    /**
     * <code>optional string ProcessName = 7;</code>
     */
    java.lang.String getProcessName();
    /**
     * <code>optional string ProcessName = 7;</code>
     */
    com.google.protobuf.ByteString
        getProcessNameBytes();

    // optional string AppMoid = 8;
    /**
     * <code>optional string AppMoid = 8;</code>
     */
    boolean hasAppMoid();
    /**
     * <code>optional string AppMoid = 8;</code>
     */
    java.lang.String getAppMoid();
    /**
     * <code>optional string AppMoid = 8;</code>
     */
    com.google.protobuf.ByteString
        getAppMoidBytes();

    // optional bytes reply_callback = 9;
    /**
     * <code>optional bytes reply_callback = 9;</code>
     */
    boolean hasReplyCallback();
    /**
     * <code>optional bytes reply_callback = 9;</code>
     */
    com.google.protobuf.ByteString getReplyCallback();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltCreatClientReq}
   */
  public static final class DssCltCreatClientReq extends
      com.google.protobuf.GeneratedMessage
      implements DssCltCreatClientReqOrBuilder {
    // Use DssCltCreatClientReq.newBuilder() to construct.
    private DssCltCreatClientReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltCreatClientReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltCreatClientReq defaultInstance;
    public static DssCltCreatClientReq getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltCreatClientReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltCreatClientReq> PARSER =
        new com.google.protobuf.AbstractParser<DssCltCreatClientReq>() {
      public DssCltCreatClientReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltCreatClientReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string Alias = 1;
    public static final int ALIAS_FIELD_NUMBER = 1;
    private java.lang.Object alias_;
    /**
     * <code>optional string Alias = 1;</code>
     */
    public boolean hasAlias() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string Alias = 1;</code>
     */
    public java.lang.String getAlias() {
      java.lang.Object ref = alias_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          alias_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string Alias = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAliasBytes() {
      java.lang.Object ref = alias_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        alias_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;
    public static final int CLIENTTYPE_FIELD_NUMBER = 2;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType clientType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
     */
    public boolean hasClientType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType getClientType() {
      return clientType_;
    }

    // optional string QName = 3;
    public static final int QNAME_FIELD_NUMBER = 3;
    private java.lang.Object qName_;
    /**
     * <code>optional string QName = 3;</code>
     */
    public boolean hasQName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string QName = 3;</code>
     */
    public java.lang.String getQName() {
      java.lang.Object ref = qName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          qName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string QName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getQNameBytes() {
      java.lang.Object ref = qName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        qName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 ReplyCallBack = 4;
    public static final int REPLYCALLBACK_FIELD_NUMBER = 4;
    private int replyCallBack_;
    /**
     * <code>optional uint32 ReplyCallBack = 4;</code>
     *
     * <pre>
     * 2020-03-10 6.1后 reply_callback 替代 ReplyCallBack
     * </pre>
     */
    public boolean hasReplyCallBack() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 ReplyCallBack = 4;</code>
     *
     * <pre>
     * 2020-03-10 6.1后 reply_callback 替代 ReplyCallBack
     * </pre>
     */
    public int getReplyCallBack() {
      return replyCallBack_;
    }

    // optional uint32 MasterId = 5;
    public static final int MASTERID_FIELD_NUMBER = 5;
    private int masterId_;
    /**
     * <code>optional uint32 MasterId = 5;</code>
     */
    public boolean hasMasterId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 MasterId = 5;</code>
     */
    public int getMasterId() {
      return masterId_;
    }

    // optional uint32 Context = 6;
    public static final int CONTEXT_FIELD_NUMBER = 6;
    private int context_;
    /**
     * <code>optional uint32 Context = 6;</code>
     */
    public boolean hasContext() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 Context = 6;</code>
     */
    public int getContext() {
      return context_;
    }

    // optional string ProcessName = 7;
    public static final int PROCESSNAME_FIELD_NUMBER = 7;
    private java.lang.Object processName_;
    /**
     * <code>optional string ProcessName = 7;</code>
     */
    public boolean hasProcessName() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string ProcessName = 7;</code>
     */
    public java.lang.String getProcessName() {
      java.lang.Object ref = processName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          processName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ProcessName = 7;</code>
     */
    public com.google.protobuf.ByteString
        getProcessNameBytes() {
      java.lang.Object ref = processName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        processName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string AppMoid = 8;
    public static final int APPMOID_FIELD_NUMBER = 8;
    private java.lang.Object appMoid_;
    /**
     * <code>optional string AppMoid = 8;</code>
     */
    public boolean hasAppMoid() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string AppMoid = 8;</code>
     */
    public java.lang.String getAppMoid() {
      java.lang.Object ref = appMoid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          appMoid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string AppMoid = 8;</code>
     */
    public com.google.protobuf.ByteString
        getAppMoidBytes() {
      java.lang.Object ref = appMoid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        appMoid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bytes reply_callback = 9;
    public static final int REPLY_CALLBACK_FIELD_NUMBER = 9;
    private com.google.protobuf.ByteString replyCallback_;
    /**
     * <code>optional bytes reply_callback = 9;</code>
     */
    public boolean hasReplyCallback() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bytes reply_callback = 9;</code>
     */
    public com.google.protobuf.ByteString getReplyCallback() {
      return replyCallback_;
    }

    private void initFields() {
      alias_ = "";
      clientType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType.DssObjUnknown;
      qName_ = "";
      replyCallBack_ = 0;
      masterId_ = 0;
      context_ = 0;
      processName_ = "";
      appMoid_ = "";
      replyCallback_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltCreatClientReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        alias_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        clientType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType.DssObjUnknown;
        bitField0_ = (bitField0_ & ~0x00000002);
        qName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        replyCallBack_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        masterId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        context_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        processName_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        appMoid_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        replyCallback_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.alias_ = alias_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clientType_ = clientType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.qName_ = qName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.replyCallBack_ = replyCallBack_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.masterId_ = masterId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.context_ = context_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.processName_ = processName_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.appMoid_ = appMoid_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.replyCallback_ = replyCallback_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional string Alias = 1;
      private java.lang.Object alias_ = "";
      /**
       * <code>optional string Alias = 1;</code>
       */
      public boolean hasAlias() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public java.lang.String getAlias() {
        java.lang.Object ref = alias_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          alias_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAliasBytes() {
        java.lang.Object ref = alias_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          alias_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public Builder setAlias(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        alias_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public Builder clearAlias() {
        bitField0_ = (bitField0_ & ~0x00000001);
        alias_ = getDefaultInstance().getAlias();
        onChanged();
        return this;
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public Builder setAliasBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        alias_ = value;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType clientType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType.DssObjUnknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
       */
      public boolean hasClientType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType getClientType() {
        return clientType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
       */
      public Builder setClientType(com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        clientType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
       */
      public Builder clearClientType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        clientType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType.DssObjUnknown;
        onChanged();
        return this;
      }

      // optional string QName = 3;
      private java.lang.Object qName_ = "";
      /**
       * <code>optional string QName = 3;</code>
       */
      public boolean hasQName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string QName = 3;</code>
       */
      public java.lang.String getQName() {
        java.lang.Object ref = qName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          qName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string QName = 3;</code>
       */
      public com.google.protobuf.ByteString
          getQNameBytes() {
        java.lang.Object ref = qName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          qName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string QName = 3;</code>
       */
      public Builder setQName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        qName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string QName = 3;</code>
       */
      public Builder clearQName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        qName_ = getDefaultInstance().getQName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string QName = 3;</code>
       */
      public Builder setQNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        qName_ = value;
        onChanged();
        return this;
      }

      // optional uint32 ReplyCallBack = 4;
      private int replyCallBack_ ;
      /**
       * <code>optional uint32 ReplyCallBack = 4;</code>
       *
       * <pre>
       * 2020-03-10 6.1后 reply_callback 替代 ReplyCallBack
       * </pre>
       */
      public boolean hasReplyCallBack() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 ReplyCallBack = 4;</code>
       *
       * <pre>
       * 2020-03-10 6.1后 reply_callback 替代 ReplyCallBack
       * </pre>
       */
      public int getReplyCallBack() {
        return replyCallBack_;
      }
      /**
       * <code>optional uint32 ReplyCallBack = 4;</code>
       *
       * <pre>
       * 2020-03-10 6.1后 reply_callback 替代 ReplyCallBack
       * </pre>
       */
      public Builder setReplyCallBack(int value) {
        bitField0_ |= 0x00000008;
        replyCallBack_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ReplyCallBack = 4;</code>
       *
       * <pre>
       * 2020-03-10 6.1后 reply_callback 替代 ReplyCallBack
       * </pre>
       */
      public Builder clearReplyCallBack() {
        bitField0_ = (bitField0_ & ~0x00000008);
        replyCallBack_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 MasterId = 5;
      private int masterId_ ;
      /**
       * <code>optional uint32 MasterId = 5;</code>
       */
      public boolean hasMasterId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 MasterId = 5;</code>
       */
      public int getMasterId() {
        return masterId_;
      }
      /**
       * <code>optional uint32 MasterId = 5;</code>
       */
      public Builder setMasterId(int value) {
        bitField0_ |= 0x00000010;
        masterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 MasterId = 5;</code>
       */
      public Builder clearMasterId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        masterId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 Context = 6;
      private int context_ ;
      /**
       * <code>optional uint32 Context = 6;</code>
       */
      public boolean hasContext() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 Context = 6;</code>
       */
      public int getContext() {
        return context_;
      }
      /**
       * <code>optional uint32 Context = 6;</code>
       */
      public Builder setContext(int value) {
        bitField0_ |= 0x00000020;
        context_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 Context = 6;</code>
       */
      public Builder clearContext() {
        bitField0_ = (bitField0_ & ~0x00000020);
        context_ = 0;
        onChanged();
        return this;
      }

      // optional string ProcessName = 7;
      private java.lang.Object processName_ = "";
      /**
       * <code>optional string ProcessName = 7;</code>
       */
      public boolean hasProcessName() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string ProcessName = 7;</code>
       */
      public java.lang.String getProcessName() {
        java.lang.Object ref = processName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          processName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ProcessName = 7;</code>
       */
      public com.google.protobuf.ByteString
          getProcessNameBytes() {
        java.lang.Object ref = processName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          processName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ProcessName = 7;</code>
       */
      public Builder setProcessName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        processName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ProcessName = 7;</code>
       */
      public Builder clearProcessName() {
        bitField0_ = (bitField0_ & ~0x00000040);
        processName_ = getDefaultInstance().getProcessName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ProcessName = 7;</code>
       */
      public Builder setProcessNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        processName_ = value;
        onChanged();
        return this;
      }

      // optional string AppMoid = 8;
      private java.lang.Object appMoid_ = "";
      /**
       * <code>optional string AppMoid = 8;</code>
       */
      public boolean hasAppMoid() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string AppMoid = 8;</code>
       */
      public java.lang.String getAppMoid() {
        java.lang.Object ref = appMoid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          appMoid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string AppMoid = 8;</code>
       */
      public com.google.protobuf.ByteString
          getAppMoidBytes() {
        java.lang.Object ref = appMoid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          appMoid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string AppMoid = 8;</code>
       */
      public Builder setAppMoid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        appMoid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string AppMoid = 8;</code>
       */
      public Builder clearAppMoid() {
        bitField0_ = (bitField0_ & ~0x00000080);
        appMoid_ = getDefaultInstance().getAppMoid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string AppMoid = 8;</code>
       */
      public Builder setAppMoidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        appMoid_ = value;
        onChanged();
        return this;
      }

      // optional bytes reply_callback = 9;
      private com.google.protobuf.ByteString replyCallback_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes reply_callback = 9;</code>
       */
      public boolean hasReplyCallback() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bytes reply_callback = 9;</code>
       */
      public com.google.protobuf.ByteString getReplyCallback() {
        return replyCallback_;
      }
      /**
       * <code>optional bytes reply_callback = 9;</code>
       */
      public Builder setReplyCallback(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        replyCallback_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes reply_callback = 9;</code>
       */
      public Builder clearReplyCallback() {
        bitField0_ = (bitField0_ & ~0x00000100);
        replyCallback_ = getDefaultInstance().getReplyCallback();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltCreatClientReq)
    }

    static {
      defaultInstance = new DssCltCreatClientReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltCreatClientReq)
  }

  public interface DssCltCreatClientAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string Alias = 1;
    /**
     * <code>optional string Alias = 1;</code>
     */
    boolean hasAlias();
    /**
     * <code>optional string Alias = 1;</code>
     */
    java.lang.String getAlias();
    /**
     * <code>optional string Alias = 1;</code>
     */
    com.google.protobuf.ByteString
        getAliasBytes();

    // optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
     */
    boolean hasClientType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType getClientType();

    // optional string QName = 3;
    /**
     * <code>optional string QName = 3;</code>
     */
    boolean hasQName();
    /**
     * <code>optional string QName = 3;</code>
     */
    java.lang.String getQName();
    /**
     * <code>optional string QName = 3;</code>
     */
    com.google.protobuf.ByteString
        getQNameBytes();

    // optional uint32 ReplyCallBack = 4;
    /**
     * <code>optional uint32 ReplyCallBack = 4;</code>
     */
    boolean hasReplyCallBack();
    /**
     * <code>optional uint32 ReplyCallBack = 4;</code>
     */
    int getReplyCallBack();

    // optional uint32 Masterid = 5;
    /**
     * <code>optional uint32 Masterid = 5;</code>
     */
    boolean hasMasterid();
    /**
     * <code>optional uint32 Masterid = 5;</code>
     */
    int getMasterid();

    // optional uint32 ClientId = 6;
    /**
     * <code>optional uint32 ClientId = 6;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 6;</code>
     */
    int getClientId();

    // optional uint32 ClientTick = 7;
    /**
     * <code>optional uint32 ClientTick = 7;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 7;</code>
     */
    int getClientTick();

    // optional uint32 keepalivetime = 8;
    /**
     * <code>optional uint32 keepalivetime = 8;</code>
     *
     * <pre>
     *ms
     * </pre>
     */
    boolean hasKeepalivetime();
    /**
     * <code>optional uint32 keepalivetime = 8;</code>
     *
     * <pre>
     *ms
     * </pre>
     */
    int getKeepalivetime();

    // optional uint32 Context = 9;
    /**
     * <code>optional uint32 Context = 9;</code>
     */
    boolean hasContext();
    /**
     * <code>optional uint32 Context = 9;</code>
     */
    int getContext();

    // optional bytes reply_callback = 10;
    /**
     * <code>optional bytes reply_callback = 10;</code>
     */
    boolean hasReplyCallback();
    /**
     * <code>optional bytes reply_callback = 10;</code>
     */
    com.google.protobuf.ByteString getReplyCallback();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltCreatClientAck}
   */
  public static final class DssCltCreatClientAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltCreatClientAckOrBuilder {
    // Use DssCltCreatClientAck.newBuilder() to construct.
    private DssCltCreatClientAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltCreatClientAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltCreatClientAck defaultInstance;
    public static DssCltCreatClientAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltCreatClientAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltCreatClientAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltCreatClientAck>() {
      public DssCltCreatClientAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltCreatClientAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string Alias = 1;
    public static final int ALIAS_FIELD_NUMBER = 1;
    private java.lang.Object alias_;
    /**
     * <code>optional string Alias = 1;</code>
     */
    public boolean hasAlias() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string Alias = 1;</code>
     */
    public java.lang.String getAlias() {
      java.lang.Object ref = alias_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          alias_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string Alias = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAliasBytes() {
      java.lang.Object ref = alias_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        alias_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;
    public static final int CLIENTTYPE_FIELD_NUMBER = 2;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType clientType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
     */
    public boolean hasClientType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType getClientType() {
      return clientType_;
    }

    // optional string QName = 3;
    public static final int QNAME_FIELD_NUMBER = 3;
    private java.lang.Object qName_;
    /**
     * <code>optional string QName = 3;</code>
     */
    public boolean hasQName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string QName = 3;</code>
     */
    public java.lang.String getQName() {
      java.lang.Object ref = qName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          qName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string QName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getQNameBytes() {
      java.lang.Object ref = qName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        qName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 ReplyCallBack = 4;
    public static final int REPLYCALLBACK_FIELD_NUMBER = 4;
    private int replyCallBack_;
    /**
     * <code>optional uint32 ReplyCallBack = 4;</code>
     */
    public boolean hasReplyCallBack() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 ReplyCallBack = 4;</code>
     */
    public int getReplyCallBack() {
      return replyCallBack_;
    }

    // optional uint32 Masterid = 5;
    public static final int MASTERID_FIELD_NUMBER = 5;
    private int masterid_;
    /**
     * <code>optional uint32 Masterid = 5;</code>
     */
    public boolean hasMasterid() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 Masterid = 5;</code>
     */
    public int getMasterid() {
      return masterid_;
    }

    // optional uint32 ClientId = 6;
    public static final int CLIENTID_FIELD_NUMBER = 6;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 6;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 ClientId = 6;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 ClientTick = 7;
    public static final int CLIENTTICK_FIELD_NUMBER = 7;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 7;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 ClientTick = 7;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    // optional uint32 keepalivetime = 8;
    public static final int KEEPALIVETIME_FIELD_NUMBER = 8;
    private int keepalivetime_;
    /**
     * <code>optional uint32 keepalivetime = 8;</code>
     *
     * <pre>
     *ms
     * </pre>
     */
    public boolean hasKeepalivetime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 keepalivetime = 8;</code>
     *
     * <pre>
     *ms
     * </pre>
     */
    public int getKeepalivetime() {
      return keepalivetime_;
    }

    // optional uint32 Context = 9;
    public static final int CONTEXT_FIELD_NUMBER = 9;
    private int context_;
    /**
     * <code>optional uint32 Context = 9;</code>
     */
    public boolean hasContext() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 Context = 9;</code>
     */
    public int getContext() {
      return context_;
    }

    // optional bytes reply_callback = 10;
    public static final int REPLY_CALLBACK_FIELD_NUMBER = 10;
    private com.google.protobuf.ByteString replyCallback_;
    /**
     * <code>optional bytes reply_callback = 10;</code>
     */
    public boolean hasReplyCallback() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bytes reply_callback = 10;</code>
     */
    public com.google.protobuf.ByteString getReplyCallback() {
      return replyCallback_;
    }

    private void initFields() {
      alias_ = "";
      clientType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType.DssObjUnknown;
      qName_ = "";
      replyCallBack_ = 0;
      masterid_ = 0;
      clientId_ = 0;
      clientTick_ = 0;
      keepalivetime_ = 0;
      context_ = 0;
      replyCallback_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltCreatClientAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        alias_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        clientType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType.DssObjUnknown;
        bitField0_ = (bitField0_ & ~0x00000002);
        qName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        replyCallBack_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        masterid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        keepalivetime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        context_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        replyCallback_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.alias_ = alias_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clientType_ = clientType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.qName_ = qName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.replyCallBack_ = replyCallBack_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.masterid_ = masterid_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.clientTick_ = clientTick_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.keepalivetime_ = keepalivetime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.context_ = context_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.replyCallback_ = replyCallback_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional string Alias = 1;
      private java.lang.Object alias_ = "";
      /**
       * <code>optional string Alias = 1;</code>
       */
      public boolean hasAlias() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public java.lang.String getAlias() {
        java.lang.Object ref = alias_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          alias_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAliasBytes() {
        java.lang.Object ref = alias_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          alias_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public Builder setAlias(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        alias_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public Builder clearAlias() {
        bitField0_ = (bitField0_ & ~0x00000001);
        alias_ = getDefaultInstance().getAlias();
        onChanged();
        return this;
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public Builder setAliasBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        alias_ = value;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType clientType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType.DssObjUnknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
       */
      public boolean hasClientType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType getClientType() {
        return clientType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
       */
      public Builder setClientType(com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        clientType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
       */
      public Builder clearClientType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        clientType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType.DssObjUnknown;
        onChanged();
        return this;
      }

      // optional string QName = 3;
      private java.lang.Object qName_ = "";
      /**
       * <code>optional string QName = 3;</code>
       */
      public boolean hasQName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string QName = 3;</code>
       */
      public java.lang.String getQName() {
        java.lang.Object ref = qName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          qName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string QName = 3;</code>
       */
      public com.google.protobuf.ByteString
          getQNameBytes() {
        java.lang.Object ref = qName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          qName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string QName = 3;</code>
       */
      public Builder setQName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        qName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string QName = 3;</code>
       */
      public Builder clearQName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        qName_ = getDefaultInstance().getQName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string QName = 3;</code>
       */
      public Builder setQNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        qName_ = value;
        onChanged();
        return this;
      }

      // optional uint32 ReplyCallBack = 4;
      private int replyCallBack_ ;
      /**
       * <code>optional uint32 ReplyCallBack = 4;</code>
       */
      public boolean hasReplyCallBack() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 ReplyCallBack = 4;</code>
       */
      public int getReplyCallBack() {
        return replyCallBack_;
      }
      /**
       * <code>optional uint32 ReplyCallBack = 4;</code>
       */
      public Builder setReplyCallBack(int value) {
        bitField0_ |= 0x00000008;
        replyCallBack_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ReplyCallBack = 4;</code>
       */
      public Builder clearReplyCallBack() {
        bitField0_ = (bitField0_ & ~0x00000008);
        replyCallBack_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 Masterid = 5;
      private int masterid_ ;
      /**
       * <code>optional uint32 Masterid = 5;</code>
       */
      public boolean hasMasterid() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 Masterid = 5;</code>
       */
      public int getMasterid() {
        return masterid_;
      }
      /**
       * <code>optional uint32 Masterid = 5;</code>
       */
      public Builder setMasterid(int value) {
        bitField0_ |= 0x00000010;
        masterid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 Masterid = 5;</code>
       */
      public Builder clearMasterid() {
        bitField0_ = (bitField0_ & ~0x00000010);
        masterid_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientId = 6;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 6;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 ClientId = 6;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 6;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000020;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 6;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 7;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 7;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 ClientTick = 7;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 7;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000040;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 7;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000040);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 keepalivetime = 8;
      private int keepalivetime_ ;
      /**
       * <code>optional uint32 keepalivetime = 8;</code>
       *
       * <pre>
       *ms
       * </pre>
       */
      public boolean hasKeepalivetime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 keepalivetime = 8;</code>
       *
       * <pre>
       *ms
       * </pre>
       */
      public int getKeepalivetime() {
        return keepalivetime_;
      }
      /**
       * <code>optional uint32 keepalivetime = 8;</code>
       *
       * <pre>
       *ms
       * </pre>
       */
      public Builder setKeepalivetime(int value) {
        bitField0_ |= 0x00000080;
        keepalivetime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 keepalivetime = 8;</code>
       *
       * <pre>
       *ms
       * </pre>
       */
      public Builder clearKeepalivetime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        keepalivetime_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 Context = 9;
      private int context_ ;
      /**
       * <code>optional uint32 Context = 9;</code>
       */
      public boolean hasContext() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 Context = 9;</code>
       */
      public int getContext() {
        return context_;
      }
      /**
       * <code>optional uint32 Context = 9;</code>
       */
      public Builder setContext(int value) {
        bitField0_ |= 0x00000100;
        context_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 Context = 9;</code>
       */
      public Builder clearContext() {
        bitField0_ = (bitField0_ & ~0x00000100);
        context_ = 0;
        onChanged();
        return this;
      }

      // optional bytes reply_callback = 10;
      private com.google.protobuf.ByteString replyCallback_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes reply_callback = 10;</code>
       */
      public boolean hasReplyCallback() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bytes reply_callback = 10;</code>
       */
      public com.google.protobuf.ByteString getReplyCallback() {
        return replyCallback_;
      }
      /**
       * <code>optional bytes reply_callback = 10;</code>
       */
      public Builder setReplyCallback(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        replyCallback_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes reply_callback = 10;</code>
       */
      public Builder clearReplyCallback() {
        bitField0_ = (bitField0_ & ~0x00000200);
        replyCallback_ = getDefaultInstance().getReplyCallback();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltCreatClientAck)
    }

    static {
      defaultInstance = new DssCltCreatClientAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltCreatClientAck)
  }

  public interface DssCltCreatClientNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string Alias = 1;
    /**
     * <code>optional string Alias = 1;</code>
     */
    boolean hasAlias();
    /**
     * <code>optional string Alias = 1;</code>
     */
    java.lang.String getAlias();
    /**
     * <code>optional string Alias = 1;</code>
     */
    com.google.protobuf.ByteString
        getAliasBytes();

    // optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
     */
    boolean hasClientType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType getClientType();

    // optional string QName = 3;
    /**
     * <code>optional string QName = 3;</code>
     */
    boolean hasQName();
    /**
     * <code>optional string QName = 3;</code>
     */
    java.lang.String getQName();
    /**
     * <code>optional string QName = 3;</code>
     */
    com.google.protobuf.ByteString
        getQNameBytes();

    // optional uint32 ReplyCallBack = 4;
    /**
     * <code>optional uint32 ReplyCallBack = 4;</code>
     */
    boolean hasReplyCallBack();
    /**
     * <code>optional uint32 ReplyCallBack = 4;</code>
     */
    int getReplyCallBack();

    // optional uint32 MasterId = 5;
    /**
     * <code>optional uint32 MasterId = 5;</code>
     */
    boolean hasMasterId();
    /**
     * <code>optional uint32 MasterId = 5;</code>
     */
    int getMasterId();

    // optional uint32 Context = 6;
    /**
     * <code>optional uint32 Context = 6;</code>
     */
    boolean hasContext();
    /**
     * <code>optional uint32 Context = 6;</code>
     */
    int getContext();

    // optional bytes reply_callback = 7;
    /**
     * <code>optional bytes reply_callback = 7;</code>
     */
    boolean hasReplyCallback();
    /**
     * <code>optional bytes reply_callback = 7;</code>
     */
    com.google.protobuf.ByteString getReplyCallback();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltCreatClientNack}
   */
  public static final class DssCltCreatClientNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltCreatClientNackOrBuilder {
    // Use DssCltCreatClientNack.newBuilder() to construct.
    private DssCltCreatClientNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltCreatClientNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltCreatClientNack defaultInstance;
    public static DssCltCreatClientNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltCreatClientNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltCreatClientNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltCreatClientNack>() {
      public DssCltCreatClientNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltCreatClientNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string Alias = 1;
    public static final int ALIAS_FIELD_NUMBER = 1;
    private java.lang.Object alias_;
    /**
     * <code>optional string Alias = 1;</code>
     */
    public boolean hasAlias() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string Alias = 1;</code>
     */
    public java.lang.String getAlias() {
      java.lang.Object ref = alias_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          alias_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string Alias = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAliasBytes() {
      java.lang.Object ref = alias_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        alias_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;
    public static final int CLIENTTYPE_FIELD_NUMBER = 2;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType clientType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
     */
    public boolean hasClientType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType getClientType() {
      return clientType_;
    }

    // optional string QName = 3;
    public static final int QNAME_FIELD_NUMBER = 3;
    private java.lang.Object qName_;
    /**
     * <code>optional string QName = 3;</code>
     */
    public boolean hasQName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string QName = 3;</code>
     */
    public java.lang.String getQName() {
      java.lang.Object ref = qName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          qName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string QName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getQNameBytes() {
      java.lang.Object ref = qName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        qName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 ReplyCallBack = 4;
    public static final int REPLYCALLBACK_FIELD_NUMBER = 4;
    private int replyCallBack_;
    /**
     * <code>optional uint32 ReplyCallBack = 4;</code>
     */
    public boolean hasReplyCallBack() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 ReplyCallBack = 4;</code>
     */
    public int getReplyCallBack() {
      return replyCallBack_;
    }

    // optional uint32 MasterId = 5;
    public static final int MASTERID_FIELD_NUMBER = 5;
    private int masterId_;
    /**
     * <code>optional uint32 MasterId = 5;</code>
     */
    public boolean hasMasterId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 MasterId = 5;</code>
     */
    public int getMasterId() {
      return masterId_;
    }

    // optional uint32 Context = 6;
    public static final int CONTEXT_FIELD_NUMBER = 6;
    private int context_;
    /**
     * <code>optional uint32 Context = 6;</code>
     */
    public boolean hasContext() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 Context = 6;</code>
     */
    public int getContext() {
      return context_;
    }

    // optional bytes reply_callback = 7;
    public static final int REPLY_CALLBACK_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString replyCallback_;
    /**
     * <code>optional bytes reply_callback = 7;</code>
     */
    public boolean hasReplyCallback() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bytes reply_callback = 7;</code>
     */
    public com.google.protobuf.ByteString getReplyCallback() {
      return replyCallback_;
    }

    private void initFields() {
      alias_ = "";
      clientType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType.DssObjUnknown;
      qName_ = "";
      replyCallBack_ = 0;
      masterId_ = 0;
      context_ = 0;
      replyCallback_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltCreatClientNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        alias_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        clientType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType.DssObjUnknown;
        bitField0_ = (bitField0_ & ~0x00000002);
        qName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        replyCallBack_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        masterId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        context_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        replyCallback_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltCreatClientNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.alias_ = alias_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clientType_ = clientType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.qName_ = qName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.replyCallBack_ = replyCallBack_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.masterId_ = masterId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.context_ = context_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.replyCallback_ = replyCallback_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional string Alias = 1;
      private java.lang.Object alias_ = "";
      /**
       * <code>optional string Alias = 1;</code>
       */
      public boolean hasAlias() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public java.lang.String getAlias() {
        java.lang.Object ref = alias_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          alias_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAliasBytes() {
        java.lang.Object ref = alias_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          alias_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public Builder setAlias(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        alias_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public Builder clearAlias() {
        bitField0_ = (bitField0_ & ~0x00000001);
        alias_ = getDefaultInstance().getAlias();
        onChanged();
        return this;
      }
      /**
       * <code>optional string Alias = 1;</code>
       */
      public Builder setAliasBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        alias_ = value;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType clientType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType.DssObjUnknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
       */
      public boolean hasClientType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType getClientType() {
        return clientType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
       */
      public Builder setClientType(com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        clientType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EClientType ClientType = 2;</code>
       */
      public Builder clearClientType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        clientType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EClientType.DssObjUnknown;
        onChanged();
        return this;
      }

      // optional string QName = 3;
      private java.lang.Object qName_ = "";
      /**
       * <code>optional string QName = 3;</code>
       */
      public boolean hasQName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string QName = 3;</code>
       */
      public java.lang.String getQName() {
        java.lang.Object ref = qName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          qName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string QName = 3;</code>
       */
      public com.google.protobuf.ByteString
          getQNameBytes() {
        java.lang.Object ref = qName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          qName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string QName = 3;</code>
       */
      public Builder setQName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        qName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string QName = 3;</code>
       */
      public Builder clearQName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        qName_ = getDefaultInstance().getQName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string QName = 3;</code>
       */
      public Builder setQNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        qName_ = value;
        onChanged();
        return this;
      }

      // optional uint32 ReplyCallBack = 4;
      private int replyCallBack_ ;
      /**
       * <code>optional uint32 ReplyCallBack = 4;</code>
       */
      public boolean hasReplyCallBack() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 ReplyCallBack = 4;</code>
       */
      public int getReplyCallBack() {
        return replyCallBack_;
      }
      /**
       * <code>optional uint32 ReplyCallBack = 4;</code>
       */
      public Builder setReplyCallBack(int value) {
        bitField0_ |= 0x00000008;
        replyCallBack_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ReplyCallBack = 4;</code>
       */
      public Builder clearReplyCallBack() {
        bitField0_ = (bitField0_ & ~0x00000008);
        replyCallBack_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 MasterId = 5;
      private int masterId_ ;
      /**
       * <code>optional uint32 MasterId = 5;</code>
       */
      public boolean hasMasterId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 MasterId = 5;</code>
       */
      public int getMasterId() {
        return masterId_;
      }
      /**
       * <code>optional uint32 MasterId = 5;</code>
       */
      public Builder setMasterId(int value) {
        bitField0_ |= 0x00000010;
        masterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 MasterId = 5;</code>
       */
      public Builder clearMasterId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        masterId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 Context = 6;
      private int context_ ;
      /**
       * <code>optional uint32 Context = 6;</code>
       */
      public boolean hasContext() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 Context = 6;</code>
       */
      public int getContext() {
        return context_;
      }
      /**
       * <code>optional uint32 Context = 6;</code>
       */
      public Builder setContext(int value) {
        bitField0_ |= 0x00000020;
        context_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 Context = 6;</code>
       */
      public Builder clearContext() {
        bitField0_ = (bitField0_ & ~0x00000020);
        context_ = 0;
        onChanged();
        return this;
      }

      // optional bytes reply_callback = 7;
      private com.google.protobuf.ByteString replyCallback_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes reply_callback = 7;</code>
       */
      public boolean hasReplyCallback() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bytes reply_callback = 7;</code>
       */
      public com.google.protobuf.ByteString getReplyCallback() {
        return replyCallback_;
      }
      /**
       * <code>optional bytes reply_callback = 7;</code>
       */
      public Builder setReplyCallback(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        replyCallback_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes reply_callback = 7;</code>
       */
      public Builder clearReplyCallback() {
        bitField0_ = (bitField0_ & ~0x00000040);
        replyCallback_ = getDefaultInstance().getReplyCallback();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltCreatClientNack)
    }

    static {
      defaultInstance = new DssCltCreatClientNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltCreatClientNack)
  }

  public interface CltDssDestroyClientReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 ClientTick = 2;
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    int getClientTick();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssDestroyClientReq}
   */
  public static final class CltDssDestroyClientReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssDestroyClientReqOrBuilder {
    // Use CltDssDestroyClientReq.newBuilder() to construct.
    private CltDssDestroyClientReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssDestroyClientReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssDestroyClientReq defaultInstance;
    public static CltDssDestroyClientReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssDestroyClientReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssDestroyClientReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssDestroyClientReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssDestroyClientReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssDestroyClientReq>() {
      public CltDssDestroyClientReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssDestroyClientReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 ClientTick = 2;
    public static final int CLIENTTICK_FIELD_NUMBER = 2;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    private void initFields() {
      clientId_ = 0;
      clientTick_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssDestroyClientReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssDestroyClientReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssDestroyClientReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssDestroyClientReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clientTick_ = clientTick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 2;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000002;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000002);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssDestroyClientReq)
    }

    static {
      defaultInstance = new CltDssDestroyClientReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssDestroyClientReq)
  }

  public interface DssCltPingOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 ClientTick = 2;
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    int getClientTick();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltPing}
   */
  public static final class DssCltPing extends
      com.google.protobuf.GeneratedMessage
      implements DssCltPingOrBuilder {
    // Use DssCltPing.newBuilder() to construct.
    private DssCltPing(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltPing(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltPing defaultInstance;
    public static DssCltPing getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltPing getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltPing_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltPing_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltPing> PARSER =
        new com.google.protobuf.AbstractParser<DssCltPing>() {
      public DssCltPing parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltPing> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 ClientTick = 2;
    public static final int CLIENTTICK_FIELD_NUMBER = 2;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    private void initFields() {
      clientId_ = 0;
      clientTick_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltPing}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltPing_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltPing_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltPing_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPing(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clientTick_ = clientTick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 2;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000002;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000002);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltPing)
    }

    static {
      defaultInstance = new DssCltPing(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltPing)
  }

  public interface CltDssPongOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 ClientTick = 2;
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    int getClientTick();

    // repeated uint32 ClientIds = 3;
    /**
     * <code>repeated uint32 ClientIds = 3;</code>
     */
    java.util.List<java.lang.Integer> getClientIdsList();
    /**
     * <code>repeated uint32 ClientIds = 3;</code>
     */
    int getClientIdsCount();
    /**
     * <code>repeated uint32 ClientIds = 3;</code>
     */
    int getClientIds(int index);
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssPong}
   */
  public static final class CltDssPong extends
      com.google.protobuf.GeneratedMessage
      implements CltDssPongOrBuilder {
    // Use CltDssPong.newBuilder() to construct.
    private CltDssPong(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssPong(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssPong defaultInstance;
    public static CltDssPong getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssPong getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssPong_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssPong_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssPong> PARSER =
        new com.google.protobuf.AbstractParser<CltDssPong>() {
      public CltDssPong parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssPong> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 ClientTick = 2;
    public static final int CLIENTTICK_FIELD_NUMBER = 2;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    // repeated uint32 ClientIds = 3;
    public static final int CLIENTIDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> clientIds_;
    /**
     * <code>repeated uint32 ClientIds = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getClientIdsList() {
      return clientIds_;
    }
    /**
     * <code>repeated uint32 ClientIds = 3;</code>
     */
    public int getClientIdsCount() {
      return clientIds_.size();
    }
    /**
     * <code>repeated uint32 ClientIds = 3;</code>
     */
    public int getClientIds(int index) {
      return clientIds_.get(index);
    }

    private void initFields() {
      clientId_ = 0;
      clientTick_ = 0;
      clientIds_ = java.util.Collections.emptyList();
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssPong}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPongOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssPong_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssPong_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        clientIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssPong_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPong(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clientTick_ = clientTick_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          clientIds_ = java.util.Collections.unmodifiableList(clientIds_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.clientIds_ = clientIds_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 2;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000002;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000002);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // repeated uint32 ClientIds = 3;
      private java.util.List<java.lang.Integer> clientIds_ = java.util.Collections.emptyList();
      private void ensureClientIdsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          clientIds_ = new java.util.ArrayList<java.lang.Integer>(clientIds_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated uint32 ClientIds = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getClientIdsList() {
        return java.util.Collections.unmodifiableList(clientIds_);
      }
      /**
       * <code>repeated uint32 ClientIds = 3;</code>
       */
      public int getClientIdsCount() {
        return clientIds_.size();
      }
      /**
       * <code>repeated uint32 ClientIds = 3;</code>
       */
      public int getClientIds(int index) {
        return clientIds_.get(index);
      }
      /**
       * <code>repeated uint32 ClientIds = 3;</code>
       */
      public Builder setClientIds(
          int index, int value) {
        ensureClientIdsIsMutable();
        clientIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 ClientIds = 3;</code>
       */
      public Builder addClientIds(int value) {
        ensureClientIdsIsMutable();
        clientIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 ClientIds = 3;</code>
       */
      public Builder addAllClientIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureClientIdsIsMutable();
        super.addAll(values, clientIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 ClientIds = 3;</code>
       */
      public Builder clearClientIds() {
        clientIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssPong)
    }

    static {
      defaultInstance = new CltDssPong(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssPong)
  }

  public interface CltDssPingOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 ClientTick = 2;
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    int getClientTick();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssPing}
   */
  public static final class CltDssPing extends
      com.google.protobuf.GeneratedMessage
      implements CltDssPingOrBuilder {
    // Use CltDssPing.newBuilder() to construct.
    private CltDssPing(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssPing(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssPing defaultInstance;
    public static CltDssPing getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssPing getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssPing_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssPing_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssPing> PARSER =
        new com.google.protobuf.AbstractParser<CltDssPing>() {
      public CltDssPing parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssPing> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 ClientTick = 2;
    public static final int CLIENTTICK_FIELD_NUMBER = 2;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    private void initFields() {
      clientId_ = 0;
      clientTick_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssPing}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssPing_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssPing_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssPing_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssPing(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clientTick_ = clientTick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 2;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000002;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000002);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssPing)
    }

    static {
      defaultInstance = new CltDssPing(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssPing)
  }

  public interface DssCltPongOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 ClientTick = 2;
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    int getClientTick();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltPong}
   */
  public static final class DssCltPong extends
      com.google.protobuf.GeneratedMessage
      implements DssCltPongOrBuilder {
    // Use DssCltPong.newBuilder() to construct.
    private DssCltPong(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltPong(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltPong defaultInstance;
    public static DssCltPong getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltPong getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltPong_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltPong_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltPong> PARSER =
        new com.google.protobuf.AbstractParser<DssCltPong>() {
      public DssCltPong parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltPong> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 ClientTick = 2;
    public static final int CLIENTTICK_FIELD_NUMBER = 2;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    private void initFields() {
      clientId_ = 0;
      clientTick_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltPong}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPongOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltPong_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltPong_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltPong_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltPong(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clientTick_ = clientTick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 2;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000002;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000002);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltPong)
    }

    static {
      defaultInstance = new DssCltPong(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltPong)
  }

  public interface CltDssSyncApplyLocalPortReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     *
     * <pre>
     *mark cilent
     * </pre>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     *
     * <pre>
     *mark cilent
     * </pre>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *mark meeting
     * </pre>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *mark meeting
     * </pre>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *mark meeting
     * </pre>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional string ForceWorkerIp = 3;
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    boolean hasForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    java.lang.String getForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    com.google.protobuf.ByteString
        getForceWorkerIpBytes();

    // optional bool ForceConsPort = 4;
    /**
     * <code>optional bool ForceConsPort = 4;</code>
     *
     * <pre>
     *force to allocate consecutive port	
     * </pre>
     */
    boolean hasForceConsPort();
    /**
     * <code>optional bool ForceConsPort = 4;</code>
     *
     * <pre>
     *force to allocate consecutive port	
     * </pre>
     */
    boolean getForceConsPort();

    // optional uint32 BandWidth = 5;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     *
     * <pre>
     *require for bandwidth
     * </pre>
     */
    boolean hasBandWidth();
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     *
     * <pre>
     *require for bandwidth
     * </pre>
     */
    int getBandWidth();

    // optional uint32 PortNum = 6;
    /**
     * <code>optional uint32 PortNum = 6;</code>
     *
     * <pre>
     *require for num
     * </pre>
     */
    boolean hasPortNum();
    /**
     * <code>optional uint32 PortNum = 6;</code>
     *
     * <pre>
     *require for num
     * </pre>
     */
    int getPortNum();

    // optional uint32 ClientTick = 7;
    /**
     * <code>optional uint32 ClientTick = 7;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 7;</code>
     */
    int getClientTick();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssSyncApplyLocalPortReq}
   */
  public static final class CltDssSyncApplyLocalPortReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssSyncApplyLocalPortReqOrBuilder {
    // Use CltDssSyncApplyLocalPortReq.newBuilder() to construct.
    private CltDssSyncApplyLocalPortReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssSyncApplyLocalPortReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssSyncApplyLocalPortReq defaultInstance;
    public static CltDssSyncApplyLocalPortReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssSyncApplyLocalPortReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyLocalPortReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyLocalPortReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssSyncApplyLocalPortReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssSyncApplyLocalPortReq>() {
      public CltDssSyncApplyLocalPortReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssSyncApplyLocalPortReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     *
     * <pre>
     *mark cilent
     * </pre>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     *
     * <pre>
     *mark cilent
     * </pre>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *mark meeting
     * </pre>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *mark meeting
     * </pre>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *mark meeting
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string ForceWorkerIp = 3;
    public static final int FORCEWORKERIP_FIELD_NUMBER = 3;
    private java.lang.Object forceWorkerIp_;
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public boolean hasForceWorkerIp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public java.lang.String getForceWorkerIp() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          forceWorkerIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public com.google.protobuf.ByteString
        getForceWorkerIpBytes() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        forceWorkerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool ForceConsPort = 4;
    public static final int FORCECONSPORT_FIELD_NUMBER = 4;
    private boolean forceConsPort_;
    /**
     * <code>optional bool ForceConsPort = 4;</code>
     *
     * <pre>
     *force to allocate consecutive port	
     * </pre>
     */
    public boolean hasForceConsPort() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool ForceConsPort = 4;</code>
     *
     * <pre>
     *force to allocate consecutive port	
     * </pre>
     */
    public boolean getForceConsPort() {
      return forceConsPort_;
    }

    // optional uint32 BandWidth = 5;
    public static final int BANDWIDTH_FIELD_NUMBER = 5;
    private int bandWidth_;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     *
     * <pre>
     *require for bandwidth
     * </pre>
     */
    public boolean hasBandWidth() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     *
     * <pre>
     *require for bandwidth
     * </pre>
     */
    public int getBandWidth() {
      return bandWidth_;
    }

    // optional uint32 PortNum = 6;
    public static final int PORTNUM_FIELD_NUMBER = 6;
    private int portNum_;
    /**
     * <code>optional uint32 PortNum = 6;</code>
     *
     * <pre>
     *require for num
     * </pre>
     */
    public boolean hasPortNum() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 PortNum = 6;</code>
     *
     * <pre>
     *require for num
     * </pre>
     */
    public int getPortNum() {
      return portNum_;
    }

    // optional uint32 ClientTick = 7;
    public static final int CLIENTTICK_FIELD_NUMBER = 7;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 7;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 ClientTick = 7;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      forceWorkerIp_ = "";
      forceConsPort_ = false;
      bandWidth_ = 0;
      portNum_ = 0;
      clientTick_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssSyncApplyLocalPortReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyLocalPortReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyLocalPortReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        forceWorkerIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        forceConsPort_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        bandWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        portNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyLocalPortReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyLocalPortReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.forceWorkerIp_ = forceWorkerIp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.forceConsPort_ = forceConsPort_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bandWidth_ = bandWidth_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.portNum_ = portNum_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.clientTick_ = clientTick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       *
       * <pre>
       *mark cilent
       * </pre>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       *
       * <pre>
       *mark cilent
       * </pre>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       *
       * <pre>
       *mark cilent
       * </pre>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       *
       * <pre>
       *mark cilent
       * </pre>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *mark meeting
       * </pre>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *mark meeting
       * </pre>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *mark meeting
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *mark meeting
       * </pre>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *mark meeting
       * </pre>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *mark meeting
       * </pre>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional string ForceWorkerIp = 3;
      private java.lang.Object forceWorkerIp_ = "";
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public boolean hasForceWorkerIp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public java.lang.String getForceWorkerIp() {
        java.lang.Object ref = forceWorkerIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          forceWorkerIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public com.google.protobuf.ByteString
          getForceWorkerIpBytes() {
        java.lang.Object ref = forceWorkerIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          forceWorkerIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder setForceWorkerIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder clearForceWorkerIp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        forceWorkerIp_ = getDefaultInstance().getForceWorkerIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder setForceWorkerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }

      // optional bool ForceConsPort = 4;
      private boolean forceConsPort_ ;
      /**
       * <code>optional bool ForceConsPort = 4;</code>
       *
       * <pre>
       *force to allocate consecutive port	
       * </pre>
       */
      public boolean hasForceConsPort() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool ForceConsPort = 4;</code>
       *
       * <pre>
       *force to allocate consecutive port	
       * </pre>
       */
      public boolean getForceConsPort() {
        return forceConsPort_;
      }
      /**
       * <code>optional bool ForceConsPort = 4;</code>
       *
       * <pre>
       *force to allocate consecutive port	
       * </pre>
       */
      public Builder setForceConsPort(boolean value) {
        bitField0_ |= 0x00000008;
        forceConsPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ForceConsPort = 4;</code>
       *
       * <pre>
       *force to allocate consecutive port	
       * </pre>
       */
      public Builder clearForceConsPort() {
        bitField0_ = (bitField0_ & ~0x00000008);
        forceConsPort_ = false;
        onChanged();
        return this;
      }

      // optional uint32 BandWidth = 5;
      private int bandWidth_ ;
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       *
       * <pre>
       *require for bandwidth
       * </pre>
       */
      public boolean hasBandWidth() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       *
       * <pre>
       *require for bandwidth
       * </pre>
       */
      public int getBandWidth() {
        return bandWidth_;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       *
       * <pre>
       *require for bandwidth
       * </pre>
       */
      public Builder setBandWidth(int value) {
        bitField0_ |= 0x00000010;
        bandWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       *
       * <pre>
       *require for bandwidth
       * </pre>
       */
      public Builder clearBandWidth() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bandWidth_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 PortNum = 6;
      private int portNum_ ;
      /**
       * <code>optional uint32 PortNum = 6;</code>
       *
       * <pre>
       *require for num
       * </pre>
       */
      public boolean hasPortNum() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 PortNum = 6;</code>
       *
       * <pre>
       *require for num
       * </pre>
       */
      public int getPortNum() {
        return portNum_;
      }
      /**
       * <code>optional uint32 PortNum = 6;</code>
       *
       * <pre>
       *require for num
       * </pre>
       */
      public Builder setPortNum(int value) {
        bitField0_ |= 0x00000020;
        portNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortNum = 6;</code>
       *
       * <pre>
       *require for num
       * </pre>
       */
      public Builder clearPortNum() {
        bitField0_ = (bitField0_ & ~0x00000020);
        portNum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 7;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 7;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 ClientTick = 7;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 7;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000040;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 7;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000040);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssSyncApplyLocalPortReq)
    }

    static {
      defaultInstance = new CltDssSyncApplyLocalPortReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssSyncApplyLocalPortReq)
  }

  public interface DssCltSyncApplyLocalPortAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *for debug
     * </pre>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *for debug
     * </pre>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *for debug
     * </pre>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional uint32 PortHandle = 3;
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    boolean hasPortHandle();
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    int getPortHandle();

    // optional string WorkerIp = 4;
    /**
     * <code>optional string WorkerIp = 4;</code>
     */
    boolean hasWorkerIp();
    /**
     * <code>optional string WorkerIp = 4;</code>
     */
    java.lang.String getWorkerIp();
    /**
     * <code>optional string WorkerIp = 4;</code>
     */
    com.google.protobuf.ByteString
        getWorkerIpBytes();

    // repeated uint32 Port = 5;
    /**
     * <code>repeated uint32 Port = 5;</code>
     */
    java.util.List<java.lang.Integer> getPortList();
    /**
     * <code>repeated uint32 Port = 5;</code>
     */
    int getPortCount();
    /**
     * <code>repeated uint32 Port = 5;</code>
     */
    int getPort(int index);
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSyncApplyLocalPortAck}
   */
  public static final class DssCltSyncApplyLocalPortAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltSyncApplyLocalPortAckOrBuilder {
    // Use DssCltSyncApplyLocalPortAck.newBuilder() to construct.
    private DssCltSyncApplyLocalPortAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltSyncApplyLocalPortAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltSyncApplyLocalPortAck defaultInstance;
    public static DssCltSyncApplyLocalPortAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltSyncApplyLocalPortAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyLocalPortAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyLocalPortAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltSyncApplyLocalPortAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltSyncApplyLocalPortAck>() {
      public DssCltSyncApplyLocalPortAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltSyncApplyLocalPortAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *for debug
     * </pre>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *for debug
     * </pre>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *for debug
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 PortHandle = 3;
    public static final int PORTHANDLE_FIELD_NUMBER = 3;
    private int portHandle_;
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    public boolean hasPortHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    public int getPortHandle() {
      return portHandle_;
    }

    // optional string WorkerIp = 4;
    public static final int WORKERIP_FIELD_NUMBER = 4;
    private java.lang.Object workerIp_;
    /**
     * <code>optional string WorkerIp = 4;</code>
     */
    public boolean hasWorkerIp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string WorkerIp = 4;</code>
     */
    public java.lang.String getWorkerIp() {
      java.lang.Object ref = workerIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          workerIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string WorkerIp = 4;</code>
     */
    public com.google.protobuf.ByteString
        getWorkerIpBytes() {
      java.lang.Object ref = workerIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated uint32 Port = 5;
    public static final int PORT_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> port_;
    /**
     * <code>repeated uint32 Port = 5;</code>
     */
    public java.util.List<java.lang.Integer>
        getPortList() {
      return port_;
    }
    /**
     * <code>repeated uint32 Port = 5;</code>
     */
    public int getPortCount() {
      return port_.size();
    }
    /**
     * <code>repeated uint32 Port = 5;</code>
     */
    public int getPort(int index) {
      return port_.get(index);
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      portHandle_ = 0;
      workerIp_ = "";
      port_ = java.util.Collections.emptyList();
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSyncApplyLocalPortAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyLocalPortAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyLocalPortAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        portHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        workerIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        port_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyLocalPortAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.portHandle_ = portHandle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.workerIp_ = workerIp_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          port_ = java.util.Collections.unmodifiableList(port_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.port_ = port_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *for debug
       * </pre>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *for debug
       * </pre>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *for debug
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *for debug
       * </pre>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *for debug
       * </pre>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *for debug
       * </pre>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional uint32 PortHandle = 3;
      private int portHandle_ ;
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public boolean hasPortHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public int getPortHandle() {
        return portHandle_;
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public Builder setPortHandle(int value) {
        bitField0_ |= 0x00000004;
        portHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public Builder clearPortHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        portHandle_ = 0;
        onChanged();
        return this;
      }

      // optional string WorkerIp = 4;
      private java.lang.Object workerIp_ = "";
      /**
       * <code>optional string WorkerIp = 4;</code>
       */
      public boolean hasWorkerIp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string WorkerIp = 4;</code>
       */
      public java.lang.String getWorkerIp() {
        java.lang.Object ref = workerIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          workerIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string WorkerIp = 4;</code>
       */
      public com.google.protobuf.ByteString
          getWorkerIpBytes() {
        java.lang.Object ref = workerIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          workerIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string WorkerIp = 4;</code>
       */
      public Builder setWorkerIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        workerIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string WorkerIp = 4;</code>
       */
      public Builder clearWorkerIp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        workerIp_ = getDefaultInstance().getWorkerIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string WorkerIp = 4;</code>
       */
      public Builder setWorkerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        workerIp_ = value;
        onChanged();
        return this;
      }

      // repeated uint32 Port = 5;
      private java.util.List<java.lang.Integer> port_ = java.util.Collections.emptyList();
      private void ensurePortIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          port_ = new java.util.ArrayList<java.lang.Integer>(port_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated uint32 Port = 5;</code>
       */
      public java.util.List<java.lang.Integer>
          getPortList() {
        return java.util.Collections.unmodifiableList(port_);
      }
      /**
       * <code>repeated uint32 Port = 5;</code>
       */
      public int getPortCount() {
        return port_.size();
      }
      /**
       * <code>repeated uint32 Port = 5;</code>
       */
      public int getPort(int index) {
        return port_.get(index);
      }
      /**
       * <code>repeated uint32 Port = 5;</code>
       */
      public Builder setPort(
          int index, int value) {
        ensurePortIsMutable();
        port_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 Port = 5;</code>
       */
      public Builder addPort(int value) {
        ensurePortIsMutable();
        port_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 Port = 5;</code>
       */
      public Builder addAllPort(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePortIsMutable();
        super.addAll(values, port_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 Port = 5;</code>
       */
      public Builder clearPort() {
        port_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltSyncApplyLocalPortAck)
    }

    static {
      defaultInstance = new DssCltSyncApplyLocalPortAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltSyncApplyLocalPortAck)
  }

  public interface DssCltSyncApplyLocalPortNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional string ForceWorkerIp = 3;
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     */
    boolean hasForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     */
    java.lang.String getForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     */
    com.google.protobuf.ByteString
        getForceWorkerIpBytes();

    // optional bool ForceConsPort = 4;
    /**
     * <code>optional bool ForceConsPort = 4;</code>
     */
    boolean hasForceConsPort();
    /**
     * <code>optional bool ForceConsPort = 4;</code>
     */
    boolean getForceConsPort();

    // optional uint32 BandWidth = 5;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    boolean hasBandWidth();
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    int getBandWidth();

    // optional uint32 PortNum = 6;
    /**
     * <code>optional uint32 PortNum = 6;</code>
     */
    boolean hasPortNum();
    /**
     * <code>optional uint32 PortNum = 6;</code>
     */
    int getPortNum();

    // optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;</code>
     */
    boolean hasResultCode();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.EDssLocalReqResultCode getResultCode();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSyncApplyLocalPortNack}
   */
  public static final class DssCltSyncApplyLocalPortNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltSyncApplyLocalPortNackOrBuilder {
    // Use DssCltSyncApplyLocalPortNack.newBuilder() to construct.
    private DssCltSyncApplyLocalPortNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltSyncApplyLocalPortNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltSyncApplyLocalPortNack defaultInstance;
    public static DssCltSyncApplyLocalPortNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltSyncApplyLocalPortNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyLocalPortNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyLocalPortNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltSyncApplyLocalPortNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltSyncApplyLocalPortNack>() {
      public DssCltSyncApplyLocalPortNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltSyncApplyLocalPortNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string ForceWorkerIp = 3;
    public static final int FORCEWORKERIP_FIELD_NUMBER = 3;
    private java.lang.Object forceWorkerIp_;
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     */
    public boolean hasForceWorkerIp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     */
    public java.lang.String getForceWorkerIp() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          forceWorkerIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     */
    public com.google.protobuf.ByteString
        getForceWorkerIpBytes() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        forceWorkerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool ForceConsPort = 4;
    public static final int FORCECONSPORT_FIELD_NUMBER = 4;
    private boolean forceConsPort_;
    /**
     * <code>optional bool ForceConsPort = 4;</code>
     */
    public boolean hasForceConsPort() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool ForceConsPort = 4;</code>
     */
    public boolean getForceConsPort() {
      return forceConsPort_;
    }

    // optional uint32 BandWidth = 5;
    public static final int BANDWIDTH_FIELD_NUMBER = 5;
    private int bandWidth_;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    public boolean hasBandWidth() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    public int getBandWidth() {
      return bandWidth_;
    }

    // optional uint32 PortNum = 6;
    public static final int PORTNUM_FIELD_NUMBER = 6;
    private int portNum_;
    /**
     * <code>optional uint32 PortNum = 6;</code>
     */
    public boolean hasPortNum() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 PortNum = 6;</code>
     */
    public int getPortNum() {
      return portNum_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;
    public static final int RESULTCODE_FIELD_NUMBER = 7;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.EDssLocalReqResultCode resultCode_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;</code>
     */
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.EDssLocalReqResultCode getResultCode() {
      return resultCode_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      forceWorkerIp_ = "";
      forceConsPort_ = false;
      bandWidth_ = 0;
      portNum_ = 0;
      resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssLocalReqResultCode.eLocalSucceed;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSyncApplyLocalPortNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyLocalPortNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyLocalPortNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        forceWorkerIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        forceConsPort_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        bandWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        portNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssLocalReqResultCode.eLocalSucceed;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyLocalPortNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyLocalPortNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.forceWorkerIp_ = forceWorkerIp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.forceConsPort_ = forceConsPort_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bandWidth_ = bandWidth_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.portNum_ = portNum_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.resultCode_ = resultCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional string ForceWorkerIp = 3;
      private java.lang.Object forceWorkerIp_ = "";
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       */
      public boolean hasForceWorkerIp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       */
      public java.lang.String getForceWorkerIp() {
        java.lang.Object ref = forceWorkerIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          forceWorkerIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       */
      public com.google.protobuf.ByteString
          getForceWorkerIpBytes() {
        java.lang.Object ref = forceWorkerIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          forceWorkerIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       */
      public Builder setForceWorkerIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       */
      public Builder clearForceWorkerIp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        forceWorkerIp_ = getDefaultInstance().getForceWorkerIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       */
      public Builder setForceWorkerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }

      // optional bool ForceConsPort = 4;
      private boolean forceConsPort_ ;
      /**
       * <code>optional bool ForceConsPort = 4;</code>
       */
      public boolean hasForceConsPort() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool ForceConsPort = 4;</code>
       */
      public boolean getForceConsPort() {
        return forceConsPort_;
      }
      /**
       * <code>optional bool ForceConsPort = 4;</code>
       */
      public Builder setForceConsPort(boolean value) {
        bitField0_ |= 0x00000008;
        forceConsPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ForceConsPort = 4;</code>
       */
      public Builder clearForceConsPort() {
        bitField0_ = (bitField0_ & ~0x00000008);
        forceConsPort_ = false;
        onChanged();
        return this;
      }

      // optional uint32 BandWidth = 5;
      private int bandWidth_ ;
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public boolean hasBandWidth() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public int getBandWidth() {
        return bandWidth_;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public Builder setBandWidth(int value) {
        bitField0_ |= 0x00000010;
        bandWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public Builder clearBandWidth() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bandWidth_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 PortNum = 6;
      private int portNum_ ;
      /**
       * <code>optional uint32 PortNum = 6;</code>
       */
      public boolean hasPortNum() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 PortNum = 6;</code>
       */
      public int getPortNum() {
        return portNum_;
      }
      /**
       * <code>optional uint32 PortNum = 6;</code>
       */
      public Builder setPortNum(int value) {
        bitField0_ |= 0x00000020;
        portNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortNum = 6;</code>
       */
      public Builder clearPortNum() {
        bitField0_ = (bitField0_ & ~0x00000020);
        portNum_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.EDssLocalReqResultCode resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssLocalReqResultCode.eLocalSucceed;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;</code>
       */
      public boolean hasResultCode() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.EDssLocalReqResultCode getResultCode() {
        return resultCode_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;</code>
       */
      public Builder setResultCode(com.kedacom.ops.flink.etl.proto.Dssevenum.EDssLocalReqResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        resultCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;</code>
       */
      public Builder clearResultCode() {
        bitField0_ = (bitField0_ & ~0x00000040);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssLocalReqResultCode.eLocalSucceed;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltSyncApplyLocalPortNack)
    }

    static {
      defaultInstance = new DssCltSyncApplyLocalPortNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltSyncApplyLocalPortNack)
  }

  public interface CltDssASyncApplyLocalPortReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     *
     * <pre>
     *mark cilent
     * </pre>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     *
     * <pre>
     *mark cilent
     * </pre>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *mark meeting
     * </pre>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *mark meeting
     * </pre>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *mark meeting
     * </pre>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional string ForceWorkerIp = 3;
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    boolean hasForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    java.lang.String getForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    com.google.protobuf.ByteString
        getForceWorkerIpBytes();

    // optional bool ForceConsPort = 4;
    /**
     * <code>optional bool ForceConsPort = 4;</code>
     *
     * <pre>
     *force to allocate consecutive port	
     * </pre>
     */
    boolean hasForceConsPort();
    /**
     * <code>optional bool ForceConsPort = 4;</code>
     *
     * <pre>
     *force to allocate consecutive port	
     * </pre>
     */
    boolean getForceConsPort();

    // optional uint32 BandWidth = 5;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     *
     * <pre>
     *require for bandwidth
     * </pre>
     */
    boolean hasBandWidth();
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     *
     * <pre>
     *require for bandwidth
     * </pre>
     */
    int getBandWidth();

    // optional uint32 PortNum = 6;
    /**
     * <code>optional uint32 PortNum = 6;</code>
     *
     * <pre>
     *require for num
     * </pre>
     */
    boolean hasPortNum();
    /**
     * <code>optional uint32 PortNum = 6;</code>
     *
     * <pre>
     *require for num
     * </pre>
     */
    int getPortNum();

    // optional uint32 ClientTick = 7;
    /**
     * <code>optional uint32 ClientTick = 7;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 7;</code>
     */
    int getClientTick();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssASyncApplyLocalPortReq}
   */
  public static final class CltDssASyncApplyLocalPortReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssASyncApplyLocalPortReqOrBuilder {
    // Use CltDssASyncApplyLocalPortReq.newBuilder() to construct.
    private CltDssASyncApplyLocalPortReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssASyncApplyLocalPortReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssASyncApplyLocalPortReq defaultInstance;
    public static CltDssASyncApplyLocalPortReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssASyncApplyLocalPortReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyLocalPortReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyLocalPortReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssASyncApplyLocalPortReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssASyncApplyLocalPortReq>() {
      public CltDssASyncApplyLocalPortReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssASyncApplyLocalPortReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     *
     * <pre>
     *mark cilent
     * </pre>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     *
     * <pre>
     *mark cilent
     * </pre>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *mark meeting
     * </pre>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *mark meeting
     * </pre>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *mark meeting
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string ForceWorkerIp = 3;
    public static final int FORCEWORKERIP_FIELD_NUMBER = 3;
    private java.lang.Object forceWorkerIp_;
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public boolean hasForceWorkerIp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public java.lang.String getForceWorkerIp() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          forceWorkerIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public com.google.protobuf.ByteString
        getForceWorkerIpBytes() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        forceWorkerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool ForceConsPort = 4;
    public static final int FORCECONSPORT_FIELD_NUMBER = 4;
    private boolean forceConsPort_;
    /**
     * <code>optional bool ForceConsPort = 4;</code>
     *
     * <pre>
     *force to allocate consecutive port	
     * </pre>
     */
    public boolean hasForceConsPort() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool ForceConsPort = 4;</code>
     *
     * <pre>
     *force to allocate consecutive port	
     * </pre>
     */
    public boolean getForceConsPort() {
      return forceConsPort_;
    }

    // optional uint32 BandWidth = 5;
    public static final int BANDWIDTH_FIELD_NUMBER = 5;
    private int bandWidth_;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     *
     * <pre>
     *require for bandwidth
     * </pre>
     */
    public boolean hasBandWidth() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     *
     * <pre>
     *require for bandwidth
     * </pre>
     */
    public int getBandWidth() {
      return bandWidth_;
    }

    // optional uint32 PortNum = 6;
    public static final int PORTNUM_FIELD_NUMBER = 6;
    private int portNum_;
    /**
     * <code>optional uint32 PortNum = 6;</code>
     *
     * <pre>
     *require for num
     * </pre>
     */
    public boolean hasPortNum() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 PortNum = 6;</code>
     *
     * <pre>
     *require for num
     * </pre>
     */
    public int getPortNum() {
      return portNum_;
    }

    // optional uint32 ClientTick = 7;
    public static final int CLIENTTICK_FIELD_NUMBER = 7;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 7;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 ClientTick = 7;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      forceWorkerIp_ = "";
      forceConsPort_ = false;
      bandWidth_ = 0;
      portNum_ = 0;
      clientTick_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssASyncApplyLocalPortReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyLocalPortReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyLocalPortReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        forceWorkerIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        forceConsPort_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        bandWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        portNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyLocalPortReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyLocalPortReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.forceWorkerIp_ = forceWorkerIp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.forceConsPort_ = forceConsPort_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bandWidth_ = bandWidth_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.portNum_ = portNum_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.clientTick_ = clientTick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       *
       * <pre>
       *mark cilent
       * </pre>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       *
       * <pre>
       *mark cilent
       * </pre>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       *
       * <pre>
       *mark cilent
       * </pre>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       *
       * <pre>
       *mark cilent
       * </pre>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *mark meeting
       * </pre>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *mark meeting
       * </pre>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *mark meeting
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *mark meeting
       * </pre>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *mark meeting
       * </pre>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *mark meeting
       * </pre>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional string ForceWorkerIp = 3;
      private java.lang.Object forceWorkerIp_ = "";
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public boolean hasForceWorkerIp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public java.lang.String getForceWorkerIp() {
        java.lang.Object ref = forceWorkerIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          forceWorkerIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public com.google.protobuf.ByteString
          getForceWorkerIpBytes() {
        java.lang.Object ref = forceWorkerIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          forceWorkerIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder setForceWorkerIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder clearForceWorkerIp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        forceWorkerIp_ = getDefaultInstance().getForceWorkerIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder setForceWorkerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }

      // optional bool ForceConsPort = 4;
      private boolean forceConsPort_ ;
      /**
       * <code>optional bool ForceConsPort = 4;</code>
       *
       * <pre>
       *force to allocate consecutive port	
       * </pre>
       */
      public boolean hasForceConsPort() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool ForceConsPort = 4;</code>
       *
       * <pre>
       *force to allocate consecutive port	
       * </pre>
       */
      public boolean getForceConsPort() {
        return forceConsPort_;
      }
      /**
       * <code>optional bool ForceConsPort = 4;</code>
       *
       * <pre>
       *force to allocate consecutive port	
       * </pre>
       */
      public Builder setForceConsPort(boolean value) {
        bitField0_ |= 0x00000008;
        forceConsPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ForceConsPort = 4;</code>
       *
       * <pre>
       *force to allocate consecutive port	
       * </pre>
       */
      public Builder clearForceConsPort() {
        bitField0_ = (bitField0_ & ~0x00000008);
        forceConsPort_ = false;
        onChanged();
        return this;
      }

      // optional uint32 BandWidth = 5;
      private int bandWidth_ ;
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       *
       * <pre>
       *require for bandwidth
       * </pre>
       */
      public boolean hasBandWidth() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       *
       * <pre>
       *require for bandwidth
       * </pre>
       */
      public int getBandWidth() {
        return bandWidth_;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       *
       * <pre>
       *require for bandwidth
       * </pre>
       */
      public Builder setBandWidth(int value) {
        bitField0_ |= 0x00000010;
        bandWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       *
       * <pre>
       *require for bandwidth
       * </pre>
       */
      public Builder clearBandWidth() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bandWidth_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 PortNum = 6;
      private int portNum_ ;
      /**
       * <code>optional uint32 PortNum = 6;</code>
       *
       * <pre>
       *require for num
       * </pre>
       */
      public boolean hasPortNum() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 PortNum = 6;</code>
       *
       * <pre>
       *require for num
       * </pre>
       */
      public int getPortNum() {
        return portNum_;
      }
      /**
       * <code>optional uint32 PortNum = 6;</code>
       *
       * <pre>
       *require for num
       * </pre>
       */
      public Builder setPortNum(int value) {
        bitField0_ |= 0x00000020;
        portNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortNum = 6;</code>
       *
       * <pre>
       *require for num
       * </pre>
       */
      public Builder clearPortNum() {
        bitField0_ = (bitField0_ & ~0x00000020);
        portNum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 7;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 7;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 ClientTick = 7;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 7;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000040;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 7;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000040);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssASyncApplyLocalPortReq)
    }

    static {
      defaultInstance = new CltDssASyncApplyLocalPortReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssASyncApplyLocalPortReq)
  }

  public interface DssCltASyncApplyLocalPortAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *for debug
     * </pre>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *for debug
     * </pre>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *for debug
     * </pre>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional uint32 PortHandle = 3;
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    boolean hasPortHandle();
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    int getPortHandle();

    // optional string WorkerIp = 4;
    /**
     * <code>optional string WorkerIp = 4;</code>
     */
    boolean hasWorkerIp();
    /**
     * <code>optional string WorkerIp = 4;</code>
     */
    java.lang.String getWorkerIp();
    /**
     * <code>optional string WorkerIp = 4;</code>
     */
    com.google.protobuf.ByteString
        getWorkerIpBytes();

    // repeated uint32 Port = 5;
    /**
     * <code>repeated uint32 Port = 5;</code>
     */
    java.util.List<java.lang.Integer> getPortList();
    /**
     * <code>repeated uint32 Port = 5;</code>
     */
    int getPortCount();
    /**
     * <code>repeated uint32 Port = 5;</code>
     */
    int getPort(int index);
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltASyncApplyLocalPortAck}
   */
  public static final class DssCltASyncApplyLocalPortAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltASyncApplyLocalPortAckOrBuilder {
    // Use DssCltASyncApplyLocalPortAck.newBuilder() to construct.
    private DssCltASyncApplyLocalPortAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltASyncApplyLocalPortAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltASyncApplyLocalPortAck defaultInstance;
    public static DssCltASyncApplyLocalPortAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltASyncApplyLocalPortAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyLocalPortAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyLocalPortAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltASyncApplyLocalPortAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltASyncApplyLocalPortAck>() {
      public DssCltASyncApplyLocalPortAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltASyncApplyLocalPortAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *for debug
     * </pre>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *for debug
     * </pre>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     *
     * <pre>
     *for debug
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 PortHandle = 3;
    public static final int PORTHANDLE_FIELD_NUMBER = 3;
    private int portHandle_;
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    public boolean hasPortHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    public int getPortHandle() {
      return portHandle_;
    }

    // optional string WorkerIp = 4;
    public static final int WORKERIP_FIELD_NUMBER = 4;
    private java.lang.Object workerIp_;
    /**
     * <code>optional string WorkerIp = 4;</code>
     */
    public boolean hasWorkerIp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string WorkerIp = 4;</code>
     */
    public java.lang.String getWorkerIp() {
      java.lang.Object ref = workerIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          workerIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string WorkerIp = 4;</code>
     */
    public com.google.protobuf.ByteString
        getWorkerIpBytes() {
      java.lang.Object ref = workerIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated uint32 Port = 5;
    public static final int PORT_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> port_;
    /**
     * <code>repeated uint32 Port = 5;</code>
     */
    public java.util.List<java.lang.Integer>
        getPortList() {
      return port_;
    }
    /**
     * <code>repeated uint32 Port = 5;</code>
     */
    public int getPortCount() {
      return port_.size();
    }
    /**
     * <code>repeated uint32 Port = 5;</code>
     */
    public int getPort(int index) {
      return port_.get(index);
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      portHandle_ = 0;
      workerIp_ = "";
      port_ = java.util.Collections.emptyList();
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltASyncApplyLocalPortAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyLocalPortAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyLocalPortAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        portHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        workerIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        port_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyLocalPortAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.portHandle_ = portHandle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.workerIp_ = workerIp_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          port_ = java.util.Collections.unmodifiableList(port_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.port_ = port_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *for debug
       * </pre>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *for debug
       * </pre>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *for debug
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *for debug
       * </pre>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *for debug
       * </pre>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       *
       * <pre>
       *for debug
       * </pre>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional uint32 PortHandle = 3;
      private int portHandle_ ;
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public boolean hasPortHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public int getPortHandle() {
        return portHandle_;
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public Builder setPortHandle(int value) {
        bitField0_ |= 0x00000004;
        portHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public Builder clearPortHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        portHandle_ = 0;
        onChanged();
        return this;
      }

      // optional string WorkerIp = 4;
      private java.lang.Object workerIp_ = "";
      /**
       * <code>optional string WorkerIp = 4;</code>
       */
      public boolean hasWorkerIp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string WorkerIp = 4;</code>
       */
      public java.lang.String getWorkerIp() {
        java.lang.Object ref = workerIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          workerIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string WorkerIp = 4;</code>
       */
      public com.google.protobuf.ByteString
          getWorkerIpBytes() {
        java.lang.Object ref = workerIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          workerIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string WorkerIp = 4;</code>
       */
      public Builder setWorkerIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        workerIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string WorkerIp = 4;</code>
       */
      public Builder clearWorkerIp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        workerIp_ = getDefaultInstance().getWorkerIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string WorkerIp = 4;</code>
       */
      public Builder setWorkerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        workerIp_ = value;
        onChanged();
        return this;
      }

      // repeated uint32 Port = 5;
      private java.util.List<java.lang.Integer> port_ = java.util.Collections.emptyList();
      private void ensurePortIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          port_ = new java.util.ArrayList<java.lang.Integer>(port_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated uint32 Port = 5;</code>
       */
      public java.util.List<java.lang.Integer>
          getPortList() {
        return java.util.Collections.unmodifiableList(port_);
      }
      /**
       * <code>repeated uint32 Port = 5;</code>
       */
      public int getPortCount() {
        return port_.size();
      }
      /**
       * <code>repeated uint32 Port = 5;</code>
       */
      public int getPort(int index) {
        return port_.get(index);
      }
      /**
       * <code>repeated uint32 Port = 5;</code>
       */
      public Builder setPort(
          int index, int value) {
        ensurePortIsMutable();
        port_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 Port = 5;</code>
       */
      public Builder addPort(int value) {
        ensurePortIsMutable();
        port_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 Port = 5;</code>
       */
      public Builder addAllPort(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePortIsMutable();
        super.addAll(values, port_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 Port = 5;</code>
       */
      public Builder clearPort() {
        port_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltASyncApplyLocalPortAck)
    }

    static {
      defaultInstance = new DssCltASyncApplyLocalPortAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltASyncApplyLocalPortAck)
  }

  public interface DssCltASyncApplyLocalPortNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional string ForceWorkerIp = 3;
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     */
    boolean hasForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     */
    java.lang.String getForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     */
    com.google.protobuf.ByteString
        getForceWorkerIpBytes();

    // optional bool ForceConsPort = 4;
    /**
     * <code>optional bool ForceConsPort = 4;</code>
     */
    boolean hasForceConsPort();
    /**
     * <code>optional bool ForceConsPort = 4;</code>
     */
    boolean getForceConsPort();

    // optional uint32 BandWidth = 5;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    boolean hasBandWidth();
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    int getBandWidth();

    // optional uint32 PortNum = 6;
    /**
     * <code>optional uint32 PortNum = 6;</code>
     */
    boolean hasPortNum();
    /**
     * <code>optional uint32 PortNum = 6;</code>
     */
    int getPortNum();

    // optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;</code>
     */
    boolean hasResultCode();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.EDssLocalReqResultCode getResultCode();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltASyncApplyLocalPortNack}
   */
  public static final class DssCltASyncApplyLocalPortNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltASyncApplyLocalPortNackOrBuilder {
    // Use DssCltASyncApplyLocalPortNack.newBuilder() to construct.
    private DssCltASyncApplyLocalPortNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltASyncApplyLocalPortNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltASyncApplyLocalPortNack defaultInstance;
    public static DssCltASyncApplyLocalPortNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltASyncApplyLocalPortNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyLocalPortNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyLocalPortNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltASyncApplyLocalPortNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltASyncApplyLocalPortNack>() {
      public DssCltASyncApplyLocalPortNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltASyncApplyLocalPortNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string ForceWorkerIp = 3;
    public static final int FORCEWORKERIP_FIELD_NUMBER = 3;
    private java.lang.Object forceWorkerIp_;
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     */
    public boolean hasForceWorkerIp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     */
    public java.lang.String getForceWorkerIp() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          forceWorkerIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ForceWorkerIp = 3;</code>
     */
    public com.google.protobuf.ByteString
        getForceWorkerIpBytes() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        forceWorkerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool ForceConsPort = 4;
    public static final int FORCECONSPORT_FIELD_NUMBER = 4;
    private boolean forceConsPort_;
    /**
     * <code>optional bool ForceConsPort = 4;</code>
     */
    public boolean hasForceConsPort() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool ForceConsPort = 4;</code>
     */
    public boolean getForceConsPort() {
      return forceConsPort_;
    }

    // optional uint32 BandWidth = 5;
    public static final int BANDWIDTH_FIELD_NUMBER = 5;
    private int bandWidth_;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    public boolean hasBandWidth() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    public int getBandWidth() {
      return bandWidth_;
    }

    // optional uint32 PortNum = 6;
    public static final int PORTNUM_FIELD_NUMBER = 6;
    private int portNum_;
    /**
     * <code>optional uint32 PortNum = 6;</code>
     */
    public boolean hasPortNum() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 PortNum = 6;</code>
     */
    public int getPortNum() {
      return portNum_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;
    public static final int RESULTCODE_FIELD_NUMBER = 7;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.EDssLocalReqResultCode resultCode_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;</code>
     */
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.EDssLocalReqResultCode getResultCode() {
      return resultCode_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      forceWorkerIp_ = "";
      forceConsPort_ = false;
      bandWidth_ = 0;
      portNum_ = 0;
      resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssLocalReqResultCode.eLocalSucceed;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltASyncApplyLocalPortNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyLocalPortNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyLocalPortNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        forceWorkerIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        forceConsPort_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        bandWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        portNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssLocalReqResultCode.eLocalSucceed;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyLocalPortNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyLocalPortNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.forceWorkerIp_ = forceWorkerIp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.forceConsPort_ = forceConsPort_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bandWidth_ = bandWidth_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.portNum_ = portNum_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.resultCode_ = resultCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional string ForceWorkerIp = 3;
      private java.lang.Object forceWorkerIp_ = "";
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       */
      public boolean hasForceWorkerIp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       */
      public java.lang.String getForceWorkerIp() {
        java.lang.Object ref = forceWorkerIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          forceWorkerIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       */
      public com.google.protobuf.ByteString
          getForceWorkerIpBytes() {
        java.lang.Object ref = forceWorkerIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          forceWorkerIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       */
      public Builder setForceWorkerIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       */
      public Builder clearForceWorkerIp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        forceWorkerIp_ = getDefaultInstance().getForceWorkerIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 3;</code>
       */
      public Builder setForceWorkerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }

      // optional bool ForceConsPort = 4;
      private boolean forceConsPort_ ;
      /**
       * <code>optional bool ForceConsPort = 4;</code>
       */
      public boolean hasForceConsPort() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool ForceConsPort = 4;</code>
       */
      public boolean getForceConsPort() {
        return forceConsPort_;
      }
      /**
       * <code>optional bool ForceConsPort = 4;</code>
       */
      public Builder setForceConsPort(boolean value) {
        bitField0_ |= 0x00000008;
        forceConsPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ForceConsPort = 4;</code>
       */
      public Builder clearForceConsPort() {
        bitField0_ = (bitField0_ & ~0x00000008);
        forceConsPort_ = false;
        onChanged();
        return this;
      }

      // optional uint32 BandWidth = 5;
      private int bandWidth_ ;
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public boolean hasBandWidth() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public int getBandWidth() {
        return bandWidth_;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public Builder setBandWidth(int value) {
        bitField0_ |= 0x00000010;
        bandWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public Builder clearBandWidth() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bandWidth_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 PortNum = 6;
      private int portNum_ ;
      /**
       * <code>optional uint32 PortNum = 6;</code>
       */
      public boolean hasPortNum() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 PortNum = 6;</code>
       */
      public int getPortNum() {
        return portNum_;
      }
      /**
       * <code>optional uint32 PortNum = 6;</code>
       */
      public Builder setPortNum(int value) {
        bitField0_ |= 0x00000020;
        portNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortNum = 6;</code>
       */
      public Builder clearPortNum() {
        bitField0_ = (bitField0_ & ~0x00000020);
        portNum_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.EDssLocalReqResultCode resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssLocalReqResultCode.eLocalSucceed;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;</code>
       */
      public boolean hasResultCode() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.EDssLocalReqResultCode getResultCode() {
        return resultCode_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;</code>
       */
      public Builder setResultCode(com.kedacom.ops.flink.etl.proto.Dssevenum.EDssLocalReqResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        resultCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssLocalReqResultCode ResultCode = 7;</code>
       */
      public Builder clearResultCode() {
        bitField0_ = (bitField0_ & ~0x00000040);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssLocalReqResultCode.eLocalSucceed;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltASyncApplyLocalPortNack)
    }

    static {
      defaultInstance = new DssCltASyncApplyLocalPortNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltASyncApplyLocalPortNack)
  }

  public interface CltDssSyncApplyCarrierPortReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string ForceWorkerIp = 2;
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    boolean hasForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    java.lang.String getForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    com.google.protobuf.ByteString
        getForceWorkerIpBytes();

    // optional string MeetingHandle = 3;
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional uint32 PortNum = 4;
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    boolean hasPortNum();
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    int getPortNum();

    // optional uint32 BandWidth = 5;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    boolean hasBandWidth();
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    int getBandWidth();

    // optional bool ForceConsPort = 6;
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    boolean hasForceConsPort();
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    boolean getForceConsPort();

    // optional string ChannerCarrierType = 7;
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    boolean hasChannerCarrierType();
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    java.lang.String getChannerCarrierType();
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    com.google.protobuf.ByteString
        getChannerCarrierTypeBytes();

    // optional bool IsChannerDmz = 8;
    /**
     * <code>optional bool IsChannerDmz = 8;</code>
     */
    boolean hasIsChannerDmz();
    /**
     * <code>optional bool IsChannerDmz = 8;</code>
     */
    boolean getIsChannerDmz();

    // optional string ChanneeCarrierType = 9;
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    boolean hasChanneeCarrierType();
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    java.lang.String getChanneeCarrierType();
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    com.google.protobuf.ByteString
        getChanneeCarrierTypeBytes();

    // optional bool IsChanneeDmz = 10;
    /**
     * <code>optional bool IsChanneeDmz = 10;</code>
     */
    boolean hasIsChanneeDmz();
    /**
     * <code>optional bool IsChanneeDmz = 10;</code>
     */
    boolean getIsChanneeDmz();

    // optional uint32 ClientTick = 11;
    /**
     * <code>optional uint32 ClientTick = 11;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 11;</code>
     */
    int getClientTick();

    // optional uint32 MtEncyptType = 12;
    /**
     * <code>optional uint32 MtEncyptType = 12;</code>
     */
    boolean hasMtEncyptType();
    /**
     * <code>optional uint32 MtEncyptType = 12;</code>
     */
    int getMtEncyptType();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssSyncApplyCarrierPortReq}
   */
  public static final class CltDssSyncApplyCarrierPortReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssSyncApplyCarrierPortReqOrBuilder {
    // Use CltDssSyncApplyCarrierPortReq.newBuilder() to construct.
    private CltDssSyncApplyCarrierPortReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssSyncApplyCarrierPortReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssSyncApplyCarrierPortReq defaultInstance;
    public static CltDssSyncApplyCarrierPortReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssSyncApplyCarrierPortReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyCarrierPortReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyCarrierPortReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssSyncApplyCarrierPortReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssSyncApplyCarrierPortReq>() {
      public CltDssSyncApplyCarrierPortReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssSyncApplyCarrierPortReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string ForceWorkerIp = 2;
    public static final int FORCEWORKERIP_FIELD_NUMBER = 2;
    private java.lang.Object forceWorkerIp_;
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public boolean hasForceWorkerIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public java.lang.String getForceWorkerIp() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          forceWorkerIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public com.google.protobuf.ByteString
        getForceWorkerIpBytes() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        forceWorkerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string MeetingHandle = 3;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 3;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 PortNum = 4;
    public static final int PORTNUM_FIELD_NUMBER = 4;
    private int portNum_;
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    public boolean hasPortNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    public int getPortNum() {
      return portNum_;
    }

    // optional uint32 BandWidth = 5;
    public static final int BANDWIDTH_FIELD_NUMBER = 5;
    private int bandWidth_;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    public boolean hasBandWidth() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    public int getBandWidth() {
      return bandWidth_;
    }

    // optional bool ForceConsPort = 6;
    public static final int FORCECONSPORT_FIELD_NUMBER = 6;
    private boolean forceConsPort_;
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    public boolean hasForceConsPort() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    public boolean getForceConsPort() {
      return forceConsPort_;
    }

    // optional string ChannerCarrierType = 7;
    public static final int CHANNERCARRIERTYPE_FIELD_NUMBER = 7;
    private java.lang.Object channerCarrierType_;
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    public boolean hasChannerCarrierType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    public java.lang.String getChannerCarrierType() {
      java.lang.Object ref = channerCarrierType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channerCarrierType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    public com.google.protobuf.ByteString
        getChannerCarrierTypeBytes() {
      java.lang.Object ref = channerCarrierType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channerCarrierType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool IsChannerDmz = 8;
    public static final int ISCHANNERDMZ_FIELD_NUMBER = 8;
    private boolean isChannerDmz_;
    /**
     * <code>optional bool IsChannerDmz = 8;</code>
     */
    public boolean hasIsChannerDmz() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool IsChannerDmz = 8;</code>
     */
    public boolean getIsChannerDmz() {
      return isChannerDmz_;
    }

    // optional string ChanneeCarrierType = 9;
    public static final int CHANNEECARRIERTYPE_FIELD_NUMBER = 9;
    private java.lang.Object channeeCarrierType_;
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    public boolean hasChanneeCarrierType() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    public java.lang.String getChanneeCarrierType() {
      java.lang.Object ref = channeeCarrierType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channeeCarrierType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    public com.google.protobuf.ByteString
        getChanneeCarrierTypeBytes() {
      java.lang.Object ref = channeeCarrierType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channeeCarrierType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool IsChanneeDmz = 10;
    public static final int ISCHANNEEDMZ_FIELD_NUMBER = 10;
    private boolean isChanneeDmz_;
    /**
     * <code>optional bool IsChanneeDmz = 10;</code>
     */
    public boolean hasIsChanneeDmz() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool IsChanneeDmz = 10;</code>
     */
    public boolean getIsChanneeDmz() {
      return isChanneeDmz_;
    }

    // optional uint32 ClientTick = 11;
    public static final int CLIENTTICK_FIELD_NUMBER = 11;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 11;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 ClientTick = 11;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    // optional uint32 MtEncyptType = 12;
    public static final int MTENCYPTTYPE_FIELD_NUMBER = 12;
    private int mtEncyptType_;
    /**
     * <code>optional uint32 MtEncyptType = 12;</code>
     */
    public boolean hasMtEncyptType() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 MtEncyptType = 12;</code>
     */
    public int getMtEncyptType() {
      return mtEncyptType_;
    }

    private void initFields() {
      clientId_ = 0;
      forceWorkerIp_ = "";
      meetingHandle_ = "";
      portNum_ = 0;
      bandWidth_ = 0;
      forceConsPort_ = false;
      channerCarrierType_ = "";
      isChannerDmz_ = false;
      channeeCarrierType_ = "";
      isChanneeDmz_ = false;
      clientTick_ = 0;
      mtEncyptType_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssSyncApplyCarrierPortReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyCarrierPortReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyCarrierPortReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        forceWorkerIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        portNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bandWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        forceConsPort_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        channerCarrierType_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        isChannerDmz_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        channeeCarrierType_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        isChanneeDmz_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        mtEncyptType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyCarrierPortReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyCarrierPortReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.forceWorkerIp_ = forceWorkerIp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.portNum_ = portNum_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bandWidth_ = bandWidth_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.forceConsPort_ = forceConsPort_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.channerCarrierType_ = channerCarrierType_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.isChannerDmz_ = isChannerDmz_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.channeeCarrierType_ = channeeCarrierType_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.isChanneeDmz_ = isChanneeDmz_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.clientTick_ = clientTick_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.mtEncyptType_ = mtEncyptType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string ForceWorkerIp = 2;
      private java.lang.Object forceWorkerIp_ = "";
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public boolean hasForceWorkerIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public java.lang.String getForceWorkerIp() {
        java.lang.Object ref = forceWorkerIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          forceWorkerIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public com.google.protobuf.ByteString
          getForceWorkerIpBytes() {
        java.lang.Object ref = forceWorkerIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          forceWorkerIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder setForceWorkerIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder clearForceWorkerIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        forceWorkerIp_ = getDefaultInstance().getForceWorkerIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder setForceWorkerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 3;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional uint32 PortNum = 4;
      private int portNum_ ;
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public boolean hasPortNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public int getPortNum() {
        return portNum_;
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public Builder setPortNum(int value) {
        bitField0_ |= 0x00000008;
        portNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public Builder clearPortNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        portNum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 BandWidth = 5;
      private int bandWidth_ ;
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public boolean hasBandWidth() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public int getBandWidth() {
        return bandWidth_;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public Builder setBandWidth(int value) {
        bitField0_ |= 0x00000010;
        bandWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public Builder clearBandWidth() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bandWidth_ = 0;
        onChanged();
        return this;
      }

      // optional bool ForceConsPort = 6;
      private boolean forceConsPort_ ;
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public boolean hasForceConsPort() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public boolean getForceConsPort() {
        return forceConsPort_;
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public Builder setForceConsPort(boolean value) {
        bitField0_ |= 0x00000020;
        forceConsPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public Builder clearForceConsPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        forceConsPort_ = false;
        onChanged();
        return this;
      }

      // optional string ChannerCarrierType = 7;
      private java.lang.Object channerCarrierType_ = "";
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public boolean hasChannerCarrierType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public java.lang.String getChannerCarrierType() {
        java.lang.Object ref = channerCarrierType_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channerCarrierType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public com.google.protobuf.ByteString
          getChannerCarrierTypeBytes() {
        java.lang.Object ref = channerCarrierType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channerCarrierType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public Builder setChannerCarrierType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        channerCarrierType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public Builder clearChannerCarrierType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        channerCarrierType_ = getDefaultInstance().getChannerCarrierType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public Builder setChannerCarrierTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        channerCarrierType_ = value;
        onChanged();
        return this;
      }

      // optional bool IsChannerDmz = 8;
      private boolean isChannerDmz_ ;
      /**
       * <code>optional bool IsChannerDmz = 8;</code>
       */
      public boolean hasIsChannerDmz() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool IsChannerDmz = 8;</code>
       */
      public boolean getIsChannerDmz() {
        return isChannerDmz_;
      }
      /**
       * <code>optional bool IsChannerDmz = 8;</code>
       */
      public Builder setIsChannerDmz(boolean value) {
        bitField0_ |= 0x00000080;
        isChannerDmz_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool IsChannerDmz = 8;</code>
       */
      public Builder clearIsChannerDmz() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isChannerDmz_ = false;
        onChanged();
        return this;
      }

      // optional string ChanneeCarrierType = 9;
      private java.lang.Object channeeCarrierType_ = "";
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public boolean hasChanneeCarrierType() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public java.lang.String getChanneeCarrierType() {
        java.lang.Object ref = channeeCarrierType_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channeeCarrierType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public com.google.protobuf.ByteString
          getChanneeCarrierTypeBytes() {
        java.lang.Object ref = channeeCarrierType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channeeCarrierType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public Builder setChanneeCarrierType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        channeeCarrierType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public Builder clearChanneeCarrierType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        channeeCarrierType_ = getDefaultInstance().getChanneeCarrierType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public Builder setChanneeCarrierTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        channeeCarrierType_ = value;
        onChanged();
        return this;
      }

      // optional bool IsChanneeDmz = 10;
      private boolean isChanneeDmz_ ;
      /**
       * <code>optional bool IsChanneeDmz = 10;</code>
       */
      public boolean hasIsChanneeDmz() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool IsChanneeDmz = 10;</code>
       */
      public boolean getIsChanneeDmz() {
        return isChanneeDmz_;
      }
      /**
       * <code>optional bool IsChanneeDmz = 10;</code>
       */
      public Builder setIsChanneeDmz(boolean value) {
        bitField0_ |= 0x00000200;
        isChanneeDmz_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool IsChanneeDmz = 10;</code>
       */
      public Builder clearIsChanneeDmz() {
        bitField0_ = (bitField0_ & ~0x00000200);
        isChanneeDmz_ = false;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 11;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 11;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 ClientTick = 11;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 11;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000400;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 11;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000400);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 MtEncyptType = 12;
      private int mtEncyptType_ ;
      /**
       * <code>optional uint32 MtEncyptType = 12;</code>
       */
      public boolean hasMtEncyptType() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 MtEncyptType = 12;</code>
       */
      public int getMtEncyptType() {
        return mtEncyptType_;
      }
      /**
       * <code>optional uint32 MtEncyptType = 12;</code>
       */
      public Builder setMtEncyptType(int value) {
        bitField0_ |= 0x00000800;
        mtEncyptType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 MtEncyptType = 12;</code>
       */
      public Builder clearMtEncyptType() {
        bitField0_ = (bitField0_ & ~0x00000800);
        mtEncyptType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssSyncApplyCarrierPortReq)
    }

    static {
      defaultInstance = new CltDssSyncApplyCarrierPortReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssSyncApplyCarrierPortReq)
  }

  public interface DssCltSyncApplyCarrierPortAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional string ChannerIp = 3;
    /**
     * <code>optional string ChannerIp = 3;</code>
     */
    boolean hasChannerIp();
    /**
     * <code>optional string ChannerIp = 3;</code>
     */
    java.lang.String getChannerIp();
    /**
     * <code>optional string ChannerIp = 3;</code>
     */
    com.google.protobuf.ByteString
        getChannerIpBytes();

    // optional string ChannerDmzIp = 4;
    /**
     * <code>optional string ChannerDmzIp = 4;</code>
     */
    boolean hasChannerDmzIp();
    /**
     * <code>optional string ChannerDmzIp = 4;</code>
     */
    java.lang.String getChannerDmzIp();
    /**
     * <code>optional string ChannerDmzIp = 4;</code>
     */
    com.google.protobuf.ByteString
        getChannerDmzIpBytes();

    // optional string ChanneeIp = 5;
    /**
     * <code>optional string ChanneeIp = 5;</code>
     */
    boolean hasChanneeIp();
    /**
     * <code>optional string ChanneeIp = 5;</code>
     */
    java.lang.String getChanneeIp();
    /**
     * <code>optional string ChanneeIp = 5;</code>
     */
    com.google.protobuf.ByteString
        getChanneeIpBytes();

    // optional string ChanneeDmzIp = 6;
    /**
     * <code>optional string ChanneeDmzIp = 6;</code>
     */
    boolean hasChanneeDmzIp();
    /**
     * <code>optional string ChanneeDmzIp = 6;</code>
     */
    java.lang.String getChanneeDmzIp();
    /**
     * <code>optional string ChanneeDmzIp = 6;</code>
     */
    com.google.protobuf.ByteString
        getChanneeDmzIpBytes();

    // repeated uint32 Port = 7;
    /**
     * <code>repeated uint32 Port = 7;</code>
     */
    java.util.List<java.lang.Integer> getPortList();
    /**
     * <code>repeated uint32 Port = 7;</code>
     */
    int getPortCount();
    /**
     * <code>repeated uint32 Port = 7;</code>
     */
    int getPort(int index);

    // optional uint32 PortHandle = 8;
    /**
     * <code>optional uint32 PortHandle = 8;</code>
     */
    boolean hasPortHandle();
    /**
     * <code>optional uint32 PortHandle = 8;</code>
     */
    int getPortHandle();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSyncApplyCarrierPortAck}
   */
  public static final class DssCltSyncApplyCarrierPortAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltSyncApplyCarrierPortAckOrBuilder {
    // Use DssCltSyncApplyCarrierPortAck.newBuilder() to construct.
    private DssCltSyncApplyCarrierPortAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltSyncApplyCarrierPortAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltSyncApplyCarrierPortAck defaultInstance;
    public static DssCltSyncApplyCarrierPortAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltSyncApplyCarrierPortAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyCarrierPortAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyCarrierPortAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltSyncApplyCarrierPortAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltSyncApplyCarrierPortAck>() {
      public DssCltSyncApplyCarrierPortAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltSyncApplyCarrierPortAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string ChannerIp = 3;
    public static final int CHANNERIP_FIELD_NUMBER = 3;
    private java.lang.Object channerIp_;
    /**
     * <code>optional string ChannerIp = 3;</code>
     */
    public boolean hasChannerIp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string ChannerIp = 3;</code>
     */
    public java.lang.String getChannerIp() {
      java.lang.Object ref = channerIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channerIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ChannerIp = 3;</code>
     */
    public com.google.protobuf.ByteString
        getChannerIpBytes() {
      java.lang.Object ref = channerIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string ChannerDmzIp = 4;
    public static final int CHANNERDMZIP_FIELD_NUMBER = 4;
    private java.lang.Object channerDmzIp_;
    /**
     * <code>optional string ChannerDmzIp = 4;</code>
     */
    public boolean hasChannerDmzIp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string ChannerDmzIp = 4;</code>
     */
    public java.lang.String getChannerDmzIp() {
      java.lang.Object ref = channerDmzIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channerDmzIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ChannerDmzIp = 4;</code>
     */
    public com.google.protobuf.ByteString
        getChannerDmzIpBytes() {
      java.lang.Object ref = channerDmzIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channerDmzIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string ChanneeIp = 5;
    public static final int CHANNEEIP_FIELD_NUMBER = 5;
    private java.lang.Object channeeIp_;
    /**
     * <code>optional string ChanneeIp = 5;</code>
     */
    public boolean hasChanneeIp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string ChanneeIp = 5;</code>
     */
    public java.lang.String getChanneeIp() {
      java.lang.Object ref = channeeIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channeeIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ChanneeIp = 5;</code>
     */
    public com.google.protobuf.ByteString
        getChanneeIpBytes() {
      java.lang.Object ref = channeeIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channeeIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string ChanneeDmzIp = 6;
    public static final int CHANNEEDMZIP_FIELD_NUMBER = 6;
    private java.lang.Object channeeDmzIp_;
    /**
     * <code>optional string ChanneeDmzIp = 6;</code>
     */
    public boolean hasChanneeDmzIp() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string ChanneeDmzIp = 6;</code>
     */
    public java.lang.String getChanneeDmzIp() {
      java.lang.Object ref = channeeDmzIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channeeDmzIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ChanneeDmzIp = 6;</code>
     */
    public com.google.protobuf.ByteString
        getChanneeDmzIpBytes() {
      java.lang.Object ref = channeeDmzIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channeeDmzIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated uint32 Port = 7;
    public static final int PORT_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> port_;
    /**
     * <code>repeated uint32 Port = 7;</code>
     */
    public java.util.List<java.lang.Integer>
        getPortList() {
      return port_;
    }
    /**
     * <code>repeated uint32 Port = 7;</code>
     */
    public int getPortCount() {
      return port_.size();
    }
    /**
     * <code>repeated uint32 Port = 7;</code>
     */
    public int getPort(int index) {
      return port_.get(index);
    }

    // optional uint32 PortHandle = 8;
    public static final int PORTHANDLE_FIELD_NUMBER = 8;
    private int portHandle_;
    /**
     * <code>optional uint32 PortHandle = 8;</code>
     */
    public boolean hasPortHandle() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 PortHandle = 8;</code>
     */
    public int getPortHandle() {
      return portHandle_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      channerIp_ = "";
      channerDmzIp_ = "";
      channeeIp_ = "";
      channeeDmzIp_ = "";
      port_ = java.util.Collections.emptyList();
      portHandle_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSyncApplyCarrierPortAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyCarrierPortAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyCarrierPortAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        channerIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        channerDmzIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        channeeIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        channeeDmzIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        port_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        portHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyCarrierPortAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.channerIp_ = channerIp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.channerDmzIp_ = channerDmzIp_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.channeeIp_ = channeeIp_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.channeeDmzIp_ = channeeDmzIp_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          port_ = java.util.Collections.unmodifiableList(port_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.portHandle_ = portHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional string ChannerIp = 3;
      private java.lang.Object channerIp_ = "";
      /**
       * <code>optional string ChannerIp = 3;</code>
       */
      public boolean hasChannerIp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string ChannerIp = 3;</code>
       */
      public java.lang.String getChannerIp() {
        java.lang.Object ref = channerIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channerIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ChannerIp = 3;</code>
       */
      public com.google.protobuf.ByteString
          getChannerIpBytes() {
        java.lang.Object ref = channerIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channerIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ChannerIp = 3;</code>
       */
      public Builder setChannerIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        channerIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChannerIp = 3;</code>
       */
      public Builder clearChannerIp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        channerIp_ = getDefaultInstance().getChannerIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChannerIp = 3;</code>
       */
      public Builder setChannerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        channerIp_ = value;
        onChanged();
        return this;
      }

      // optional string ChannerDmzIp = 4;
      private java.lang.Object channerDmzIp_ = "";
      /**
       * <code>optional string ChannerDmzIp = 4;</code>
       */
      public boolean hasChannerDmzIp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string ChannerDmzIp = 4;</code>
       */
      public java.lang.String getChannerDmzIp() {
        java.lang.Object ref = channerDmzIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channerDmzIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ChannerDmzIp = 4;</code>
       */
      public com.google.protobuf.ByteString
          getChannerDmzIpBytes() {
        java.lang.Object ref = channerDmzIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channerDmzIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ChannerDmzIp = 4;</code>
       */
      public Builder setChannerDmzIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        channerDmzIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChannerDmzIp = 4;</code>
       */
      public Builder clearChannerDmzIp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        channerDmzIp_ = getDefaultInstance().getChannerDmzIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChannerDmzIp = 4;</code>
       */
      public Builder setChannerDmzIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        channerDmzIp_ = value;
        onChanged();
        return this;
      }

      // optional string ChanneeIp = 5;
      private java.lang.Object channeeIp_ = "";
      /**
       * <code>optional string ChanneeIp = 5;</code>
       */
      public boolean hasChanneeIp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string ChanneeIp = 5;</code>
       */
      public java.lang.String getChanneeIp() {
        java.lang.Object ref = channeeIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channeeIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ChanneeIp = 5;</code>
       */
      public com.google.protobuf.ByteString
          getChanneeIpBytes() {
        java.lang.Object ref = channeeIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channeeIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ChanneeIp = 5;</code>
       */
      public Builder setChanneeIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        channeeIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChanneeIp = 5;</code>
       */
      public Builder clearChanneeIp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        channeeIp_ = getDefaultInstance().getChanneeIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChanneeIp = 5;</code>
       */
      public Builder setChanneeIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        channeeIp_ = value;
        onChanged();
        return this;
      }

      // optional string ChanneeDmzIp = 6;
      private java.lang.Object channeeDmzIp_ = "";
      /**
       * <code>optional string ChanneeDmzIp = 6;</code>
       */
      public boolean hasChanneeDmzIp() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string ChanneeDmzIp = 6;</code>
       */
      public java.lang.String getChanneeDmzIp() {
        java.lang.Object ref = channeeDmzIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channeeDmzIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ChanneeDmzIp = 6;</code>
       */
      public com.google.protobuf.ByteString
          getChanneeDmzIpBytes() {
        java.lang.Object ref = channeeDmzIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channeeDmzIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ChanneeDmzIp = 6;</code>
       */
      public Builder setChanneeDmzIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        channeeDmzIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChanneeDmzIp = 6;</code>
       */
      public Builder clearChanneeDmzIp() {
        bitField0_ = (bitField0_ & ~0x00000020);
        channeeDmzIp_ = getDefaultInstance().getChanneeDmzIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChanneeDmzIp = 6;</code>
       */
      public Builder setChanneeDmzIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        channeeDmzIp_ = value;
        onChanged();
        return this;
      }

      // repeated uint32 Port = 7;
      private java.util.List<java.lang.Integer> port_ = java.util.Collections.emptyList();
      private void ensurePortIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          port_ = new java.util.ArrayList<java.lang.Integer>(port_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated uint32 Port = 7;</code>
       */
      public java.util.List<java.lang.Integer>
          getPortList() {
        return java.util.Collections.unmodifiableList(port_);
      }
      /**
       * <code>repeated uint32 Port = 7;</code>
       */
      public int getPortCount() {
        return port_.size();
      }
      /**
       * <code>repeated uint32 Port = 7;</code>
       */
      public int getPort(int index) {
        return port_.get(index);
      }
      /**
       * <code>repeated uint32 Port = 7;</code>
       */
      public Builder setPort(
          int index, int value) {
        ensurePortIsMutable();
        port_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 Port = 7;</code>
       */
      public Builder addPort(int value) {
        ensurePortIsMutable();
        port_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 Port = 7;</code>
       */
      public Builder addAllPort(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePortIsMutable();
        super.addAll(values, port_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 Port = 7;</code>
       */
      public Builder clearPort() {
        port_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // optional uint32 PortHandle = 8;
      private int portHandle_ ;
      /**
       * <code>optional uint32 PortHandle = 8;</code>
       */
      public boolean hasPortHandle() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 PortHandle = 8;</code>
       */
      public int getPortHandle() {
        return portHandle_;
      }
      /**
       * <code>optional uint32 PortHandle = 8;</code>
       */
      public Builder setPortHandle(int value) {
        bitField0_ |= 0x00000080;
        portHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortHandle = 8;</code>
       */
      public Builder clearPortHandle() {
        bitField0_ = (bitField0_ & ~0x00000080);
        portHandle_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltSyncApplyCarrierPortAck)
    }

    static {
      defaultInstance = new DssCltSyncApplyCarrierPortAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltSyncApplyCarrierPortAck)
  }

  public interface DssCltSyncApplyCarrierPortNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string ForceWorkerIp = 2;
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    boolean hasForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    java.lang.String getForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    com.google.protobuf.ByteString
        getForceWorkerIpBytes();

    // optional string MeetingHandle = 3;
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional uint32 PortNum = 4;
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    boolean hasPortNum();
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    int getPortNum();

    // optional uint32 BandWidth = 5;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    boolean hasBandWidth();
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    int getBandWidth();

    // optional bool ForceConsPort = 6;
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    boolean hasForceConsPort();
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    boolean getForceConsPort();

    // optional string ChannerCarrierType = 7;
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    boolean hasChannerCarrierType();
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    java.lang.String getChannerCarrierType();
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    com.google.protobuf.ByteString
        getChannerCarrierTypeBytes();

    // optional bool IsChannerDmz = 8;
    /**
     * <code>optional bool IsChannerDmz = 8;</code>
     */
    boolean hasIsChannerDmz();
    /**
     * <code>optional bool IsChannerDmz = 8;</code>
     */
    boolean getIsChannerDmz();

    // optional string ChanneeCarrierType = 9;
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    boolean hasChanneeCarrierType();
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    java.lang.String getChanneeCarrierType();
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    com.google.protobuf.ByteString
        getChanneeCarrierTypeBytes();

    // optional bool IsChanneeDmz = 10;
    /**
     * <code>optional bool IsChanneeDmz = 10;</code>
     */
    boolean hasIsChanneeDmz();
    /**
     * <code>optional bool IsChanneeDmz = 10;</code>
     */
    boolean getIsChanneeDmz();

    // optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;</code>
     */
    boolean hasResultCode();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.EDssCarrierReqResultCode getResultCode();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSyncApplyCarrierPortNack}
   */
  public static final class DssCltSyncApplyCarrierPortNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltSyncApplyCarrierPortNackOrBuilder {
    // Use DssCltSyncApplyCarrierPortNack.newBuilder() to construct.
    private DssCltSyncApplyCarrierPortNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltSyncApplyCarrierPortNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltSyncApplyCarrierPortNack defaultInstance;
    public static DssCltSyncApplyCarrierPortNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltSyncApplyCarrierPortNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyCarrierPortNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyCarrierPortNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltSyncApplyCarrierPortNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltSyncApplyCarrierPortNack>() {
      public DssCltSyncApplyCarrierPortNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltSyncApplyCarrierPortNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string ForceWorkerIp = 2;
    public static final int FORCEWORKERIP_FIELD_NUMBER = 2;
    private java.lang.Object forceWorkerIp_;
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public boolean hasForceWorkerIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public java.lang.String getForceWorkerIp() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          forceWorkerIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public com.google.protobuf.ByteString
        getForceWorkerIpBytes() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        forceWorkerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string MeetingHandle = 3;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 3;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 PortNum = 4;
    public static final int PORTNUM_FIELD_NUMBER = 4;
    private int portNum_;
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    public boolean hasPortNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    public int getPortNum() {
      return portNum_;
    }

    // optional uint32 BandWidth = 5;
    public static final int BANDWIDTH_FIELD_NUMBER = 5;
    private int bandWidth_;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    public boolean hasBandWidth() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    public int getBandWidth() {
      return bandWidth_;
    }

    // optional bool ForceConsPort = 6;
    public static final int FORCECONSPORT_FIELD_NUMBER = 6;
    private boolean forceConsPort_;
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    public boolean hasForceConsPort() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    public boolean getForceConsPort() {
      return forceConsPort_;
    }

    // optional string ChannerCarrierType = 7;
    public static final int CHANNERCARRIERTYPE_FIELD_NUMBER = 7;
    private java.lang.Object channerCarrierType_;
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    public boolean hasChannerCarrierType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    public java.lang.String getChannerCarrierType() {
      java.lang.Object ref = channerCarrierType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channerCarrierType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    public com.google.protobuf.ByteString
        getChannerCarrierTypeBytes() {
      java.lang.Object ref = channerCarrierType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channerCarrierType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool IsChannerDmz = 8;
    public static final int ISCHANNERDMZ_FIELD_NUMBER = 8;
    private boolean isChannerDmz_;
    /**
     * <code>optional bool IsChannerDmz = 8;</code>
     */
    public boolean hasIsChannerDmz() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool IsChannerDmz = 8;</code>
     */
    public boolean getIsChannerDmz() {
      return isChannerDmz_;
    }

    // optional string ChanneeCarrierType = 9;
    public static final int CHANNEECARRIERTYPE_FIELD_NUMBER = 9;
    private java.lang.Object channeeCarrierType_;
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    public boolean hasChanneeCarrierType() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    public java.lang.String getChanneeCarrierType() {
      java.lang.Object ref = channeeCarrierType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channeeCarrierType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    public com.google.protobuf.ByteString
        getChanneeCarrierTypeBytes() {
      java.lang.Object ref = channeeCarrierType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channeeCarrierType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool IsChanneeDmz = 10;
    public static final int ISCHANNEEDMZ_FIELD_NUMBER = 10;
    private boolean isChanneeDmz_;
    /**
     * <code>optional bool IsChanneeDmz = 10;</code>
     */
    public boolean hasIsChanneeDmz() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool IsChanneeDmz = 10;</code>
     */
    public boolean getIsChanneeDmz() {
      return isChanneeDmz_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;
    public static final int RESULTCODE_FIELD_NUMBER = 11;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.EDssCarrierReqResultCode resultCode_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;</code>
     */
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.EDssCarrierReqResultCode getResultCode() {
      return resultCode_;
    }

    private void initFields() {
      clientId_ = 0;
      forceWorkerIp_ = "";
      meetingHandle_ = "";
      portNum_ = 0;
      bandWidth_ = 0;
      forceConsPort_ = false;
      channerCarrierType_ = "";
      isChannerDmz_ = false;
      channeeCarrierType_ = "";
      isChanneeDmz_ = false;
      resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssCarrierReqResultCode.eCarrierSucceed;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSyncApplyCarrierPortNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyCarrierPortNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyCarrierPortNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        forceWorkerIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        portNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bandWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        forceConsPort_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        channerCarrierType_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        isChannerDmz_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        channeeCarrierType_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        isChanneeDmz_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssCarrierReqResultCode.eCarrierSucceed;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyCarrierPortNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyCarrierPortNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.forceWorkerIp_ = forceWorkerIp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.portNum_ = portNum_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bandWidth_ = bandWidth_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.forceConsPort_ = forceConsPort_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.channerCarrierType_ = channerCarrierType_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.isChannerDmz_ = isChannerDmz_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.channeeCarrierType_ = channeeCarrierType_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.isChanneeDmz_ = isChanneeDmz_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.resultCode_ = resultCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string ForceWorkerIp = 2;
      private java.lang.Object forceWorkerIp_ = "";
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public boolean hasForceWorkerIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public java.lang.String getForceWorkerIp() {
        java.lang.Object ref = forceWorkerIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          forceWorkerIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public com.google.protobuf.ByteString
          getForceWorkerIpBytes() {
        java.lang.Object ref = forceWorkerIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          forceWorkerIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder setForceWorkerIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder clearForceWorkerIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        forceWorkerIp_ = getDefaultInstance().getForceWorkerIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder setForceWorkerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 3;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional uint32 PortNum = 4;
      private int portNum_ ;
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public boolean hasPortNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public int getPortNum() {
        return portNum_;
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public Builder setPortNum(int value) {
        bitField0_ |= 0x00000008;
        portNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public Builder clearPortNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        portNum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 BandWidth = 5;
      private int bandWidth_ ;
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public boolean hasBandWidth() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public int getBandWidth() {
        return bandWidth_;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public Builder setBandWidth(int value) {
        bitField0_ |= 0x00000010;
        bandWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public Builder clearBandWidth() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bandWidth_ = 0;
        onChanged();
        return this;
      }

      // optional bool ForceConsPort = 6;
      private boolean forceConsPort_ ;
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public boolean hasForceConsPort() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public boolean getForceConsPort() {
        return forceConsPort_;
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public Builder setForceConsPort(boolean value) {
        bitField0_ |= 0x00000020;
        forceConsPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public Builder clearForceConsPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        forceConsPort_ = false;
        onChanged();
        return this;
      }

      // optional string ChannerCarrierType = 7;
      private java.lang.Object channerCarrierType_ = "";
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public boolean hasChannerCarrierType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public java.lang.String getChannerCarrierType() {
        java.lang.Object ref = channerCarrierType_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channerCarrierType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public com.google.protobuf.ByteString
          getChannerCarrierTypeBytes() {
        java.lang.Object ref = channerCarrierType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channerCarrierType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public Builder setChannerCarrierType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        channerCarrierType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public Builder clearChannerCarrierType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        channerCarrierType_ = getDefaultInstance().getChannerCarrierType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public Builder setChannerCarrierTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        channerCarrierType_ = value;
        onChanged();
        return this;
      }

      // optional bool IsChannerDmz = 8;
      private boolean isChannerDmz_ ;
      /**
       * <code>optional bool IsChannerDmz = 8;</code>
       */
      public boolean hasIsChannerDmz() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool IsChannerDmz = 8;</code>
       */
      public boolean getIsChannerDmz() {
        return isChannerDmz_;
      }
      /**
       * <code>optional bool IsChannerDmz = 8;</code>
       */
      public Builder setIsChannerDmz(boolean value) {
        bitField0_ |= 0x00000080;
        isChannerDmz_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool IsChannerDmz = 8;</code>
       */
      public Builder clearIsChannerDmz() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isChannerDmz_ = false;
        onChanged();
        return this;
      }

      // optional string ChanneeCarrierType = 9;
      private java.lang.Object channeeCarrierType_ = "";
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public boolean hasChanneeCarrierType() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public java.lang.String getChanneeCarrierType() {
        java.lang.Object ref = channeeCarrierType_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channeeCarrierType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public com.google.protobuf.ByteString
          getChanneeCarrierTypeBytes() {
        java.lang.Object ref = channeeCarrierType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channeeCarrierType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public Builder setChanneeCarrierType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        channeeCarrierType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public Builder clearChanneeCarrierType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        channeeCarrierType_ = getDefaultInstance().getChanneeCarrierType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public Builder setChanneeCarrierTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        channeeCarrierType_ = value;
        onChanged();
        return this;
      }

      // optional bool IsChanneeDmz = 10;
      private boolean isChanneeDmz_ ;
      /**
       * <code>optional bool IsChanneeDmz = 10;</code>
       */
      public boolean hasIsChanneeDmz() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool IsChanneeDmz = 10;</code>
       */
      public boolean getIsChanneeDmz() {
        return isChanneeDmz_;
      }
      /**
       * <code>optional bool IsChanneeDmz = 10;</code>
       */
      public Builder setIsChanneeDmz(boolean value) {
        bitField0_ |= 0x00000200;
        isChanneeDmz_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool IsChanneeDmz = 10;</code>
       */
      public Builder clearIsChanneeDmz() {
        bitField0_ = (bitField0_ & ~0x00000200);
        isChanneeDmz_ = false;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.EDssCarrierReqResultCode resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssCarrierReqResultCode.eCarrierSucceed;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;</code>
       */
      public boolean hasResultCode() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.EDssCarrierReqResultCode getResultCode() {
        return resultCode_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;</code>
       */
      public Builder setResultCode(com.kedacom.ops.flink.etl.proto.Dssevenum.EDssCarrierReqResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000400;
        resultCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;</code>
       */
      public Builder clearResultCode() {
        bitField0_ = (bitField0_ & ~0x00000400);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssCarrierReqResultCode.eCarrierSucceed;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltSyncApplyCarrierPortNack)
    }

    static {
      defaultInstance = new DssCltSyncApplyCarrierPortNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltSyncApplyCarrierPortNack)
  }

  public interface CltDssASyncApplyCarrierPortReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string ForceWorkerIp = 2;
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    boolean hasForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    java.lang.String getForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    com.google.protobuf.ByteString
        getForceWorkerIpBytes();

    // optional string MeetingHandle = 3;
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional uint32 PortNum = 4;
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    boolean hasPortNum();
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    int getPortNum();

    // optional uint32 BandWidth = 5;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    boolean hasBandWidth();
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    int getBandWidth();

    // optional bool ForceConsPort = 6;
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    boolean hasForceConsPort();
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    boolean getForceConsPort();

    // optional string ChannerCarrierType = 7;
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    boolean hasChannerCarrierType();
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    java.lang.String getChannerCarrierType();
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    com.google.protobuf.ByteString
        getChannerCarrierTypeBytes();

    // optional bool IsChannerDmz = 8;
    /**
     * <code>optional bool IsChannerDmz = 8;</code>
     */
    boolean hasIsChannerDmz();
    /**
     * <code>optional bool IsChannerDmz = 8;</code>
     */
    boolean getIsChannerDmz();

    // optional string ChanneeCarrierType = 9;
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    boolean hasChanneeCarrierType();
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    java.lang.String getChanneeCarrierType();
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    com.google.protobuf.ByteString
        getChanneeCarrierTypeBytes();

    // optional bool IsChanneeDmz = 10;
    /**
     * <code>optional bool IsChanneeDmz = 10;</code>
     */
    boolean hasIsChanneeDmz();
    /**
     * <code>optional bool IsChanneeDmz = 10;</code>
     */
    boolean getIsChanneeDmz();

    // optional uint32 ClientTick = 11;
    /**
     * <code>optional uint32 ClientTick = 11;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 11;</code>
     */
    int getClientTick();

    // optional uint32 MtEncyptType = 12;
    /**
     * <code>optional uint32 MtEncyptType = 12;</code>
     */
    boolean hasMtEncyptType();
    /**
     * <code>optional uint32 MtEncyptType = 12;</code>
     */
    int getMtEncyptType();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssASyncApplyCarrierPortReq}
   */
  public static final class CltDssASyncApplyCarrierPortReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssASyncApplyCarrierPortReqOrBuilder {
    // Use CltDssASyncApplyCarrierPortReq.newBuilder() to construct.
    private CltDssASyncApplyCarrierPortReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssASyncApplyCarrierPortReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssASyncApplyCarrierPortReq defaultInstance;
    public static CltDssASyncApplyCarrierPortReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssASyncApplyCarrierPortReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyCarrierPortReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyCarrierPortReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssASyncApplyCarrierPortReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssASyncApplyCarrierPortReq>() {
      public CltDssASyncApplyCarrierPortReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssASyncApplyCarrierPortReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string ForceWorkerIp = 2;
    public static final int FORCEWORKERIP_FIELD_NUMBER = 2;
    private java.lang.Object forceWorkerIp_;
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public boolean hasForceWorkerIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public java.lang.String getForceWorkerIp() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          forceWorkerIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public com.google.protobuf.ByteString
        getForceWorkerIpBytes() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        forceWorkerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string MeetingHandle = 3;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 3;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 PortNum = 4;
    public static final int PORTNUM_FIELD_NUMBER = 4;
    private int portNum_;
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    public boolean hasPortNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    public int getPortNum() {
      return portNum_;
    }

    // optional uint32 BandWidth = 5;
    public static final int BANDWIDTH_FIELD_NUMBER = 5;
    private int bandWidth_;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    public boolean hasBandWidth() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    public int getBandWidth() {
      return bandWidth_;
    }

    // optional bool ForceConsPort = 6;
    public static final int FORCECONSPORT_FIELD_NUMBER = 6;
    private boolean forceConsPort_;
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    public boolean hasForceConsPort() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    public boolean getForceConsPort() {
      return forceConsPort_;
    }

    // optional string ChannerCarrierType = 7;
    public static final int CHANNERCARRIERTYPE_FIELD_NUMBER = 7;
    private java.lang.Object channerCarrierType_;
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    public boolean hasChannerCarrierType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    public java.lang.String getChannerCarrierType() {
      java.lang.Object ref = channerCarrierType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channerCarrierType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    public com.google.protobuf.ByteString
        getChannerCarrierTypeBytes() {
      java.lang.Object ref = channerCarrierType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channerCarrierType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool IsChannerDmz = 8;
    public static final int ISCHANNERDMZ_FIELD_NUMBER = 8;
    private boolean isChannerDmz_;
    /**
     * <code>optional bool IsChannerDmz = 8;</code>
     */
    public boolean hasIsChannerDmz() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool IsChannerDmz = 8;</code>
     */
    public boolean getIsChannerDmz() {
      return isChannerDmz_;
    }

    // optional string ChanneeCarrierType = 9;
    public static final int CHANNEECARRIERTYPE_FIELD_NUMBER = 9;
    private java.lang.Object channeeCarrierType_;
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    public boolean hasChanneeCarrierType() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    public java.lang.String getChanneeCarrierType() {
      java.lang.Object ref = channeeCarrierType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channeeCarrierType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    public com.google.protobuf.ByteString
        getChanneeCarrierTypeBytes() {
      java.lang.Object ref = channeeCarrierType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channeeCarrierType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool IsChanneeDmz = 10;
    public static final int ISCHANNEEDMZ_FIELD_NUMBER = 10;
    private boolean isChanneeDmz_;
    /**
     * <code>optional bool IsChanneeDmz = 10;</code>
     */
    public boolean hasIsChanneeDmz() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool IsChanneeDmz = 10;</code>
     */
    public boolean getIsChanneeDmz() {
      return isChanneeDmz_;
    }

    // optional uint32 ClientTick = 11;
    public static final int CLIENTTICK_FIELD_NUMBER = 11;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 11;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 ClientTick = 11;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    // optional uint32 MtEncyptType = 12;
    public static final int MTENCYPTTYPE_FIELD_NUMBER = 12;
    private int mtEncyptType_;
    /**
     * <code>optional uint32 MtEncyptType = 12;</code>
     */
    public boolean hasMtEncyptType() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 MtEncyptType = 12;</code>
     */
    public int getMtEncyptType() {
      return mtEncyptType_;
    }

    private void initFields() {
      clientId_ = 0;
      forceWorkerIp_ = "";
      meetingHandle_ = "";
      portNum_ = 0;
      bandWidth_ = 0;
      forceConsPort_ = false;
      channerCarrierType_ = "";
      isChannerDmz_ = false;
      channeeCarrierType_ = "";
      isChanneeDmz_ = false;
      clientTick_ = 0;
      mtEncyptType_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssASyncApplyCarrierPortReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyCarrierPortReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyCarrierPortReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        forceWorkerIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        portNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bandWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        forceConsPort_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        channerCarrierType_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        isChannerDmz_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        channeeCarrierType_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        isChanneeDmz_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        mtEncyptType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyCarrierPortReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyCarrierPortReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.forceWorkerIp_ = forceWorkerIp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.portNum_ = portNum_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bandWidth_ = bandWidth_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.forceConsPort_ = forceConsPort_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.channerCarrierType_ = channerCarrierType_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.isChannerDmz_ = isChannerDmz_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.channeeCarrierType_ = channeeCarrierType_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.isChanneeDmz_ = isChanneeDmz_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.clientTick_ = clientTick_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.mtEncyptType_ = mtEncyptType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string ForceWorkerIp = 2;
      private java.lang.Object forceWorkerIp_ = "";
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public boolean hasForceWorkerIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public java.lang.String getForceWorkerIp() {
        java.lang.Object ref = forceWorkerIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          forceWorkerIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public com.google.protobuf.ByteString
          getForceWorkerIpBytes() {
        java.lang.Object ref = forceWorkerIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          forceWorkerIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder setForceWorkerIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder clearForceWorkerIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        forceWorkerIp_ = getDefaultInstance().getForceWorkerIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder setForceWorkerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 3;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional uint32 PortNum = 4;
      private int portNum_ ;
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public boolean hasPortNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public int getPortNum() {
        return portNum_;
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public Builder setPortNum(int value) {
        bitField0_ |= 0x00000008;
        portNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public Builder clearPortNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        portNum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 BandWidth = 5;
      private int bandWidth_ ;
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public boolean hasBandWidth() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public int getBandWidth() {
        return bandWidth_;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public Builder setBandWidth(int value) {
        bitField0_ |= 0x00000010;
        bandWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public Builder clearBandWidth() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bandWidth_ = 0;
        onChanged();
        return this;
      }

      // optional bool ForceConsPort = 6;
      private boolean forceConsPort_ ;
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public boolean hasForceConsPort() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public boolean getForceConsPort() {
        return forceConsPort_;
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public Builder setForceConsPort(boolean value) {
        bitField0_ |= 0x00000020;
        forceConsPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public Builder clearForceConsPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        forceConsPort_ = false;
        onChanged();
        return this;
      }

      // optional string ChannerCarrierType = 7;
      private java.lang.Object channerCarrierType_ = "";
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public boolean hasChannerCarrierType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public java.lang.String getChannerCarrierType() {
        java.lang.Object ref = channerCarrierType_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channerCarrierType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public com.google.protobuf.ByteString
          getChannerCarrierTypeBytes() {
        java.lang.Object ref = channerCarrierType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channerCarrierType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public Builder setChannerCarrierType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        channerCarrierType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public Builder clearChannerCarrierType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        channerCarrierType_ = getDefaultInstance().getChannerCarrierType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public Builder setChannerCarrierTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        channerCarrierType_ = value;
        onChanged();
        return this;
      }

      // optional bool IsChannerDmz = 8;
      private boolean isChannerDmz_ ;
      /**
       * <code>optional bool IsChannerDmz = 8;</code>
       */
      public boolean hasIsChannerDmz() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool IsChannerDmz = 8;</code>
       */
      public boolean getIsChannerDmz() {
        return isChannerDmz_;
      }
      /**
       * <code>optional bool IsChannerDmz = 8;</code>
       */
      public Builder setIsChannerDmz(boolean value) {
        bitField0_ |= 0x00000080;
        isChannerDmz_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool IsChannerDmz = 8;</code>
       */
      public Builder clearIsChannerDmz() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isChannerDmz_ = false;
        onChanged();
        return this;
      }

      // optional string ChanneeCarrierType = 9;
      private java.lang.Object channeeCarrierType_ = "";
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public boolean hasChanneeCarrierType() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public java.lang.String getChanneeCarrierType() {
        java.lang.Object ref = channeeCarrierType_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channeeCarrierType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public com.google.protobuf.ByteString
          getChanneeCarrierTypeBytes() {
        java.lang.Object ref = channeeCarrierType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channeeCarrierType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public Builder setChanneeCarrierType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        channeeCarrierType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public Builder clearChanneeCarrierType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        channeeCarrierType_ = getDefaultInstance().getChanneeCarrierType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public Builder setChanneeCarrierTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        channeeCarrierType_ = value;
        onChanged();
        return this;
      }

      // optional bool IsChanneeDmz = 10;
      private boolean isChanneeDmz_ ;
      /**
       * <code>optional bool IsChanneeDmz = 10;</code>
       */
      public boolean hasIsChanneeDmz() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool IsChanneeDmz = 10;</code>
       */
      public boolean getIsChanneeDmz() {
        return isChanneeDmz_;
      }
      /**
       * <code>optional bool IsChanneeDmz = 10;</code>
       */
      public Builder setIsChanneeDmz(boolean value) {
        bitField0_ |= 0x00000200;
        isChanneeDmz_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool IsChanneeDmz = 10;</code>
       */
      public Builder clearIsChanneeDmz() {
        bitField0_ = (bitField0_ & ~0x00000200);
        isChanneeDmz_ = false;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 11;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 11;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 ClientTick = 11;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 11;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000400;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 11;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000400);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 MtEncyptType = 12;
      private int mtEncyptType_ ;
      /**
       * <code>optional uint32 MtEncyptType = 12;</code>
       */
      public boolean hasMtEncyptType() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 MtEncyptType = 12;</code>
       */
      public int getMtEncyptType() {
        return mtEncyptType_;
      }
      /**
       * <code>optional uint32 MtEncyptType = 12;</code>
       */
      public Builder setMtEncyptType(int value) {
        bitField0_ |= 0x00000800;
        mtEncyptType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 MtEncyptType = 12;</code>
       */
      public Builder clearMtEncyptType() {
        bitField0_ = (bitField0_ & ~0x00000800);
        mtEncyptType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssASyncApplyCarrierPortReq)
    }

    static {
      defaultInstance = new CltDssASyncApplyCarrierPortReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssASyncApplyCarrierPortReq)
  }

  public interface DssCltASyncApplyCarrierPortAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional string ChannerIp = 3;
    /**
     * <code>optional string ChannerIp = 3;</code>
     */
    boolean hasChannerIp();
    /**
     * <code>optional string ChannerIp = 3;</code>
     */
    java.lang.String getChannerIp();
    /**
     * <code>optional string ChannerIp = 3;</code>
     */
    com.google.protobuf.ByteString
        getChannerIpBytes();

    // optional string ChannerDmzIp = 4;
    /**
     * <code>optional string ChannerDmzIp = 4;</code>
     */
    boolean hasChannerDmzIp();
    /**
     * <code>optional string ChannerDmzIp = 4;</code>
     */
    java.lang.String getChannerDmzIp();
    /**
     * <code>optional string ChannerDmzIp = 4;</code>
     */
    com.google.protobuf.ByteString
        getChannerDmzIpBytes();

    // optional string ChanneeIp = 5;
    /**
     * <code>optional string ChanneeIp = 5;</code>
     */
    boolean hasChanneeIp();
    /**
     * <code>optional string ChanneeIp = 5;</code>
     */
    java.lang.String getChanneeIp();
    /**
     * <code>optional string ChanneeIp = 5;</code>
     */
    com.google.protobuf.ByteString
        getChanneeIpBytes();

    // optional string ChanneeDmzIp = 6;
    /**
     * <code>optional string ChanneeDmzIp = 6;</code>
     */
    boolean hasChanneeDmzIp();
    /**
     * <code>optional string ChanneeDmzIp = 6;</code>
     */
    java.lang.String getChanneeDmzIp();
    /**
     * <code>optional string ChanneeDmzIp = 6;</code>
     */
    com.google.protobuf.ByteString
        getChanneeDmzIpBytes();

    // repeated uint32 Port = 7;
    /**
     * <code>repeated uint32 Port = 7;</code>
     */
    java.util.List<java.lang.Integer> getPortList();
    /**
     * <code>repeated uint32 Port = 7;</code>
     */
    int getPortCount();
    /**
     * <code>repeated uint32 Port = 7;</code>
     */
    int getPort(int index);

    // optional uint32 PortHandle = 8;
    /**
     * <code>optional uint32 PortHandle = 8;</code>
     */
    boolean hasPortHandle();
    /**
     * <code>optional uint32 PortHandle = 8;</code>
     */
    int getPortHandle();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltASyncApplyCarrierPortAck}
   */
  public static final class DssCltASyncApplyCarrierPortAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltASyncApplyCarrierPortAckOrBuilder {
    // Use DssCltASyncApplyCarrierPortAck.newBuilder() to construct.
    private DssCltASyncApplyCarrierPortAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltASyncApplyCarrierPortAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltASyncApplyCarrierPortAck defaultInstance;
    public static DssCltASyncApplyCarrierPortAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltASyncApplyCarrierPortAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyCarrierPortAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyCarrierPortAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltASyncApplyCarrierPortAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltASyncApplyCarrierPortAck>() {
      public DssCltASyncApplyCarrierPortAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltASyncApplyCarrierPortAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string ChannerIp = 3;
    public static final int CHANNERIP_FIELD_NUMBER = 3;
    private java.lang.Object channerIp_;
    /**
     * <code>optional string ChannerIp = 3;</code>
     */
    public boolean hasChannerIp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string ChannerIp = 3;</code>
     */
    public java.lang.String getChannerIp() {
      java.lang.Object ref = channerIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channerIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ChannerIp = 3;</code>
     */
    public com.google.protobuf.ByteString
        getChannerIpBytes() {
      java.lang.Object ref = channerIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string ChannerDmzIp = 4;
    public static final int CHANNERDMZIP_FIELD_NUMBER = 4;
    private java.lang.Object channerDmzIp_;
    /**
     * <code>optional string ChannerDmzIp = 4;</code>
     */
    public boolean hasChannerDmzIp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string ChannerDmzIp = 4;</code>
     */
    public java.lang.String getChannerDmzIp() {
      java.lang.Object ref = channerDmzIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channerDmzIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ChannerDmzIp = 4;</code>
     */
    public com.google.protobuf.ByteString
        getChannerDmzIpBytes() {
      java.lang.Object ref = channerDmzIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channerDmzIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string ChanneeIp = 5;
    public static final int CHANNEEIP_FIELD_NUMBER = 5;
    private java.lang.Object channeeIp_;
    /**
     * <code>optional string ChanneeIp = 5;</code>
     */
    public boolean hasChanneeIp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string ChanneeIp = 5;</code>
     */
    public java.lang.String getChanneeIp() {
      java.lang.Object ref = channeeIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channeeIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ChanneeIp = 5;</code>
     */
    public com.google.protobuf.ByteString
        getChanneeIpBytes() {
      java.lang.Object ref = channeeIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channeeIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string ChanneeDmzIp = 6;
    public static final int CHANNEEDMZIP_FIELD_NUMBER = 6;
    private java.lang.Object channeeDmzIp_;
    /**
     * <code>optional string ChanneeDmzIp = 6;</code>
     */
    public boolean hasChanneeDmzIp() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string ChanneeDmzIp = 6;</code>
     */
    public java.lang.String getChanneeDmzIp() {
      java.lang.Object ref = channeeDmzIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channeeDmzIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ChanneeDmzIp = 6;</code>
     */
    public com.google.protobuf.ByteString
        getChanneeDmzIpBytes() {
      java.lang.Object ref = channeeDmzIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channeeDmzIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated uint32 Port = 7;
    public static final int PORT_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> port_;
    /**
     * <code>repeated uint32 Port = 7;</code>
     */
    public java.util.List<java.lang.Integer>
        getPortList() {
      return port_;
    }
    /**
     * <code>repeated uint32 Port = 7;</code>
     */
    public int getPortCount() {
      return port_.size();
    }
    /**
     * <code>repeated uint32 Port = 7;</code>
     */
    public int getPort(int index) {
      return port_.get(index);
    }

    // optional uint32 PortHandle = 8;
    public static final int PORTHANDLE_FIELD_NUMBER = 8;
    private int portHandle_;
    /**
     * <code>optional uint32 PortHandle = 8;</code>
     */
    public boolean hasPortHandle() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 PortHandle = 8;</code>
     */
    public int getPortHandle() {
      return portHandle_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      channerIp_ = "";
      channerDmzIp_ = "";
      channeeIp_ = "";
      channeeDmzIp_ = "";
      port_ = java.util.Collections.emptyList();
      portHandle_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltASyncApplyCarrierPortAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyCarrierPortAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyCarrierPortAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        channerIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        channerDmzIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        channeeIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        channeeDmzIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        port_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        portHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyCarrierPortAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.channerIp_ = channerIp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.channerDmzIp_ = channerDmzIp_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.channeeIp_ = channeeIp_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.channeeDmzIp_ = channeeDmzIp_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          port_ = java.util.Collections.unmodifiableList(port_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.portHandle_ = portHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional string ChannerIp = 3;
      private java.lang.Object channerIp_ = "";
      /**
       * <code>optional string ChannerIp = 3;</code>
       */
      public boolean hasChannerIp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string ChannerIp = 3;</code>
       */
      public java.lang.String getChannerIp() {
        java.lang.Object ref = channerIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channerIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ChannerIp = 3;</code>
       */
      public com.google.protobuf.ByteString
          getChannerIpBytes() {
        java.lang.Object ref = channerIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channerIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ChannerIp = 3;</code>
       */
      public Builder setChannerIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        channerIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChannerIp = 3;</code>
       */
      public Builder clearChannerIp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        channerIp_ = getDefaultInstance().getChannerIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChannerIp = 3;</code>
       */
      public Builder setChannerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        channerIp_ = value;
        onChanged();
        return this;
      }

      // optional string ChannerDmzIp = 4;
      private java.lang.Object channerDmzIp_ = "";
      /**
       * <code>optional string ChannerDmzIp = 4;</code>
       */
      public boolean hasChannerDmzIp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string ChannerDmzIp = 4;</code>
       */
      public java.lang.String getChannerDmzIp() {
        java.lang.Object ref = channerDmzIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channerDmzIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ChannerDmzIp = 4;</code>
       */
      public com.google.protobuf.ByteString
          getChannerDmzIpBytes() {
        java.lang.Object ref = channerDmzIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channerDmzIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ChannerDmzIp = 4;</code>
       */
      public Builder setChannerDmzIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        channerDmzIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChannerDmzIp = 4;</code>
       */
      public Builder clearChannerDmzIp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        channerDmzIp_ = getDefaultInstance().getChannerDmzIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChannerDmzIp = 4;</code>
       */
      public Builder setChannerDmzIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        channerDmzIp_ = value;
        onChanged();
        return this;
      }

      // optional string ChanneeIp = 5;
      private java.lang.Object channeeIp_ = "";
      /**
       * <code>optional string ChanneeIp = 5;</code>
       */
      public boolean hasChanneeIp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string ChanneeIp = 5;</code>
       */
      public java.lang.String getChanneeIp() {
        java.lang.Object ref = channeeIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channeeIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ChanneeIp = 5;</code>
       */
      public com.google.protobuf.ByteString
          getChanneeIpBytes() {
        java.lang.Object ref = channeeIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channeeIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ChanneeIp = 5;</code>
       */
      public Builder setChanneeIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        channeeIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChanneeIp = 5;</code>
       */
      public Builder clearChanneeIp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        channeeIp_ = getDefaultInstance().getChanneeIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChanneeIp = 5;</code>
       */
      public Builder setChanneeIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        channeeIp_ = value;
        onChanged();
        return this;
      }

      // optional string ChanneeDmzIp = 6;
      private java.lang.Object channeeDmzIp_ = "";
      /**
       * <code>optional string ChanneeDmzIp = 6;</code>
       */
      public boolean hasChanneeDmzIp() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string ChanneeDmzIp = 6;</code>
       */
      public java.lang.String getChanneeDmzIp() {
        java.lang.Object ref = channeeDmzIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channeeDmzIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ChanneeDmzIp = 6;</code>
       */
      public com.google.protobuf.ByteString
          getChanneeDmzIpBytes() {
        java.lang.Object ref = channeeDmzIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channeeDmzIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ChanneeDmzIp = 6;</code>
       */
      public Builder setChanneeDmzIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        channeeDmzIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChanneeDmzIp = 6;</code>
       */
      public Builder clearChanneeDmzIp() {
        bitField0_ = (bitField0_ & ~0x00000020);
        channeeDmzIp_ = getDefaultInstance().getChanneeDmzIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChanneeDmzIp = 6;</code>
       */
      public Builder setChanneeDmzIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        channeeDmzIp_ = value;
        onChanged();
        return this;
      }

      // repeated uint32 Port = 7;
      private java.util.List<java.lang.Integer> port_ = java.util.Collections.emptyList();
      private void ensurePortIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          port_ = new java.util.ArrayList<java.lang.Integer>(port_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated uint32 Port = 7;</code>
       */
      public java.util.List<java.lang.Integer>
          getPortList() {
        return java.util.Collections.unmodifiableList(port_);
      }
      /**
       * <code>repeated uint32 Port = 7;</code>
       */
      public int getPortCount() {
        return port_.size();
      }
      /**
       * <code>repeated uint32 Port = 7;</code>
       */
      public int getPort(int index) {
        return port_.get(index);
      }
      /**
       * <code>repeated uint32 Port = 7;</code>
       */
      public Builder setPort(
          int index, int value) {
        ensurePortIsMutable();
        port_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 Port = 7;</code>
       */
      public Builder addPort(int value) {
        ensurePortIsMutable();
        port_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 Port = 7;</code>
       */
      public Builder addAllPort(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePortIsMutable();
        super.addAll(values, port_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 Port = 7;</code>
       */
      public Builder clearPort() {
        port_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // optional uint32 PortHandle = 8;
      private int portHandle_ ;
      /**
       * <code>optional uint32 PortHandle = 8;</code>
       */
      public boolean hasPortHandle() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 PortHandle = 8;</code>
       */
      public int getPortHandle() {
        return portHandle_;
      }
      /**
       * <code>optional uint32 PortHandle = 8;</code>
       */
      public Builder setPortHandle(int value) {
        bitField0_ |= 0x00000080;
        portHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortHandle = 8;</code>
       */
      public Builder clearPortHandle() {
        bitField0_ = (bitField0_ & ~0x00000080);
        portHandle_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltASyncApplyCarrierPortAck)
    }

    static {
      defaultInstance = new DssCltASyncApplyCarrierPortAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltASyncApplyCarrierPortAck)
  }

  public interface DssCltASyncApplyCarrierPortNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string ForceWorkerIp = 2;
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    boolean hasForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    java.lang.String getForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    com.google.protobuf.ByteString
        getForceWorkerIpBytes();

    // optional string MeetingHandle = 3;
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional uint32 PortNum = 4;
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    boolean hasPortNum();
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    int getPortNum();

    // optional uint32 BandWidth = 5;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    boolean hasBandWidth();
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    int getBandWidth();

    // optional bool ForceConsPort = 6;
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    boolean hasForceConsPort();
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    boolean getForceConsPort();

    // optional string ChannerCarrierType = 7;
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    boolean hasChannerCarrierType();
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    java.lang.String getChannerCarrierType();
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    com.google.protobuf.ByteString
        getChannerCarrierTypeBytes();

    // optional bool IsChannerDmz = 8;
    /**
     * <code>optional bool IsChannerDmz = 8;</code>
     */
    boolean hasIsChannerDmz();
    /**
     * <code>optional bool IsChannerDmz = 8;</code>
     */
    boolean getIsChannerDmz();

    // optional string ChanneeCarrierType = 9;
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    boolean hasChanneeCarrierType();
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    java.lang.String getChanneeCarrierType();
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    com.google.protobuf.ByteString
        getChanneeCarrierTypeBytes();

    // optional bool IsChanneeDmz = 10;
    /**
     * <code>optional bool IsChanneeDmz = 10;</code>
     */
    boolean hasIsChanneeDmz();
    /**
     * <code>optional bool IsChanneeDmz = 10;</code>
     */
    boolean getIsChanneeDmz();

    // optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;</code>
     */
    boolean hasResultCode();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.EDssCarrierReqResultCode getResultCode();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltASyncApplyCarrierPortNack}
   */
  public static final class DssCltASyncApplyCarrierPortNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltASyncApplyCarrierPortNackOrBuilder {
    // Use DssCltASyncApplyCarrierPortNack.newBuilder() to construct.
    private DssCltASyncApplyCarrierPortNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltASyncApplyCarrierPortNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltASyncApplyCarrierPortNack defaultInstance;
    public static DssCltASyncApplyCarrierPortNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltASyncApplyCarrierPortNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyCarrierPortNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyCarrierPortNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltASyncApplyCarrierPortNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltASyncApplyCarrierPortNack>() {
      public DssCltASyncApplyCarrierPortNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltASyncApplyCarrierPortNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string ForceWorkerIp = 2;
    public static final int FORCEWORKERIP_FIELD_NUMBER = 2;
    private java.lang.Object forceWorkerIp_;
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public boolean hasForceWorkerIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public java.lang.String getForceWorkerIp() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          forceWorkerIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public com.google.protobuf.ByteString
        getForceWorkerIpBytes() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        forceWorkerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string MeetingHandle = 3;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 3;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 PortNum = 4;
    public static final int PORTNUM_FIELD_NUMBER = 4;
    private int portNum_;
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    public boolean hasPortNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    public int getPortNum() {
      return portNum_;
    }

    // optional uint32 BandWidth = 5;
    public static final int BANDWIDTH_FIELD_NUMBER = 5;
    private int bandWidth_;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    public boolean hasBandWidth() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    public int getBandWidth() {
      return bandWidth_;
    }

    // optional bool ForceConsPort = 6;
    public static final int FORCECONSPORT_FIELD_NUMBER = 6;
    private boolean forceConsPort_;
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    public boolean hasForceConsPort() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    public boolean getForceConsPort() {
      return forceConsPort_;
    }

    // optional string ChannerCarrierType = 7;
    public static final int CHANNERCARRIERTYPE_FIELD_NUMBER = 7;
    private java.lang.Object channerCarrierType_;
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    public boolean hasChannerCarrierType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    public java.lang.String getChannerCarrierType() {
      java.lang.Object ref = channerCarrierType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channerCarrierType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ChannerCarrierType = 7;</code>
     */
    public com.google.protobuf.ByteString
        getChannerCarrierTypeBytes() {
      java.lang.Object ref = channerCarrierType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channerCarrierType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool IsChannerDmz = 8;
    public static final int ISCHANNERDMZ_FIELD_NUMBER = 8;
    private boolean isChannerDmz_;
    /**
     * <code>optional bool IsChannerDmz = 8;</code>
     */
    public boolean hasIsChannerDmz() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool IsChannerDmz = 8;</code>
     */
    public boolean getIsChannerDmz() {
      return isChannerDmz_;
    }

    // optional string ChanneeCarrierType = 9;
    public static final int CHANNEECARRIERTYPE_FIELD_NUMBER = 9;
    private java.lang.Object channeeCarrierType_;
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    public boolean hasChanneeCarrierType() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    public java.lang.String getChanneeCarrierType() {
      java.lang.Object ref = channeeCarrierType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channeeCarrierType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ChanneeCarrierType = 9;</code>
     */
    public com.google.protobuf.ByteString
        getChanneeCarrierTypeBytes() {
      java.lang.Object ref = channeeCarrierType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channeeCarrierType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool IsChanneeDmz = 10;
    public static final int ISCHANNEEDMZ_FIELD_NUMBER = 10;
    private boolean isChanneeDmz_;
    /**
     * <code>optional bool IsChanneeDmz = 10;</code>
     */
    public boolean hasIsChanneeDmz() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool IsChanneeDmz = 10;</code>
     */
    public boolean getIsChanneeDmz() {
      return isChanneeDmz_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;
    public static final int RESULTCODE_FIELD_NUMBER = 11;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.EDssCarrierReqResultCode resultCode_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;</code>
     */
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.EDssCarrierReqResultCode getResultCode() {
      return resultCode_;
    }

    private void initFields() {
      clientId_ = 0;
      forceWorkerIp_ = "";
      meetingHandle_ = "";
      portNum_ = 0;
      bandWidth_ = 0;
      forceConsPort_ = false;
      channerCarrierType_ = "";
      isChannerDmz_ = false;
      channeeCarrierType_ = "";
      isChanneeDmz_ = false;
      resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssCarrierReqResultCode.eCarrierSucceed;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltASyncApplyCarrierPortNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyCarrierPortNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyCarrierPortNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        forceWorkerIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        portNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bandWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        forceConsPort_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        channerCarrierType_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        isChannerDmz_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        channeeCarrierType_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        isChanneeDmz_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssCarrierReqResultCode.eCarrierSucceed;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyCarrierPortNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyCarrierPortNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.forceWorkerIp_ = forceWorkerIp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.portNum_ = portNum_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bandWidth_ = bandWidth_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.forceConsPort_ = forceConsPort_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.channerCarrierType_ = channerCarrierType_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.isChannerDmz_ = isChannerDmz_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.channeeCarrierType_ = channeeCarrierType_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.isChanneeDmz_ = isChanneeDmz_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.resultCode_ = resultCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string ForceWorkerIp = 2;
      private java.lang.Object forceWorkerIp_ = "";
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public boolean hasForceWorkerIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public java.lang.String getForceWorkerIp() {
        java.lang.Object ref = forceWorkerIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          forceWorkerIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public com.google.protobuf.ByteString
          getForceWorkerIpBytes() {
        java.lang.Object ref = forceWorkerIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          forceWorkerIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder setForceWorkerIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder clearForceWorkerIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        forceWorkerIp_ = getDefaultInstance().getForceWorkerIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder setForceWorkerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 3;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional uint32 PortNum = 4;
      private int portNum_ ;
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public boolean hasPortNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public int getPortNum() {
        return portNum_;
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public Builder setPortNum(int value) {
        bitField0_ |= 0x00000008;
        portNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public Builder clearPortNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        portNum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 BandWidth = 5;
      private int bandWidth_ ;
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public boolean hasBandWidth() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public int getBandWidth() {
        return bandWidth_;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public Builder setBandWidth(int value) {
        bitField0_ |= 0x00000010;
        bandWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public Builder clearBandWidth() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bandWidth_ = 0;
        onChanged();
        return this;
      }

      // optional bool ForceConsPort = 6;
      private boolean forceConsPort_ ;
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public boolean hasForceConsPort() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public boolean getForceConsPort() {
        return forceConsPort_;
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public Builder setForceConsPort(boolean value) {
        bitField0_ |= 0x00000020;
        forceConsPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public Builder clearForceConsPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        forceConsPort_ = false;
        onChanged();
        return this;
      }

      // optional string ChannerCarrierType = 7;
      private java.lang.Object channerCarrierType_ = "";
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public boolean hasChannerCarrierType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public java.lang.String getChannerCarrierType() {
        java.lang.Object ref = channerCarrierType_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channerCarrierType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public com.google.protobuf.ByteString
          getChannerCarrierTypeBytes() {
        java.lang.Object ref = channerCarrierType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channerCarrierType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public Builder setChannerCarrierType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        channerCarrierType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public Builder clearChannerCarrierType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        channerCarrierType_ = getDefaultInstance().getChannerCarrierType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChannerCarrierType = 7;</code>
       */
      public Builder setChannerCarrierTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        channerCarrierType_ = value;
        onChanged();
        return this;
      }

      // optional bool IsChannerDmz = 8;
      private boolean isChannerDmz_ ;
      /**
       * <code>optional bool IsChannerDmz = 8;</code>
       */
      public boolean hasIsChannerDmz() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool IsChannerDmz = 8;</code>
       */
      public boolean getIsChannerDmz() {
        return isChannerDmz_;
      }
      /**
       * <code>optional bool IsChannerDmz = 8;</code>
       */
      public Builder setIsChannerDmz(boolean value) {
        bitField0_ |= 0x00000080;
        isChannerDmz_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool IsChannerDmz = 8;</code>
       */
      public Builder clearIsChannerDmz() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isChannerDmz_ = false;
        onChanged();
        return this;
      }

      // optional string ChanneeCarrierType = 9;
      private java.lang.Object channeeCarrierType_ = "";
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public boolean hasChanneeCarrierType() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public java.lang.String getChanneeCarrierType() {
        java.lang.Object ref = channeeCarrierType_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channeeCarrierType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public com.google.protobuf.ByteString
          getChanneeCarrierTypeBytes() {
        java.lang.Object ref = channeeCarrierType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channeeCarrierType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public Builder setChanneeCarrierType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        channeeCarrierType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public Builder clearChanneeCarrierType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        channeeCarrierType_ = getDefaultInstance().getChanneeCarrierType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ChanneeCarrierType = 9;</code>
       */
      public Builder setChanneeCarrierTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        channeeCarrierType_ = value;
        onChanged();
        return this;
      }

      // optional bool IsChanneeDmz = 10;
      private boolean isChanneeDmz_ ;
      /**
       * <code>optional bool IsChanneeDmz = 10;</code>
       */
      public boolean hasIsChanneeDmz() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool IsChanneeDmz = 10;</code>
       */
      public boolean getIsChanneeDmz() {
        return isChanneeDmz_;
      }
      /**
       * <code>optional bool IsChanneeDmz = 10;</code>
       */
      public Builder setIsChanneeDmz(boolean value) {
        bitField0_ |= 0x00000200;
        isChanneeDmz_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool IsChanneeDmz = 10;</code>
       */
      public Builder clearIsChanneeDmz() {
        bitField0_ = (bitField0_ & ~0x00000200);
        isChanneeDmz_ = false;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.EDssCarrierReqResultCode resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssCarrierReqResultCode.eCarrierSucceed;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;</code>
       */
      public boolean hasResultCode() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.EDssCarrierReqResultCode getResultCode() {
        return resultCode_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;</code>
       */
      public Builder setResultCode(com.kedacom.ops.flink.etl.proto.Dssevenum.EDssCarrierReqResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000400;
        resultCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssCarrierReqResultCode ResultCode = 11;</code>
       */
      public Builder clearResultCode() {
        bitField0_ = (bitField0_ & ~0x00000400);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssCarrierReqResultCode.eCarrierSucceed;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltASyncApplyCarrierPortNack)
    }

    static {
      defaultInstance = new DssCltASyncApplyCarrierPortNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltASyncApplyCarrierPortNack)
  }

  public interface CltDssSyncApplyPortReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string ForceWorkerIp = 2;
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    boolean hasForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    java.lang.String getForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    com.google.protobuf.ByteString
        getForceWorkerIpBytes();

    // optional string MeetingHandle = 3;
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional uint32 PortNum = 4;
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    boolean hasPortNum();
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    int getPortNum();

    // optional uint32 BandWidth = 5;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    boolean hasBandWidth();
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    int getBandWidth();

    // optional bool ForceConsPort = 6;
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    boolean hasForceConsPort();
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    boolean getForceConsPort();

    // repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> 
        getCarrierAttrList();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr getCarrierAttr(int index);
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    int getCarrierAttrCount();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder> 
        getCarrierAttrOrBuilderList();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder getCarrierAttrOrBuilder(
        int index);

    // optional uint32 ClientTick = 8;
    /**
     * <code>optional uint32 ClientTick = 8;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 8;</code>
     */
    int getClientTick();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssSyncApplyPortReq}
   */
  public static final class CltDssSyncApplyPortReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssSyncApplyPortReqOrBuilder {
    // Use CltDssSyncApplyPortReq.newBuilder() to construct.
    private CltDssSyncApplyPortReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssSyncApplyPortReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssSyncApplyPortReq defaultInstance;
    public static CltDssSyncApplyPortReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssSyncApplyPortReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyPortReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyPortReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssSyncApplyPortReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssSyncApplyPortReq>() {
      public CltDssSyncApplyPortReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssSyncApplyPortReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string ForceWorkerIp = 2;
    public static final int FORCEWORKERIP_FIELD_NUMBER = 2;
    private java.lang.Object forceWorkerIp_;
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public boolean hasForceWorkerIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public java.lang.String getForceWorkerIp() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          forceWorkerIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public com.google.protobuf.ByteString
        getForceWorkerIpBytes() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        forceWorkerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string MeetingHandle = 3;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 3;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 PortNum = 4;
    public static final int PORTNUM_FIELD_NUMBER = 4;
    private int portNum_;
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    public boolean hasPortNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    public int getPortNum() {
      return portNum_;
    }

    // optional uint32 BandWidth = 5;
    public static final int BANDWIDTH_FIELD_NUMBER = 5;
    private int bandWidth_;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    public boolean hasBandWidth() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    public int getBandWidth() {
      return bandWidth_;
    }

    // optional bool ForceConsPort = 6;
    public static final int FORCECONSPORT_FIELD_NUMBER = 6;
    private boolean forceConsPort_;
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    public boolean hasForceConsPort() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    public boolean getForceConsPort() {
      return forceConsPort_;
    }

    // repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;
    public static final int CARRIERATTR_FIELD_NUMBER = 7;
    private java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> carrierAttr_;
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> getCarrierAttrList() {
      return carrierAttr_;
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    public java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder> 
        getCarrierAttrOrBuilderList() {
      return carrierAttr_;
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    public int getCarrierAttrCount() {
      return carrierAttr_.size();
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr getCarrierAttr(int index) {
      return carrierAttr_.get(index);
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder getCarrierAttrOrBuilder(
        int index) {
      return carrierAttr_.get(index);
    }

    // optional uint32 ClientTick = 8;
    public static final int CLIENTTICK_FIELD_NUMBER = 8;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 8;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 ClientTick = 8;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    private void initFields() {
      clientId_ = 0;
      forceWorkerIp_ = "";
      meetingHandle_ = "";
      portNum_ = 0;
      bandWidth_ = 0;
      forceConsPort_ = false;
      carrierAttr_ = java.util.Collections.emptyList();
      clientTick_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssSyncApplyPortReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyPortReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyPortReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCarrierAttrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        forceWorkerIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        portNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bandWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        forceConsPort_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (carrierAttrBuilder_ == null) {
          carrierAttr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          carrierAttrBuilder_.clear();
        }
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyPortReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncApplyPortReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.forceWorkerIp_ = forceWorkerIp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.portNum_ = portNum_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bandWidth_ = bandWidth_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.forceConsPort_ = forceConsPort_;
        if (carrierAttrBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            carrierAttr_ = java.util.Collections.unmodifiableList(carrierAttr_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.carrierAttr_ = carrierAttr_;
        } else {
          result.carrierAttr_ = carrierAttrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.clientTick_ = clientTick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string ForceWorkerIp = 2;
      private java.lang.Object forceWorkerIp_ = "";
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public boolean hasForceWorkerIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public java.lang.String getForceWorkerIp() {
        java.lang.Object ref = forceWorkerIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          forceWorkerIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public com.google.protobuf.ByteString
          getForceWorkerIpBytes() {
        java.lang.Object ref = forceWorkerIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          forceWorkerIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder setForceWorkerIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder clearForceWorkerIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        forceWorkerIp_ = getDefaultInstance().getForceWorkerIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder setForceWorkerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 3;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional uint32 PortNum = 4;
      private int portNum_ ;
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public boolean hasPortNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public int getPortNum() {
        return portNum_;
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public Builder setPortNum(int value) {
        bitField0_ |= 0x00000008;
        portNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public Builder clearPortNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        portNum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 BandWidth = 5;
      private int bandWidth_ ;
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public boolean hasBandWidth() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public int getBandWidth() {
        return bandWidth_;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public Builder setBandWidth(int value) {
        bitField0_ |= 0x00000010;
        bandWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public Builder clearBandWidth() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bandWidth_ = 0;
        onChanged();
        return this;
      }

      // optional bool ForceConsPort = 6;
      private boolean forceConsPort_ ;
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public boolean hasForceConsPort() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public boolean getForceConsPort() {
        return forceConsPort_;
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public Builder setForceConsPort(boolean value) {
        bitField0_ |= 0x00000020;
        forceConsPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public Builder clearForceConsPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        forceConsPort_ = false;
        onChanged();
        return this;
      }

      // repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;
      private java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> carrierAttr_ =
        java.util.Collections.emptyList();
      private void ensureCarrierAttrIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          carrierAttr_ = new java.util.ArrayList<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr>(carrierAttr_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder> carrierAttrBuilder_;

      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> getCarrierAttrList() {
        if (carrierAttrBuilder_ == null) {
          return java.util.Collections.unmodifiableList(carrierAttr_);
        } else {
          return carrierAttrBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public int getCarrierAttrCount() {
        if (carrierAttrBuilder_ == null) {
          return carrierAttr_.size();
        } else {
          return carrierAttrBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr getCarrierAttr(int index) {
        if (carrierAttrBuilder_ == null) {
          return carrierAttr_.get(index);
        } else {
          return carrierAttrBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder setCarrierAttr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr value) {
        if (carrierAttrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarrierAttrIsMutable();
          carrierAttr_.set(index, value);
          onChanged();
        } else {
          carrierAttrBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder setCarrierAttr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder builderForValue) {
        if (carrierAttrBuilder_ == null) {
          ensureCarrierAttrIsMutable();
          carrierAttr_.set(index, builderForValue.build());
          onChanged();
        } else {
          carrierAttrBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder addCarrierAttr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr value) {
        if (carrierAttrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarrierAttrIsMutable();
          carrierAttr_.add(value);
          onChanged();
        } else {
          carrierAttrBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder addCarrierAttr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr value) {
        if (carrierAttrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarrierAttrIsMutable();
          carrierAttr_.add(index, value);
          onChanged();
        } else {
          carrierAttrBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder addCarrierAttr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder builderForValue) {
        if (carrierAttrBuilder_ == null) {
          ensureCarrierAttrIsMutable();
          carrierAttr_.add(builderForValue.build());
          onChanged();
        } else {
          carrierAttrBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder addCarrierAttr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder builderForValue) {
        if (carrierAttrBuilder_ == null) {
          ensureCarrierAttrIsMutable();
          carrierAttr_.add(index, builderForValue.build());
          onChanged();
        } else {
          carrierAttrBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder addAllCarrierAttr(
          java.lang.Iterable<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> values) {
        if (carrierAttrBuilder_ == null) {
          ensureCarrierAttrIsMutable();
          super.addAll(values, carrierAttr_);
          onChanged();
        } else {
          carrierAttrBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder clearCarrierAttr() {
        if (carrierAttrBuilder_ == null) {
          carrierAttr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          carrierAttrBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder removeCarrierAttr(int index) {
        if (carrierAttrBuilder_ == null) {
          ensureCarrierAttrIsMutable();
          carrierAttr_.remove(index);
          onChanged();
        } else {
          carrierAttrBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder getCarrierAttrBuilder(
          int index) {
        return getCarrierAttrFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder getCarrierAttrOrBuilder(
          int index) {
        if (carrierAttrBuilder_ == null) {
          return carrierAttr_.get(index);  } else {
          return carrierAttrBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder> 
           getCarrierAttrOrBuilderList() {
        if (carrierAttrBuilder_ != null) {
          return carrierAttrBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(carrierAttr_);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder addCarrierAttrBuilder() {
        return getCarrierAttrFieldBuilder().addBuilder(
            com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.getDefaultInstance());
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder addCarrierAttrBuilder(
          int index) {
        return getCarrierAttrFieldBuilder().addBuilder(
            index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.getDefaultInstance());
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder> 
           getCarrierAttrBuilderList() {
        return getCarrierAttrFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder> 
          getCarrierAttrFieldBuilder() {
        if (carrierAttrBuilder_ == null) {
          carrierAttrBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder>(
                  carrierAttr_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          carrierAttr_ = null;
        }
        return carrierAttrBuilder_;
      }

      // optional uint32 ClientTick = 8;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 8;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 ClientTick = 8;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 8;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000080;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 8;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000080);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssSyncApplyPortReq)
    }

    static {
      defaultInstance = new CltDssSyncApplyPortReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssSyncApplyPortReq)
  }

  public interface DssCltSyncApplyPortAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
     */
    java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr> 
        getCarrierAddrList();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr getCarrierAddr(int index);
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
     */
    int getCarrierAddrCount();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
     */
    java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddrOrBuilder> 
        getCarrierAddrOrBuilderList();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddrOrBuilder getCarrierAddrOrBuilder(
        int index);

    // repeated uint32 Port = 4;
    /**
     * <code>repeated uint32 Port = 4;</code>
     */
    java.util.List<java.lang.Integer> getPortList();
    /**
     * <code>repeated uint32 Port = 4;</code>
     */
    int getPortCount();
    /**
     * <code>repeated uint32 Port = 4;</code>
     */
    int getPort(int index);

    // optional uint32 PortHandle = 5;
    /**
     * <code>optional uint32 PortHandle = 5;</code>
     */
    boolean hasPortHandle();
    /**
     * <code>optional uint32 PortHandle = 5;</code>
     */
    int getPortHandle();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSyncApplyPortAck}
   */
  public static final class DssCltSyncApplyPortAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltSyncApplyPortAckOrBuilder {
    // Use DssCltSyncApplyPortAck.newBuilder() to construct.
    private DssCltSyncApplyPortAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltSyncApplyPortAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltSyncApplyPortAck defaultInstance;
    public static DssCltSyncApplyPortAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltSyncApplyPortAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyPortAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyPortAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltSyncApplyPortAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltSyncApplyPortAck>() {
      public DssCltSyncApplyPortAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltSyncApplyPortAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;
    public static final int CARRIERADDR_FIELD_NUMBER = 3;
    private java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr> carrierAddr_;
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
     */
    public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr> getCarrierAddrList() {
      return carrierAddr_;
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
     */
    public java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddrOrBuilder> 
        getCarrierAddrOrBuilderList() {
      return carrierAddr_;
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
     */
    public int getCarrierAddrCount() {
      return carrierAddr_.size();
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr getCarrierAddr(int index) {
      return carrierAddr_.get(index);
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddrOrBuilder getCarrierAddrOrBuilder(
        int index) {
      return carrierAddr_.get(index);
    }

    // repeated uint32 Port = 4;
    public static final int PORT_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> port_;
    /**
     * <code>repeated uint32 Port = 4;</code>
     */
    public java.util.List<java.lang.Integer>
        getPortList() {
      return port_;
    }
    /**
     * <code>repeated uint32 Port = 4;</code>
     */
    public int getPortCount() {
      return port_.size();
    }
    /**
     * <code>repeated uint32 Port = 4;</code>
     */
    public int getPort(int index) {
      return port_.get(index);
    }

    // optional uint32 PortHandle = 5;
    public static final int PORTHANDLE_FIELD_NUMBER = 5;
    private int portHandle_;
    /**
     * <code>optional uint32 PortHandle = 5;</code>
     */
    public boolean hasPortHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 PortHandle = 5;</code>
     */
    public int getPortHandle() {
      return portHandle_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      carrierAddr_ = java.util.Collections.emptyList();
      port_ = java.util.Collections.emptyList();
      portHandle_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSyncApplyPortAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyPortAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyPortAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCarrierAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (carrierAddrBuilder_ == null) {
          carrierAddr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          carrierAddrBuilder_.clear();
        }
        port_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        portHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyPortAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (carrierAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            carrierAddr_ = java.util.Collections.unmodifiableList(carrierAddr_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.carrierAddr_ = carrierAddr_;
        } else {
          result.carrierAddr_ = carrierAddrBuilder_.build();
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          port_ = java.util.Collections.unmodifiableList(port_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.portHandle_ = portHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;
      private java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr> carrierAddr_ =
        java.util.Collections.emptyList();
      private void ensureCarrierAddrIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          carrierAddr_ = new java.util.ArrayList<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr>(carrierAddr_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddrOrBuilder> carrierAddrBuilder_;

      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr> getCarrierAddrList() {
        if (carrierAddrBuilder_ == null) {
          return java.util.Collections.unmodifiableList(carrierAddr_);
        } else {
          return carrierAddrBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public int getCarrierAddrCount() {
        if (carrierAddrBuilder_ == null) {
          return carrierAddr_.size();
        } else {
          return carrierAddrBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr getCarrierAddr(int index) {
        if (carrierAddrBuilder_ == null) {
          return carrierAddr_.get(index);
        } else {
          return carrierAddrBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public Builder setCarrierAddr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr value) {
        if (carrierAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarrierAddrIsMutable();
          carrierAddr_.set(index, value);
          onChanged();
        } else {
          carrierAddrBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public Builder setCarrierAddr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.Builder builderForValue) {
        if (carrierAddrBuilder_ == null) {
          ensureCarrierAddrIsMutable();
          carrierAddr_.set(index, builderForValue.build());
          onChanged();
        } else {
          carrierAddrBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public Builder addCarrierAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr value) {
        if (carrierAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarrierAddrIsMutable();
          carrierAddr_.add(value);
          onChanged();
        } else {
          carrierAddrBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public Builder addCarrierAddr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr value) {
        if (carrierAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarrierAddrIsMutable();
          carrierAddr_.add(index, value);
          onChanged();
        } else {
          carrierAddrBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public Builder addCarrierAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.Builder builderForValue) {
        if (carrierAddrBuilder_ == null) {
          ensureCarrierAddrIsMutable();
          carrierAddr_.add(builderForValue.build());
          onChanged();
        } else {
          carrierAddrBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public Builder addCarrierAddr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.Builder builderForValue) {
        if (carrierAddrBuilder_ == null) {
          ensureCarrierAddrIsMutable();
          carrierAddr_.add(index, builderForValue.build());
          onChanged();
        } else {
          carrierAddrBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public Builder addAllCarrierAddr(
          java.lang.Iterable<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr> values) {
        if (carrierAddrBuilder_ == null) {
          ensureCarrierAddrIsMutable();
          super.addAll(values, carrierAddr_);
          onChanged();
        } else {
          carrierAddrBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public Builder clearCarrierAddr() {
        if (carrierAddrBuilder_ == null) {
          carrierAddr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          carrierAddrBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public Builder removeCarrierAddr(int index) {
        if (carrierAddrBuilder_ == null) {
          ensureCarrierAddrIsMutable();
          carrierAddr_.remove(index);
          onChanged();
        } else {
          carrierAddrBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.Builder getCarrierAddrBuilder(
          int index) {
        return getCarrierAddrFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddrOrBuilder getCarrierAddrOrBuilder(
          int index) {
        if (carrierAddrBuilder_ == null) {
          return carrierAddr_.get(index);  } else {
          return carrierAddrBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddrOrBuilder> 
           getCarrierAddrOrBuilderList() {
        if (carrierAddrBuilder_ != null) {
          return carrierAddrBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(carrierAddr_);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.Builder addCarrierAddrBuilder() {
        return getCarrierAddrFieldBuilder().addBuilder(
            com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.getDefaultInstance());
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.Builder addCarrierAddrBuilder(
          int index) {
        return getCarrierAddrFieldBuilder().addBuilder(
            index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.getDefaultInstance());
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.Builder> 
           getCarrierAddrBuilderList() {
        return getCarrierAddrFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddrOrBuilder> 
          getCarrierAddrFieldBuilder() {
        if (carrierAddrBuilder_ == null) {
          carrierAddrBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddrOrBuilder>(
                  carrierAddr_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          carrierAddr_ = null;
        }
        return carrierAddrBuilder_;
      }

      // repeated uint32 Port = 4;
      private java.util.List<java.lang.Integer> port_ = java.util.Collections.emptyList();
      private void ensurePortIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          port_ = new java.util.ArrayList<java.lang.Integer>(port_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated uint32 Port = 4;</code>
       */
      public java.util.List<java.lang.Integer>
          getPortList() {
        return java.util.Collections.unmodifiableList(port_);
      }
      /**
       * <code>repeated uint32 Port = 4;</code>
       */
      public int getPortCount() {
        return port_.size();
      }
      /**
       * <code>repeated uint32 Port = 4;</code>
       */
      public int getPort(int index) {
        return port_.get(index);
      }
      /**
       * <code>repeated uint32 Port = 4;</code>
       */
      public Builder setPort(
          int index, int value) {
        ensurePortIsMutable();
        port_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 Port = 4;</code>
       */
      public Builder addPort(int value) {
        ensurePortIsMutable();
        port_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 Port = 4;</code>
       */
      public Builder addAllPort(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePortIsMutable();
        super.addAll(values, port_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 Port = 4;</code>
       */
      public Builder clearPort() {
        port_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional uint32 PortHandle = 5;
      private int portHandle_ ;
      /**
       * <code>optional uint32 PortHandle = 5;</code>
       */
      public boolean hasPortHandle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 PortHandle = 5;</code>
       */
      public int getPortHandle() {
        return portHandle_;
      }
      /**
       * <code>optional uint32 PortHandle = 5;</code>
       */
      public Builder setPortHandle(int value) {
        bitField0_ |= 0x00000010;
        portHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortHandle = 5;</code>
       */
      public Builder clearPortHandle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        portHandle_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltSyncApplyPortAck)
    }

    static {
      defaultInstance = new DssCltSyncApplyPortAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltSyncApplyPortAck)
  }

  public interface DssCltSyncApplyPortNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string ForceWorkerIp = 2;
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    boolean hasForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    java.lang.String getForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    com.google.protobuf.ByteString
        getForceWorkerIpBytes();

    // optional string MeetingHandle = 3;
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional uint32 PortNum = 4;
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    boolean hasPortNum();
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    int getPortNum();

    // optional uint32 BandWidth = 5;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    boolean hasBandWidth();
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    int getBandWidth();

    // optional bool ForceConsPort = 6;
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    boolean hasForceConsPort();
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    boolean getForceConsPort();

    // repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> 
        getCarrierAttrList();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr getCarrierAttr(int index);
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    int getCarrierAttrCount();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder> 
        getCarrierAttrOrBuilderList();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder getCarrierAttrOrBuilder(
        int index);

    // optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;</code>
     */
    boolean hasResultCode();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.EDssApplyPortResultCode getResultCode();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSyncApplyPortNack}
   */
  public static final class DssCltSyncApplyPortNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltSyncApplyPortNackOrBuilder {
    // Use DssCltSyncApplyPortNack.newBuilder() to construct.
    private DssCltSyncApplyPortNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltSyncApplyPortNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltSyncApplyPortNack defaultInstance;
    public static DssCltSyncApplyPortNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltSyncApplyPortNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyPortNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyPortNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltSyncApplyPortNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltSyncApplyPortNack>() {
      public DssCltSyncApplyPortNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltSyncApplyPortNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string ForceWorkerIp = 2;
    public static final int FORCEWORKERIP_FIELD_NUMBER = 2;
    private java.lang.Object forceWorkerIp_;
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public boolean hasForceWorkerIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public java.lang.String getForceWorkerIp() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          forceWorkerIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public com.google.protobuf.ByteString
        getForceWorkerIpBytes() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        forceWorkerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string MeetingHandle = 3;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 3;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 PortNum = 4;
    public static final int PORTNUM_FIELD_NUMBER = 4;
    private int portNum_;
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    public boolean hasPortNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    public int getPortNum() {
      return portNum_;
    }

    // optional uint32 BandWidth = 5;
    public static final int BANDWIDTH_FIELD_NUMBER = 5;
    private int bandWidth_;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    public boolean hasBandWidth() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    public int getBandWidth() {
      return bandWidth_;
    }

    // optional bool ForceConsPort = 6;
    public static final int FORCECONSPORT_FIELD_NUMBER = 6;
    private boolean forceConsPort_;
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    public boolean hasForceConsPort() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    public boolean getForceConsPort() {
      return forceConsPort_;
    }

    // repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;
    public static final int CARRIERATTR_FIELD_NUMBER = 7;
    private java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> carrierAttr_;
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> getCarrierAttrList() {
      return carrierAttr_;
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    public java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder> 
        getCarrierAttrOrBuilderList() {
      return carrierAttr_;
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    public int getCarrierAttrCount() {
      return carrierAttr_.size();
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr getCarrierAttr(int index) {
      return carrierAttr_.get(index);
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder getCarrierAttrOrBuilder(
        int index) {
      return carrierAttr_.get(index);
    }

    // optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;
    public static final int RESULTCODE_FIELD_NUMBER = 8;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.EDssApplyPortResultCode resultCode_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;</code>
     */
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.EDssApplyPortResultCode getResultCode() {
      return resultCode_;
    }

    private void initFields() {
      clientId_ = 0;
      forceWorkerIp_ = "";
      meetingHandle_ = "";
      portNum_ = 0;
      bandWidth_ = 0;
      forceConsPort_ = false;
      carrierAttr_ = java.util.Collections.emptyList();
      resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssApplyPortResultCode.eApplyPortSucceed;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSyncApplyPortNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyPortNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyPortNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCarrierAttrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        forceWorkerIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        portNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bandWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        forceConsPort_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (carrierAttrBuilder_ == null) {
          carrierAttr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          carrierAttrBuilder_.clear();
        }
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssApplyPortResultCode.eApplyPortSucceed;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyPortNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncApplyPortNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.forceWorkerIp_ = forceWorkerIp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.portNum_ = portNum_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bandWidth_ = bandWidth_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.forceConsPort_ = forceConsPort_;
        if (carrierAttrBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            carrierAttr_ = java.util.Collections.unmodifiableList(carrierAttr_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.carrierAttr_ = carrierAttr_;
        } else {
          result.carrierAttr_ = carrierAttrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.resultCode_ = resultCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string ForceWorkerIp = 2;
      private java.lang.Object forceWorkerIp_ = "";
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public boolean hasForceWorkerIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public java.lang.String getForceWorkerIp() {
        java.lang.Object ref = forceWorkerIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          forceWorkerIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public com.google.protobuf.ByteString
          getForceWorkerIpBytes() {
        java.lang.Object ref = forceWorkerIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          forceWorkerIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder setForceWorkerIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder clearForceWorkerIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        forceWorkerIp_ = getDefaultInstance().getForceWorkerIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder setForceWorkerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 3;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional uint32 PortNum = 4;
      private int portNum_ ;
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public boolean hasPortNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public int getPortNum() {
        return portNum_;
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public Builder setPortNum(int value) {
        bitField0_ |= 0x00000008;
        portNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public Builder clearPortNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        portNum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 BandWidth = 5;
      private int bandWidth_ ;
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public boolean hasBandWidth() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public int getBandWidth() {
        return bandWidth_;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public Builder setBandWidth(int value) {
        bitField0_ |= 0x00000010;
        bandWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public Builder clearBandWidth() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bandWidth_ = 0;
        onChanged();
        return this;
      }

      // optional bool ForceConsPort = 6;
      private boolean forceConsPort_ ;
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public boolean hasForceConsPort() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public boolean getForceConsPort() {
        return forceConsPort_;
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public Builder setForceConsPort(boolean value) {
        bitField0_ |= 0x00000020;
        forceConsPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public Builder clearForceConsPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        forceConsPort_ = false;
        onChanged();
        return this;
      }

      // repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;
      private java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> carrierAttr_ =
        java.util.Collections.emptyList();
      private void ensureCarrierAttrIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          carrierAttr_ = new java.util.ArrayList<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr>(carrierAttr_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder> carrierAttrBuilder_;

      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> getCarrierAttrList() {
        if (carrierAttrBuilder_ == null) {
          return java.util.Collections.unmodifiableList(carrierAttr_);
        } else {
          return carrierAttrBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public int getCarrierAttrCount() {
        if (carrierAttrBuilder_ == null) {
          return carrierAttr_.size();
        } else {
          return carrierAttrBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr getCarrierAttr(int index) {
        if (carrierAttrBuilder_ == null) {
          return carrierAttr_.get(index);
        } else {
          return carrierAttrBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder setCarrierAttr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr value) {
        if (carrierAttrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarrierAttrIsMutable();
          carrierAttr_.set(index, value);
          onChanged();
        } else {
          carrierAttrBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder setCarrierAttr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder builderForValue) {
        if (carrierAttrBuilder_ == null) {
          ensureCarrierAttrIsMutable();
          carrierAttr_.set(index, builderForValue.build());
          onChanged();
        } else {
          carrierAttrBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder addCarrierAttr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr value) {
        if (carrierAttrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarrierAttrIsMutable();
          carrierAttr_.add(value);
          onChanged();
        } else {
          carrierAttrBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder addCarrierAttr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr value) {
        if (carrierAttrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarrierAttrIsMutable();
          carrierAttr_.add(index, value);
          onChanged();
        } else {
          carrierAttrBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder addCarrierAttr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder builderForValue) {
        if (carrierAttrBuilder_ == null) {
          ensureCarrierAttrIsMutable();
          carrierAttr_.add(builderForValue.build());
          onChanged();
        } else {
          carrierAttrBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder addCarrierAttr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder builderForValue) {
        if (carrierAttrBuilder_ == null) {
          ensureCarrierAttrIsMutable();
          carrierAttr_.add(index, builderForValue.build());
          onChanged();
        } else {
          carrierAttrBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder addAllCarrierAttr(
          java.lang.Iterable<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> values) {
        if (carrierAttrBuilder_ == null) {
          ensureCarrierAttrIsMutable();
          super.addAll(values, carrierAttr_);
          onChanged();
        } else {
          carrierAttrBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder clearCarrierAttr() {
        if (carrierAttrBuilder_ == null) {
          carrierAttr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          carrierAttrBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder removeCarrierAttr(int index) {
        if (carrierAttrBuilder_ == null) {
          ensureCarrierAttrIsMutable();
          carrierAttr_.remove(index);
          onChanged();
        } else {
          carrierAttrBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder getCarrierAttrBuilder(
          int index) {
        return getCarrierAttrFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder getCarrierAttrOrBuilder(
          int index) {
        if (carrierAttrBuilder_ == null) {
          return carrierAttr_.get(index);  } else {
          return carrierAttrBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder> 
           getCarrierAttrOrBuilderList() {
        if (carrierAttrBuilder_ != null) {
          return carrierAttrBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(carrierAttr_);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder addCarrierAttrBuilder() {
        return getCarrierAttrFieldBuilder().addBuilder(
            com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.getDefaultInstance());
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder addCarrierAttrBuilder(
          int index) {
        return getCarrierAttrFieldBuilder().addBuilder(
            index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.getDefaultInstance());
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder> 
           getCarrierAttrBuilderList() {
        return getCarrierAttrFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder> 
          getCarrierAttrFieldBuilder() {
        if (carrierAttrBuilder_ == null) {
          carrierAttrBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder>(
                  carrierAttr_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          carrierAttr_ = null;
        }
        return carrierAttrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.EDssApplyPortResultCode resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssApplyPortResultCode.eApplyPortSucceed;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;</code>
       */
      public boolean hasResultCode() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.EDssApplyPortResultCode getResultCode() {
        return resultCode_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;</code>
       */
      public Builder setResultCode(com.kedacom.ops.flink.etl.proto.Dssevenum.EDssApplyPortResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        resultCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;</code>
       */
      public Builder clearResultCode() {
        bitField0_ = (bitField0_ & ~0x00000080);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssApplyPortResultCode.eApplyPortSucceed;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltSyncApplyPortNack)
    }

    static {
      defaultInstance = new DssCltSyncApplyPortNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltSyncApplyPortNack)
  }

  public interface CltDssASyncApplyPortReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string ForceWorkerIp = 2;
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    boolean hasForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    java.lang.String getForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    com.google.protobuf.ByteString
        getForceWorkerIpBytes();

    // optional string MeetingHandle = 3;
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional uint32 PortNum = 4;
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    boolean hasPortNum();
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    int getPortNum();

    // optional uint32 BandWidth = 5;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    boolean hasBandWidth();
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    int getBandWidth();

    // optional bool ForceConsPort = 6;
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    boolean hasForceConsPort();
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    boolean getForceConsPort();

    // repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> 
        getCarrierAttrList();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr getCarrierAttr(int index);
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    int getCarrierAttrCount();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder> 
        getCarrierAttrOrBuilderList();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder getCarrierAttrOrBuilder(
        int index);

    // optional uint32 ClientTick = 8;
    /**
     * <code>optional uint32 ClientTick = 8;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 8;</code>
     */
    int getClientTick();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssASyncApplyPortReq}
   */
  public static final class CltDssASyncApplyPortReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssASyncApplyPortReqOrBuilder {
    // Use CltDssASyncApplyPortReq.newBuilder() to construct.
    private CltDssASyncApplyPortReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssASyncApplyPortReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssASyncApplyPortReq defaultInstance;
    public static CltDssASyncApplyPortReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssASyncApplyPortReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyPortReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyPortReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssASyncApplyPortReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssASyncApplyPortReq>() {
      public CltDssASyncApplyPortReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssASyncApplyPortReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string ForceWorkerIp = 2;
    public static final int FORCEWORKERIP_FIELD_NUMBER = 2;
    private java.lang.Object forceWorkerIp_;
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public boolean hasForceWorkerIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public java.lang.String getForceWorkerIp() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          forceWorkerIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public com.google.protobuf.ByteString
        getForceWorkerIpBytes() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        forceWorkerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string MeetingHandle = 3;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 3;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 PortNum = 4;
    public static final int PORTNUM_FIELD_NUMBER = 4;
    private int portNum_;
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    public boolean hasPortNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    public int getPortNum() {
      return portNum_;
    }

    // optional uint32 BandWidth = 5;
    public static final int BANDWIDTH_FIELD_NUMBER = 5;
    private int bandWidth_;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    public boolean hasBandWidth() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    public int getBandWidth() {
      return bandWidth_;
    }

    // optional bool ForceConsPort = 6;
    public static final int FORCECONSPORT_FIELD_NUMBER = 6;
    private boolean forceConsPort_;
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    public boolean hasForceConsPort() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    public boolean getForceConsPort() {
      return forceConsPort_;
    }

    // repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;
    public static final int CARRIERATTR_FIELD_NUMBER = 7;
    private java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> carrierAttr_;
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> getCarrierAttrList() {
      return carrierAttr_;
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    public java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder> 
        getCarrierAttrOrBuilderList() {
      return carrierAttr_;
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    public int getCarrierAttrCount() {
      return carrierAttr_.size();
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr getCarrierAttr(int index) {
      return carrierAttr_.get(index);
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder getCarrierAttrOrBuilder(
        int index) {
      return carrierAttr_.get(index);
    }

    // optional uint32 ClientTick = 8;
    public static final int CLIENTTICK_FIELD_NUMBER = 8;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 8;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 ClientTick = 8;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    private void initFields() {
      clientId_ = 0;
      forceWorkerIp_ = "";
      meetingHandle_ = "";
      portNum_ = 0;
      bandWidth_ = 0;
      forceConsPort_ = false;
      carrierAttr_ = java.util.Collections.emptyList();
      clientTick_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssASyncApplyPortReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyPortReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyPortReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCarrierAttrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        forceWorkerIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        portNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bandWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        forceConsPort_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (carrierAttrBuilder_ == null) {
          carrierAttr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          carrierAttrBuilder_.clear();
        }
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyPortReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncApplyPortReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.forceWorkerIp_ = forceWorkerIp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.portNum_ = portNum_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bandWidth_ = bandWidth_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.forceConsPort_ = forceConsPort_;
        if (carrierAttrBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            carrierAttr_ = java.util.Collections.unmodifiableList(carrierAttr_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.carrierAttr_ = carrierAttr_;
        } else {
          result.carrierAttr_ = carrierAttrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.clientTick_ = clientTick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string ForceWorkerIp = 2;
      private java.lang.Object forceWorkerIp_ = "";
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public boolean hasForceWorkerIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public java.lang.String getForceWorkerIp() {
        java.lang.Object ref = forceWorkerIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          forceWorkerIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public com.google.protobuf.ByteString
          getForceWorkerIpBytes() {
        java.lang.Object ref = forceWorkerIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          forceWorkerIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder setForceWorkerIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder clearForceWorkerIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        forceWorkerIp_ = getDefaultInstance().getForceWorkerIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder setForceWorkerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 3;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional uint32 PortNum = 4;
      private int portNum_ ;
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public boolean hasPortNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public int getPortNum() {
        return portNum_;
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public Builder setPortNum(int value) {
        bitField0_ |= 0x00000008;
        portNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public Builder clearPortNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        portNum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 BandWidth = 5;
      private int bandWidth_ ;
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public boolean hasBandWidth() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public int getBandWidth() {
        return bandWidth_;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public Builder setBandWidth(int value) {
        bitField0_ |= 0x00000010;
        bandWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public Builder clearBandWidth() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bandWidth_ = 0;
        onChanged();
        return this;
      }

      // optional bool ForceConsPort = 6;
      private boolean forceConsPort_ ;
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public boolean hasForceConsPort() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public boolean getForceConsPort() {
        return forceConsPort_;
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public Builder setForceConsPort(boolean value) {
        bitField0_ |= 0x00000020;
        forceConsPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public Builder clearForceConsPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        forceConsPort_ = false;
        onChanged();
        return this;
      }

      // repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;
      private java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> carrierAttr_ =
        java.util.Collections.emptyList();
      private void ensureCarrierAttrIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          carrierAttr_ = new java.util.ArrayList<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr>(carrierAttr_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder> carrierAttrBuilder_;

      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> getCarrierAttrList() {
        if (carrierAttrBuilder_ == null) {
          return java.util.Collections.unmodifiableList(carrierAttr_);
        } else {
          return carrierAttrBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public int getCarrierAttrCount() {
        if (carrierAttrBuilder_ == null) {
          return carrierAttr_.size();
        } else {
          return carrierAttrBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr getCarrierAttr(int index) {
        if (carrierAttrBuilder_ == null) {
          return carrierAttr_.get(index);
        } else {
          return carrierAttrBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder setCarrierAttr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr value) {
        if (carrierAttrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarrierAttrIsMutable();
          carrierAttr_.set(index, value);
          onChanged();
        } else {
          carrierAttrBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder setCarrierAttr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder builderForValue) {
        if (carrierAttrBuilder_ == null) {
          ensureCarrierAttrIsMutable();
          carrierAttr_.set(index, builderForValue.build());
          onChanged();
        } else {
          carrierAttrBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder addCarrierAttr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr value) {
        if (carrierAttrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarrierAttrIsMutable();
          carrierAttr_.add(value);
          onChanged();
        } else {
          carrierAttrBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder addCarrierAttr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr value) {
        if (carrierAttrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarrierAttrIsMutable();
          carrierAttr_.add(index, value);
          onChanged();
        } else {
          carrierAttrBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder addCarrierAttr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder builderForValue) {
        if (carrierAttrBuilder_ == null) {
          ensureCarrierAttrIsMutable();
          carrierAttr_.add(builderForValue.build());
          onChanged();
        } else {
          carrierAttrBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder addCarrierAttr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder builderForValue) {
        if (carrierAttrBuilder_ == null) {
          ensureCarrierAttrIsMutable();
          carrierAttr_.add(index, builderForValue.build());
          onChanged();
        } else {
          carrierAttrBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder addAllCarrierAttr(
          java.lang.Iterable<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> values) {
        if (carrierAttrBuilder_ == null) {
          ensureCarrierAttrIsMutable();
          super.addAll(values, carrierAttr_);
          onChanged();
        } else {
          carrierAttrBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder clearCarrierAttr() {
        if (carrierAttrBuilder_ == null) {
          carrierAttr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          carrierAttrBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder removeCarrierAttr(int index) {
        if (carrierAttrBuilder_ == null) {
          ensureCarrierAttrIsMutable();
          carrierAttr_.remove(index);
          onChanged();
        } else {
          carrierAttrBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder getCarrierAttrBuilder(
          int index) {
        return getCarrierAttrFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder getCarrierAttrOrBuilder(
          int index) {
        if (carrierAttrBuilder_ == null) {
          return carrierAttr_.get(index);  } else {
          return carrierAttrBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder> 
           getCarrierAttrOrBuilderList() {
        if (carrierAttrBuilder_ != null) {
          return carrierAttrBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(carrierAttr_);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder addCarrierAttrBuilder() {
        return getCarrierAttrFieldBuilder().addBuilder(
            com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.getDefaultInstance());
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder addCarrierAttrBuilder(
          int index) {
        return getCarrierAttrFieldBuilder().addBuilder(
            index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.getDefaultInstance());
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder> 
           getCarrierAttrBuilderList() {
        return getCarrierAttrFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder> 
          getCarrierAttrFieldBuilder() {
        if (carrierAttrBuilder_ == null) {
          carrierAttrBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder>(
                  carrierAttr_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          carrierAttr_ = null;
        }
        return carrierAttrBuilder_;
      }

      // optional uint32 ClientTick = 8;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 8;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 ClientTick = 8;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 8;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000080;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 8;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000080);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssASyncApplyPortReq)
    }

    static {
      defaultInstance = new CltDssASyncApplyPortReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssASyncApplyPortReq)
  }

  public interface DssCltASyncApplyPortAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
     */
    java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr> 
        getCarrierAddrList();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr getCarrierAddr(int index);
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
     */
    int getCarrierAddrCount();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
     */
    java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddrOrBuilder> 
        getCarrierAddrOrBuilderList();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddrOrBuilder getCarrierAddrOrBuilder(
        int index);

    // repeated uint32 Port = 4;
    /**
     * <code>repeated uint32 Port = 4;</code>
     */
    java.util.List<java.lang.Integer> getPortList();
    /**
     * <code>repeated uint32 Port = 4;</code>
     */
    int getPortCount();
    /**
     * <code>repeated uint32 Port = 4;</code>
     */
    int getPort(int index);

    // optional uint32 PortHandle = 5;
    /**
     * <code>optional uint32 PortHandle = 5;</code>
     */
    boolean hasPortHandle();
    /**
     * <code>optional uint32 PortHandle = 5;</code>
     */
    int getPortHandle();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltASyncApplyPortAck}
   */
  public static final class DssCltASyncApplyPortAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltASyncApplyPortAckOrBuilder {
    // Use DssCltASyncApplyPortAck.newBuilder() to construct.
    private DssCltASyncApplyPortAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltASyncApplyPortAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltASyncApplyPortAck defaultInstance;
    public static DssCltASyncApplyPortAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltASyncApplyPortAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyPortAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyPortAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltASyncApplyPortAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltASyncApplyPortAck>() {
      public DssCltASyncApplyPortAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltASyncApplyPortAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;
    public static final int CARRIERADDR_FIELD_NUMBER = 3;
    private java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr> carrierAddr_;
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
     */
    public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr> getCarrierAddrList() {
      return carrierAddr_;
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
     */
    public java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddrOrBuilder> 
        getCarrierAddrOrBuilderList() {
      return carrierAddr_;
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
     */
    public int getCarrierAddrCount() {
      return carrierAddr_.size();
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr getCarrierAddr(int index) {
      return carrierAddr_.get(index);
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddrOrBuilder getCarrierAddrOrBuilder(
        int index) {
      return carrierAddr_.get(index);
    }

    // repeated uint32 Port = 4;
    public static final int PORT_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> port_;
    /**
     * <code>repeated uint32 Port = 4;</code>
     */
    public java.util.List<java.lang.Integer>
        getPortList() {
      return port_;
    }
    /**
     * <code>repeated uint32 Port = 4;</code>
     */
    public int getPortCount() {
      return port_.size();
    }
    /**
     * <code>repeated uint32 Port = 4;</code>
     */
    public int getPort(int index) {
      return port_.get(index);
    }

    // optional uint32 PortHandle = 5;
    public static final int PORTHANDLE_FIELD_NUMBER = 5;
    private int portHandle_;
    /**
     * <code>optional uint32 PortHandle = 5;</code>
     */
    public boolean hasPortHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 PortHandle = 5;</code>
     */
    public int getPortHandle() {
      return portHandle_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      carrierAddr_ = java.util.Collections.emptyList();
      port_ = java.util.Collections.emptyList();
      portHandle_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltASyncApplyPortAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyPortAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyPortAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCarrierAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (carrierAddrBuilder_ == null) {
          carrierAddr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          carrierAddrBuilder_.clear();
        }
        port_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        portHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyPortAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (carrierAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            carrierAddr_ = java.util.Collections.unmodifiableList(carrierAddr_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.carrierAddr_ = carrierAddr_;
        } else {
          result.carrierAddr_ = carrierAddrBuilder_.build();
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          port_ = java.util.Collections.unmodifiableList(port_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.portHandle_ = portHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;
      private java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr> carrierAddr_ =
        java.util.Collections.emptyList();
      private void ensureCarrierAddrIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          carrierAddr_ = new java.util.ArrayList<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr>(carrierAddr_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddrOrBuilder> carrierAddrBuilder_;

      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr> getCarrierAddrList() {
        if (carrierAddrBuilder_ == null) {
          return java.util.Collections.unmodifiableList(carrierAddr_);
        } else {
          return carrierAddrBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public int getCarrierAddrCount() {
        if (carrierAddrBuilder_ == null) {
          return carrierAddr_.size();
        } else {
          return carrierAddrBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr getCarrierAddr(int index) {
        if (carrierAddrBuilder_ == null) {
          return carrierAddr_.get(index);
        } else {
          return carrierAddrBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public Builder setCarrierAddr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr value) {
        if (carrierAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarrierAddrIsMutable();
          carrierAddr_.set(index, value);
          onChanged();
        } else {
          carrierAddrBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public Builder setCarrierAddr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.Builder builderForValue) {
        if (carrierAddrBuilder_ == null) {
          ensureCarrierAddrIsMutable();
          carrierAddr_.set(index, builderForValue.build());
          onChanged();
        } else {
          carrierAddrBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public Builder addCarrierAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr value) {
        if (carrierAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarrierAddrIsMutable();
          carrierAddr_.add(value);
          onChanged();
        } else {
          carrierAddrBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public Builder addCarrierAddr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr value) {
        if (carrierAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarrierAddrIsMutable();
          carrierAddr_.add(index, value);
          onChanged();
        } else {
          carrierAddrBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public Builder addCarrierAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.Builder builderForValue) {
        if (carrierAddrBuilder_ == null) {
          ensureCarrierAddrIsMutable();
          carrierAddr_.add(builderForValue.build());
          onChanged();
        } else {
          carrierAddrBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public Builder addCarrierAddr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.Builder builderForValue) {
        if (carrierAddrBuilder_ == null) {
          ensureCarrierAddrIsMutable();
          carrierAddr_.add(index, builderForValue.build());
          onChanged();
        } else {
          carrierAddrBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public Builder addAllCarrierAddr(
          java.lang.Iterable<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr> values) {
        if (carrierAddrBuilder_ == null) {
          ensureCarrierAddrIsMutable();
          super.addAll(values, carrierAddr_);
          onChanged();
        } else {
          carrierAddrBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public Builder clearCarrierAddr() {
        if (carrierAddrBuilder_ == null) {
          carrierAddr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          carrierAddrBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public Builder removeCarrierAddr(int index) {
        if (carrierAddrBuilder_ == null) {
          ensureCarrierAddrIsMutable();
          carrierAddr_.remove(index);
          onChanged();
        } else {
          carrierAddrBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.Builder getCarrierAddrBuilder(
          int index) {
        return getCarrierAddrFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddrOrBuilder getCarrierAddrOrBuilder(
          int index) {
        if (carrierAddrBuilder_ == null) {
          return carrierAddr_.get(index);  } else {
          return carrierAddrBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddrOrBuilder> 
           getCarrierAddrOrBuilderList() {
        if (carrierAddrBuilder_ != null) {
          return carrierAddrBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(carrierAddr_);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.Builder addCarrierAddrBuilder() {
        return getCarrierAddrFieldBuilder().addBuilder(
            com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.getDefaultInstance());
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.Builder addCarrierAddrBuilder(
          int index) {
        return getCarrierAddrFieldBuilder().addBuilder(
            index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.getDefaultInstance());
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAddr CarrierAddr = 3;</code>
       */
      public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.Builder> 
           getCarrierAddrBuilderList() {
        return getCarrierAddrFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddrOrBuilder> 
          getCarrierAddrFieldBuilder() {
        if (carrierAddrBuilder_ == null) {
          carrierAddrBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAddrOrBuilder>(
                  carrierAddr_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          carrierAddr_ = null;
        }
        return carrierAddrBuilder_;
      }

      // repeated uint32 Port = 4;
      private java.util.List<java.lang.Integer> port_ = java.util.Collections.emptyList();
      private void ensurePortIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          port_ = new java.util.ArrayList<java.lang.Integer>(port_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated uint32 Port = 4;</code>
       */
      public java.util.List<java.lang.Integer>
          getPortList() {
        return java.util.Collections.unmodifiableList(port_);
      }
      /**
       * <code>repeated uint32 Port = 4;</code>
       */
      public int getPortCount() {
        return port_.size();
      }
      /**
       * <code>repeated uint32 Port = 4;</code>
       */
      public int getPort(int index) {
        return port_.get(index);
      }
      /**
       * <code>repeated uint32 Port = 4;</code>
       */
      public Builder setPort(
          int index, int value) {
        ensurePortIsMutable();
        port_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 Port = 4;</code>
       */
      public Builder addPort(int value) {
        ensurePortIsMutable();
        port_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 Port = 4;</code>
       */
      public Builder addAllPort(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePortIsMutable();
        super.addAll(values, port_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 Port = 4;</code>
       */
      public Builder clearPort() {
        port_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional uint32 PortHandle = 5;
      private int portHandle_ ;
      /**
       * <code>optional uint32 PortHandle = 5;</code>
       */
      public boolean hasPortHandle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 PortHandle = 5;</code>
       */
      public int getPortHandle() {
        return portHandle_;
      }
      /**
       * <code>optional uint32 PortHandle = 5;</code>
       */
      public Builder setPortHandle(int value) {
        bitField0_ |= 0x00000010;
        portHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortHandle = 5;</code>
       */
      public Builder clearPortHandle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        portHandle_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltASyncApplyPortAck)
    }

    static {
      defaultInstance = new DssCltASyncApplyPortAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltASyncApplyPortAck)
  }

  public interface DssCltASyncApplyPortNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string ForceWorkerIp = 2;
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    boolean hasForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    java.lang.String getForceWorkerIp();
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    com.google.protobuf.ByteString
        getForceWorkerIpBytes();

    // optional string MeetingHandle = 3;
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional uint32 PortNum = 4;
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    boolean hasPortNum();
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    int getPortNum();

    // optional uint32 BandWidth = 5;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    boolean hasBandWidth();
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    int getBandWidth();

    // optional bool ForceConsPort = 6;
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    boolean hasForceConsPort();
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    boolean getForceConsPort();

    // repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> 
        getCarrierAttrList();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr getCarrierAttr(int index);
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    int getCarrierAttrCount();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder> 
        getCarrierAttrOrBuilderList();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder getCarrierAttrOrBuilder(
        int index);

    // optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;</code>
     */
    boolean hasResultCode();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.EDssApplyPortResultCode getResultCode();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltASyncApplyPortNack}
   */
  public static final class DssCltASyncApplyPortNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltASyncApplyPortNackOrBuilder {
    // Use DssCltASyncApplyPortNack.newBuilder() to construct.
    private DssCltASyncApplyPortNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltASyncApplyPortNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltASyncApplyPortNack defaultInstance;
    public static DssCltASyncApplyPortNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltASyncApplyPortNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyPortNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyPortNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltASyncApplyPortNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltASyncApplyPortNack>() {
      public DssCltASyncApplyPortNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltASyncApplyPortNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string ForceWorkerIp = 2;
    public static final int FORCEWORKERIP_FIELD_NUMBER = 2;
    private java.lang.Object forceWorkerIp_;
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public boolean hasForceWorkerIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public java.lang.String getForceWorkerIp() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          forceWorkerIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ForceWorkerIp = 2;</code>
     *
     * <pre>
     *force to allocate port on specified worker, default negative-0
     * </pre>
     */
    public com.google.protobuf.ByteString
        getForceWorkerIpBytes() {
      java.lang.Object ref = forceWorkerIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        forceWorkerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string MeetingHandle = 3;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 3;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 PortNum = 4;
    public static final int PORTNUM_FIELD_NUMBER = 4;
    private int portNum_;
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    public boolean hasPortNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 PortNum = 4;</code>
     */
    public int getPortNum() {
      return portNum_;
    }

    // optional uint32 BandWidth = 5;
    public static final int BANDWIDTH_FIELD_NUMBER = 5;
    private int bandWidth_;
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    public boolean hasBandWidth() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 BandWidth = 5;</code>
     */
    public int getBandWidth() {
      return bandWidth_;
    }

    // optional bool ForceConsPort = 6;
    public static final int FORCECONSPORT_FIELD_NUMBER = 6;
    private boolean forceConsPort_;
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    public boolean hasForceConsPort() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool ForceConsPort = 6;</code>
     */
    public boolean getForceConsPort() {
      return forceConsPort_;
    }

    // repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;
    public static final int CARRIERATTR_FIELD_NUMBER = 7;
    private java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> carrierAttr_;
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> getCarrierAttrList() {
      return carrierAttr_;
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    public java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder> 
        getCarrierAttrOrBuilderList() {
      return carrierAttr_;
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    public int getCarrierAttrCount() {
      return carrierAttr_.size();
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr getCarrierAttr(int index) {
      return carrierAttr_.get(index);
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder getCarrierAttrOrBuilder(
        int index) {
      return carrierAttr_.get(index);
    }

    // optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;
    public static final int RESULTCODE_FIELD_NUMBER = 8;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.EDssApplyPortResultCode resultCode_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;</code>
     */
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.EDssApplyPortResultCode getResultCode() {
      return resultCode_;
    }

    private void initFields() {
      clientId_ = 0;
      forceWorkerIp_ = "";
      meetingHandle_ = "";
      portNum_ = 0;
      bandWidth_ = 0;
      forceConsPort_ = false;
      carrierAttr_ = java.util.Collections.emptyList();
      resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssApplyPortResultCode.eApplyPortSucceed;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltASyncApplyPortNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyPortNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyPortNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCarrierAttrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        forceWorkerIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        portNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bandWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        forceConsPort_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (carrierAttrBuilder_ == null) {
          carrierAttr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          carrierAttrBuilder_.clear();
        }
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssApplyPortResultCode.eApplyPortSucceed;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyPortNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncApplyPortNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.forceWorkerIp_ = forceWorkerIp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.portNum_ = portNum_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bandWidth_ = bandWidth_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.forceConsPort_ = forceConsPort_;
        if (carrierAttrBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            carrierAttr_ = java.util.Collections.unmodifiableList(carrierAttr_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.carrierAttr_ = carrierAttr_;
        } else {
          result.carrierAttr_ = carrierAttrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.resultCode_ = resultCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string ForceWorkerIp = 2;
      private java.lang.Object forceWorkerIp_ = "";
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public boolean hasForceWorkerIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public java.lang.String getForceWorkerIp() {
        java.lang.Object ref = forceWorkerIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          forceWorkerIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public com.google.protobuf.ByteString
          getForceWorkerIpBytes() {
        java.lang.Object ref = forceWorkerIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          forceWorkerIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder setForceWorkerIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder clearForceWorkerIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        forceWorkerIp_ = getDefaultInstance().getForceWorkerIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ForceWorkerIp = 2;</code>
       *
       * <pre>
       *force to allocate port on specified worker, default negative-0
       * </pre>
       */
      public Builder setForceWorkerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        forceWorkerIp_ = value;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 3;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional uint32 PortNum = 4;
      private int portNum_ ;
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public boolean hasPortNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public int getPortNum() {
        return portNum_;
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public Builder setPortNum(int value) {
        bitField0_ |= 0x00000008;
        portNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortNum = 4;</code>
       */
      public Builder clearPortNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        portNum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 BandWidth = 5;
      private int bandWidth_ ;
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public boolean hasBandWidth() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public int getBandWidth() {
        return bandWidth_;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public Builder setBandWidth(int value) {
        bitField0_ |= 0x00000010;
        bandWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BandWidth = 5;</code>
       */
      public Builder clearBandWidth() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bandWidth_ = 0;
        onChanged();
        return this;
      }

      // optional bool ForceConsPort = 6;
      private boolean forceConsPort_ ;
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public boolean hasForceConsPort() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public boolean getForceConsPort() {
        return forceConsPort_;
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public Builder setForceConsPort(boolean value) {
        bitField0_ |= 0x00000020;
        forceConsPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ForceConsPort = 6;</code>
       */
      public Builder clearForceConsPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        forceConsPort_ = false;
        onChanged();
        return this;
      }

      // repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;
      private java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> carrierAttr_ =
        java.util.Collections.emptyList();
      private void ensureCarrierAttrIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          carrierAttr_ = new java.util.ArrayList<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr>(carrierAttr_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder> carrierAttrBuilder_;

      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> getCarrierAttrList() {
        if (carrierAttrBuilder_ == null) {
          return java.util.Collections.unmodifiableList(carrierAttr_);
        } else {
          return carrierAttrBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public int getCarrierAttrCount() {
        if (carrierAttrBuilder_ == null) {
          return carrierAttr_.size();
        } else {
          return carrierAttrBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr getCarrierAttr(int index) {
        if (carrierAttrBuilder_ == null) {
          return carrierAttr_.get(index);
        } else {
          return carrierAttrBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder setCarrierAttr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr value) {
        if (carrierAttrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarrierAttrIsMutable();
          carrierAttr_.set(index, value);
          onChanged();
        } else {
          carrierAttrBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder setCarrierAttr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder builderForValue) {
        if (carrierAttrBuilder_ == null) {
          ensureCarrierAttrIsMutable();
          carrierAttr_.set(index, builderForValue.build());
          onChanged();
        } else {
          carrierAttrBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder addCarrierAttr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr value) {
        if (carrierAttrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarrierAttrIsMutable();
          carrierAttr_.add(value);
          onChanged();
        } else {
          carrierAttrBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder addCarrierAttr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr value) {
        if (carrierAttrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCarrierAttrIsMutable();
          carrierAttr_.add(index, value);
          onChanged();
        } else {
          carrierAttrBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder addCarrierAttr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder builderForValue) {
        if (carrierAttrBuilder_ == null) {
          ensureCarrierAttrIsMutable();
          carrierAttr_.add(builderForValue.build());
          onChanged();
        } else {
          carrierAttrBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder addCarrierAttr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder builderForValue) {
        if (carrierAttrBuilder_ == null) {
          ensureCarrierAttrIsMutable();
          carrierAttr_.add(index, builderForValue.build());
          onChanged();
        } else {
          carrierAttrBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder addAllCarrierAttr(
          java.lang.Iterable<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr> values) {
        if (carrierAttrBuilder_ == null) {
          ensureCarrierAttrIsMutable();
          super.addAll(values, carrierAttr_);
          onChanged();
        } else {
          carrierAttrBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder clearCarrierAttr() {
        if (carrierAttrBuilder_ == null) {
          carrierAttr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          carrierAttrBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public Builder removeCarrierAttr(int index) {
        if (carrierAttrBuilder_ == null) {
          ensureCarrierAttrIsMutable();
          carrierAttr_.remove(index);
          onChanged();
        } else {
          carrierAttrBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder getCarrierAttrBuilder(
          int index) {
        return getCarrierAttrFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder getCarrierAttrOrBuilder(
          int index) {
        if (carrierAttrBuilder_ == null) {
          return carrierAttr_.get(index);  } else {
          return carrierAttrBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder> 
           getCarrierAttrOrBuilderList() {
        if (carrierAttrBuilder_ != null) {
          return carrierAttrBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(carrierAttr_);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder addCarrierAttrBuilder() {
        return getCarrierAttrFieldBuilder().addBuilder(
            com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.getDefaultInstance());
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder addCarrierAttrBuilder(
          int index) {
        return getCarrierAttrFieldBuilder().addBuilder(
            index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.getDefaultInstance());
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssCarrierAttr CarrierAttr = 7;</code>
       */
      public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder> 
           getCarrierAttrBuilderList() {
        return getCarrierAttrFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder> 
          getCarrierAttrFieldBuilder() {
        if (carrierAttrBuilder_ == null) {
          carrierAttrBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCarrierAttrOrBuilder>(
                  carrierAttr_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          carrierAttr_ = null;
        }
        return carrierAttrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.EDssApplyPortResultCode resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssApplyPortResultCode.eApplyPortSucceed;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;</code>
       */
      public boolean hasResultCode() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.EDssApplyPortResultCode getResultCode() {
        return resultCode_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;</code>
       */
      public Builder setResultCode(com.kedacom.ops.flink.etl.proto.Dssevenum.EDssApplyPortResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        resultCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssApplyPortResultCode ResultCode = 8;</code>
       */
      public Builder clearResultCode() {
        bitField0_ = (bitField0_ & ~0x00000080);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssApplyPortResultCode.eApplyPortSucceed;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltASyncApplyPortNack)
    }

    static {
      defaultInstance = new DssCltASyncApplyPortNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltASyncApplyPortNack)
  }

  public interface CltDssReleasePortReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string Meetinghandle = 2;
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    boolean hasMeetinghandle();
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    java.lang.String getMeetinghandle();
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetinghandleBytes();

    // optional uint32 PortHandle = 3;
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    boolean hasPortHandle();
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    int getPortHandle();

    // optional uint32 ClientTick = 4;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    int getClientTick();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssReleasePortReq}
   */
  public static final class CltDssReleasePortReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssReleasePortReqOrBuilder {
    // Use CltDssReleasePortReq.newBuilder() to construct.
    private CltDssReleasePortReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssReleasePortReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssReleasePortReq defaultInstance;
    public static CltDssReleasePortReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssReleasePortReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePortReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePortReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssReleasePortReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssReleasePortReq>() {
      public CltDssReleasePortReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssReleasePortReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string Meetinghandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetinghandle_;
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    public boolean hasMeetinghandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    public java.lang.String getMeetinghandle() {
      java.lang.Object ref = meetinghandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetinghandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetinghandleBytes() {
      java.lang.Object ref = meetinghandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetinghandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 PortHandle = 3;
    public static final int PORTHANDLE_FIELD_NUMBER = 3;
    private int portHandle_;
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    public boolean hasPortHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    public int getPortHandle() {
      return portHandle_;
    }

    // optional uint32 ClientTick = 4;
    public static final int CLIENTTICK_FIELD_NUMBER = 4;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    private void initFields() {
      clientId_ = 0;
      meetinghandle_ = "";
      portHandle_ = 0;
      clientTick_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssReleasePortReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePortReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePortReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetinghandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        portHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePortReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetinghandle_ = meetinghandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.portHandle_ = portHandle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clientTick_ = clientTick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string Meetinghandle = 2;
      private java.lang.Object meetinghandle_ = "";
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public boolean hasMeetinghandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public java.lang.String getMeetinghandle() {
        java.lang.Object ref = meetinghandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetinghandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetinghandleBytes() {
        java.lang.Object ref = meetinghandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetinghandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public Builder setMeetinghandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetinghandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public Builder clearMeetinghandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetinghandle_ = getDefaultInstance().getMeetinghandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public Builder setMeetinghandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetinghandle_ = value;
        onChanged();
        return this;
      }

      // optional uint32 PortHandle = 3;
      private int portHandle_ ;
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public boolean hasPortHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public int getPortHandle() {
        return portHandle_;
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public Builder setPortHandle(int value) {
        bitField0_ |= 0x00000004;
        portHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public Builder clearPortHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        portHandle_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 4;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000008;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssReleasePortReq)
    }

    static {
      defaultInstance = new CltDssReleasePortReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssReleasePortReq)
  }

  public interface DssCltReleasePortAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string Meetinghandle = 2;
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    boolean hasMeetinghandle();
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    java.lang.String getMeetinghandle();
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetinghandleBytes();

    // optional uint32 PortHandle = 3;
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    boolean hasPortHandle();
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    int getPortHandle();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltReleasePortAck}
   */
  public static final class DssCltReleasePortAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltReleasePortAckOrBuilder {
    // Use DssCltReleasePortAck.newBuilder() to construct.
    private DssCltReleasePortAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltReleasePortAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltReleasePortAck defaultInstance;
    public static DssCltReleasePortAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltReleasePortAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltReleasePortAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltReleasePortAck>() {
      public DssCltReleasePortAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltReleasePortAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string Meetinghandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetinghandle_;
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    public boolean hasMeetinghandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    public java.lang.String getMeetinghandle() {
      java.lang.Object ref = meetinghandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetinghandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetinghandleBytes() {
      java.lang.Object ref = meetinghandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetinghandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 PortHandle = 3;
    public static final int PORTHANDLE_FIELD_NUMBER = 3;
    private int portHandle_;
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    public boolean hasPortHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    public int getPortHandle() {
      return portHandle_;
    }

    private void initFields() {
      clientId_ = 0;
      meetinghandle_ = "";
      portHandle_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltReleasePortAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetinghandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        portHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetinghandle_ = meetinghandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.portHandle_ = portHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string Meetinghandle = 2;
      private java.lang.Object meetinghandle_ = "";
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public boolean hasMeetinghandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public java.lang.String getMeetinghandle() {
        java.lang.Object ref = meetinghandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetinghandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetinghandleBytes() {
        java.lang.Object ref = meetinghandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetinghandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public Builder setMeetinghandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetinghandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public Builder clearMeetinghandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetinghandle_ = getDefaultInstance().getMeetinghandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public Builder setMeetinghandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetinghandle_ = value;
        onChanged();
        return this;
      }

      // optional uint32 PortHandle = 3;
      private int portHandle_ ;
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public boolean hasPortHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public int getPortHandle() {
        return portHandle_;
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public Builder setPortHandle(int value) {
        bitField0_ |= 0x00000004;
        portHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public Builder clearPortHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        portHandle_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltReleasePortAck)
    }

    static {
      defaultInstance = new DssCltReleasePortAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltReleasePortAck)
  }

  public interface DssCltReleasePortNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string Meetinghandle = 2;
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    boolean hasMeetinghandle();
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    java.lang.String getMeetinghandle();
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetinghandleBytes();

    // optional uint32 PortHandle = 3;
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    boolean hasPortHandle();
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    int getPortHandle();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltReleasePortNack}
   */
  public static final class DssCltReleasePortNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltReleasePortNackOrBuilder {
    // Use DssCltReleasePortNack.newBuilder() to construct.
    private DssCltReleasePortNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltReleasePortNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltReleasePortNack defaultInstance;
    public static DssCltReleasePortNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltReleasePortNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltReleasePortNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltReleasePortNack>() {
      public DssCltReleasePortNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltReleasePortNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string Meetinghandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetinghandle_;
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    public boolean hasMeetinghandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    public java.lang.String getMeetinghandle() {
      java.lang.Object ref = meetinghandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetinghandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetinghandleBytes() {
      java.lang.Object ref = meetinghandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetinghandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 PortHandle = 3;
    public static final int PORTHANDLE_FIELD_NUMBER = 3;
    private int portHandle_;
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    public boolean hasPortHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    public int getPortHandle() {
      return portHandle_;
    }

    private void initFields() {
      clientId_ = 0;
      meetinghandle_ = "";
      portHandle_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltReleasePortNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetinghandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        portHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetinghandle_ = meetinghandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.portHandle_ = portHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string Meetinghandle = 2;
      private java.lang.Object meetinghandle_ = "";
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public boolean hasMeetinghandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public java.lang.String getMeetinghandle() {
        java.lang.Object ref = meetinghandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetinghandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetinghandleBytes() {
        java.lang.Object ref = meetinghandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetinghandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public Builder setMeetinghandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetinghandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public Builder clearMeetinghandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetinghandle_ = getDefaultInstance().getMeetinghandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public Builder setMeetinghandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetinghandle_ = value;
        onChanged();
        return this;
      }

      // optional uint32 PortHandle = 3;
      private int portHandle_ ;
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public boolean hasPortHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public int getPortHandle() {
        return portHandle_;
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public Builder setPortHandle(int value) {
        bitField0_ |= 0x00000004;
        portHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public Builder clearPortHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        portHandle_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltReleasePortNack)
    }

    static {
      defaultInstance = new DssCltReleasePortNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltReleasePortNack)
  }

  public interface CltDssReleasePartPortReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string Meetinghandle = 2;
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    boolean hasMeetinghandle();
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    java.lang.String getMeetinghandle();
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetinghandleBytes();

    // optional uint32 PortHandle = 3;
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    boolean hasPortHandle();
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    int getPortHandle();

    // optional uint32 ClientTick = 4;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    int getClientTick();

    // repeated uint32 Port = 5;
    /**
     * <code>repeated uint32 Port = 5;</code>
     */
    java.util.List<java.lang.Integer> getPortList();
    /**
     * <code>repeated uint32 Port = 5;</code>
     */
    int getPortCount();
    /**
     * <code>repeated uint32 Port = 5;</code>
     */
    int getPort(int index);
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssReleasePartPortReq}
   */
  public static final class CltDssReleasePartPortReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssReleasePartPortReqOrBuilder {
    // Use CltDssReleasePartPortReq.newBuilder() to construct.
    private CltDssReleasePartPortReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssReleasePartPortReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssReleasePartPortReq defaultInstance;
    public static CltDssReleasePartPortReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssReleasePartPortReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePartPortReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePartPortReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssReleasePartPortReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssReleasePartPortReq>() {
      public CltDssReleasePartPortReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssReleasePartPortReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string Meetinghandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetinghandle_;
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    public boolean hasMeetinghandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    public java.lang.String getMeetinghandle() {
      java.lang.Object ref = meetinghandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetinghandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetinghandleBytes() {
      java.lang.Object ref = meetinghandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetinghandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 PortHandle = 3;
    public static final int PORTHANDLE_FIELD_NUMBER = 3;
    private int portHandle_;
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    public boolean hasPortHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    public int getPortHandle() {
      return portHandle_;
    }

    // optional uint32 ClientTick = 4;
    public static final int CLIENTTICK_FIELD_NUMBER = 4;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    // repeated uint32 Port = 5;
    public static final int PORT_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> port_;
    /**
     * <code>repeated uint32 Port = 5;</code>
     */
    public java.util.List<java.lang.Integer>
        getPortList() {
      return port_;
    }
    /**
     * <code>repeated uint32 Port = 5;</code>
     */
    public int getPortCount() {
      return port_.size();
    }
    /**
     * <code>repeated uint32 Port = 5;</code>
     */
    public int getPort(int index) {
      return port_.get(index);
    }

    private void initFields() {
      clientId_ = 0;
      meetinghandle_ = "";
      portHandle_ = 0;
      clientTick_ = 0;
      port_ = java.util.Collections.emptyList();
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssReleasePartPortReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePartPortReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePartPortReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetinghandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        portHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        port_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePartPortReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePartPortReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetinghandle_ = meetinghandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.portHandle_ = portHandle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clientTick_ = clientTick_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          port_ = java.util.Collections.unmodifiableList(port_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.port_ = port_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string Meetinghandle = 2;
      private java.lang.Object meetinghandle_ = "";
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public boolean hasMeetinghandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public java.lang.String getMeetinghandle() {
        java.lang.Object ref = meetinghandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetinghandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetinghandleBytes() {
        java.lang.Object ref = meetinghandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetinghandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public Builder setMeetinghandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetinghandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public Builder clearMeetinghandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetinghandle_ = getDefaultInstance().getMeetinghandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public Builder setMeetinghandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetinghandle_ = value;
        onChanged();
        return this;
      }

      // optional uint32 PortHandle = 3;
      private int portHandle_ ;
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public boolean hasPortHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public int getPortHandle() {
        return portHandle_;
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public Builder setPortHandle(int value) {
        bitField0_ |= 0x00000004;
        portHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public Builder clearPortHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        portHandle_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 4;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000008;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // repeated uint32 Port = 5;
      private java.util.List<java.lang.Integer> port_ = java.util.Collections.emptyList();
      private void ensurePortIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          port_ = new java.util.ArrayList<java.lang.Integer>(port_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated uint32 Port = 5;</code>
       */
      public java.util.List<java.lang.Integer>
          getPortList() {
        return java.util.Collections.unmodifiableList(port_);
      }
      /**
       * <code>repeated uint32 Port = 5;</code>
       */
      public int getPortCount() {
        return port_.size();
      }
      /**
       * <code>repeated uint32 Port = 5;</code>
       */
      public int getPort(int index) {
        return port_.get(index);
      }
      /**
       * <code>repeated uint32 Port = 5;</code>
       */
      public Builder setPort(
          int index, int value) {
        ensurePortIsMutable();
        port_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 Port = 5;</code>
       */
      public Builder addPort(int value) {
        ensurePortIsMutable();
        port_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 Port = 5;</code>
       */
      public Builder addAllPort(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePortIsMutable();
        super.addAll(values, port_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 Port = 5;</code>
       */
      public Builder clearPort() {
        port_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssReleasePartPortReq)
    }

    static {
      defaultInstance = new CltDssReleasePartPortReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssReleasePartPortReq)
  }

  public interface DssCltReleasePartPortAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string Meetinghandle = 2;
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    boolean hasMeetinghandle();
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    java.lang.String getMeetinghandle();
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetinghandleBytes();

    // optional uint32 PortHandle = 3;
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    boolean hasPortHandle();
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    int getPortHandle();

    // optional uint32 StartPort = 4;
    /**
     * <code>optional uint32 StartPort = 4;</code>
     */
    boolean hasStartPort();
    /**
     * <code>optional uint32 StartPort = 4;</code>
     */
    int getStartPort();

    // optional uint32 ReleasePortNumber = 5;
    /**
     * <code>optional uint32 ReleasePortNumber = 5;</code>
     */
    boolean hasReleasePortNumber();
    /**
     * <code>optional uint32 ReleasePortNumber = 5;</code>
     */
    int getReleasePortNumber();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltReleasePartPortAck}
   */
  public static final class DssCltReleasePartPortAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltReleasePartPortAckOrBuilder {
    // Use DssCltReleasePartPortAck.newBuilder() to construct.
    private DssCltReleasePartPortAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltReleasePartPortAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltReleasePartPortAck defaultInstance;
    public static DssCltReleasePartPortAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltReleasePartPortAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePartPortAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePartPortAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltReleasePartPortAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltReleasePartPortAck>() {
      public DssCltReleasePartPortAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltReleasePartPortAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string Meetinghandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetinghandle_;
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    public boolean hasMeetinghandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    public java.lang.String getMeetinghandle() {
      java.lang.Object ref = meetinghandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetinghandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetinghandleBytes() {
      java.lang.Object ref = meetinghandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetinghandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 PortHandle = 3;
    public static final int PORTHANDLE_FIELD_NUMBER = 3;
    private int portHandle_;
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    public boolean hasPortHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    public int getPortHandle() {
      return portHandle_;
    }

    // optional uint32 StartPort = 4;
    public static final int STARTPORT_FIELD_NUMBER = 4;
    private int startPort_;
    /**
     * <code>optional uint32 StartPort = 4;</code>
     */
    public boolean hasStartPort() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 StartPort = 4;</code>
     */
    public int getStartPort() {
      return startPort_;
    }

    // optional uint32 ReleasePortNumber = 5;
    public static final int RELEASEPORTNUMBER_FIELD_NUMBER = 5;
    private int releasePortNumber_;
    /**
     * <code>optional uint32 ReleasePortNumber = 5;</code>
     */
    public boolean hasReleasePortNumber() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 ReleasePortNumber = 5;</code>
     */
    public int getReleasePortNumber() {
      return releasePortNumber_;
    }

    private void initFields() {
      clientId_ = 0;
      meetinghandle_ = "";
      portHandle_ = 0;
      startPort_ = 0;
      releasePortNumber_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltReleasePartPortAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePartPortAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePartPortAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetinghandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        portHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        startPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        releasePortNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePartPortAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetinghandle_ = meetinghandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.portHandle_ = portHandle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.startPort_ = startPort_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.releasePortNumber_ = releasePortNumber_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string Meetinghandle = 2;
      private java.lang.Object meetinghandle_ = "";
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public boolean hasMeetinghandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public java.lang.String getMeetinghandle() {
        java.lang.Object ref = meetinghandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetinghandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetinghandleBytes() {
        java.lang.Object ref = meetinghandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetinghandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public Builder setMeetinghandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetinghandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public Builder clearMeetinghandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetinghandle_ = getDefaultInstance().getMeetinghandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public Builder setMeetinghandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetinghandle_ = value;
        onChanged();
        return this;
      }

      // optional uint32 PortHandle = 3;
      private int portHandle_ ;
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public boolean hasPortHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public int getPortHandle() {
        return portHandle_;
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public Builder setPortHandle(int value) {
        bitField0_ |= 0x00000004;
        portHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public Builder clearPortHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        portHandle_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 StartPort = 4;
      private int startPort_ ;
      /**
       * <code>optional uint32 StartPort = 4;</code>
       */
      public boolean hasStartPort() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 StartPort = 4;</code>
       */
      public int getStartPort() {
        return startPort_;
      }
      /**
       * <code>optional uint32 StartPort = 4;</code>
       */
      public Builder setStartPort(int value) {
        bitField0_ |= 0x00000008;
        startPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 StartPort = 4;</code>
       */
      public Builder clearStartPort() {
        bitField0_ = (bitField0_ & ~0x00000008);
        startPort_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ReleasePortNumber = 5;
      private int releasePortNumber_ ;
      /**
       * <code>optional uint32 ReleasePortNumber = 5;</code>
       */
      public boolean hasReleasePortNumber() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 ReleasePortNumber = 5;</code>
       */
      public int getReleasePortNumber() {
        return releasePortNumber_;
      }
      /**
       * <code>optional uint32 ReleasePortNumber = 5;</code>
       */
      public Builder setReleasePortNumber(int value) {
        bitField0_ |= 0x00000010;
        releasePortNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ReleasePortNumber = 5;</code>
       */
      public Builder clearReleasePortNumber() {
        bitField0_ = (bitField0_ & ~0x00000010);
        releasePortNumber_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltReleasePartPortAck)
    }

    static {
      defaultInstance = new DssCltReleasePartPortAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltReleasePartPortAck)
  }

  public interface DssCltReleasePartPortNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string Meetinghandle = 2;
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    boolean hasMeetinghandle();
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    java.lang.String getMeetinghandle();
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetinghandleBytes();

    // optional uint32 PortHandle = 3;
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    boolean hasPortHandle();
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    int getPortHandle();

    // optional uint32 StartPort = 4;
    /**
     * <code>optional uint32 StartPort = 4;</code>
     */
    boolean hasStartPort();
    /**
     * <code>optional uint32 StartPort = 4;</code>
     */
    int getStartPort();

    // optional uint32 ReleasePortNumber = 5;
    /**
     * <code>optional uint32 ReleasePortNumber = 5;</code>
     */
    boolean hasReleasePortNumber();
    /**
     * <code>optional uint32 ReleasePortNumber = 5;</code>
     */
    int getReleasePortNumber();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltReleasePartPortNack}
   */
  public static final class DssCltReleasePartPortNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltReleasePartPortNackOrBuilder {
    // Use DssCltReleasePartPortNack.newBuilder() to construct.
    private DssCltReleasePartPortNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltReleasePartPortNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltReleasePartPortNack defaultInstance;
    public static DssCltReleasePartPortNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltReleasePartPortNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePartPortNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePartPortNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltReleasePartPortNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltReleasePartPortNack>() {
      public DssCltReleasePartPortNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltReleasePartPortNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string Meetinghandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetinghandle_;
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    public boolean hasMeetinghandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    public java.lang.String getMeetinghandle() {
      java.lang.Object ref = meetinghandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetinghandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string Meetinghandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetinghandleBytes() {
      java.lang.Object ref = meetinghandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetinghandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 PortHandle = 3;
    public static final int PORTHANDLE_FIELD_NUMBER = 3;
    private int portHandle_;
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    public boolean hasPortHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 PortHandle = 3;</code>
     */
    public int getPortHandle() {
      return portHandle_;
    }

    // optional uint32 StartPort = 4;
    public static final int STARTPORT_FIELD_NUMBER = 4;
    private int startPort_;
    /**
     * <code>optional uint32 StartPort = 4;</code>
     */
    public boolean hasStartPort() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 StartPort = 4;</code>
     */
    public int getStartPort() {
      return startPort_;
    }

    // optional uint32 ReleasePortNumber = 5;
    public static final int RELEASEPORTNUMBER_FIELD_NUMBER = 5;
    private int releasePortNumber_;
    /**
     * <code>optional uint32 ReleasePortNumber = 5;</code>
     */
    public boolean hasReleasePortNumber() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 ReleasePortNumber = 5;</code>
     */
    public int getReleasePortNumber() {
      return releasePortNumber_;
    }

    private void initFields() {
      clientId_ = 0;
      meetinghandle_ = "";
      portHandle_ = 0;
      startPort_ = 0;
      releasePortNumber_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltReleasePartPortNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePartPortNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePartPortNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetinghandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        portHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        startPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        releasePortNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePartPortNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePartPortNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetinghandle_ = meetinghandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.portHandle_ = portHandle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.startPort_ = startPort_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.releasePortNumber_ = releasePortNumber_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string Meetinghandle = 2;
      private java.lang.Object meetinghandle_ = "";
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public boolean hasMeetinghandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public java.lang.String getMeetinghandle() {
        java.lang.Object ref = meetinghandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetinghandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetinghandleBytes() {
        java.lang.Object ref = meetinghandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetinghandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public Builder setMeetinghandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetinghandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public Builder clearMeetinghandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetinghandle_ = getDefaultInstance().getMeetinghandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string Meetinghandle = 2;</code>
       */
      public Builder setMeetinghandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetinghandle_ = value;
        onChanged();
        return this;
      }

      // optional uint32 PortHandle = 3;
      private int portHandle_ ;
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public boolean hasPortHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public int getPortHandle() {
        return portHandle_;
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public Builder setPortHandle(int value) {
        bitField0_ |= 0x00000004;
        portHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortHandle = 3;</code>
       */
      public Builder clearPortHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        portHandle_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 StartPort = 4;
      private int startPort_ ;
      /**
       * <code>optional uint32 StartPort = 4;</code>
       */
      public boolean hasStartPort() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 StartPort = 4;</code>
       */
      public int getStartPort() {
        return startPort_;
      }
      /**
       * <code>optional uint32 StartPort = 4;</code>
       */
      public Builder setStartPort(int value) {
        bitField0_ |= 0x00000008;
        startPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 StartPort = 4;</code>
       */
      public Builder clearStartPort() {
        bitField0_ = (bitField0_ & ~0x00000008);
        startPort_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ReleasePortNumber = 5;
      private int releasePortNumber_ ;
      /**
       * <code>optional uint32 ReleasePortNumber = 5;</code>
       */
      public boolean hasReleasePortNumber() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 ReleasePortNumber = 5;</code>
       */
      public int getReleasePortNumber() {
        return releasePortNumber_;
      }
      /**
       * <code>optional uint32 ReleasePortNumber = 5;</code>
       */
      public Builder setReleasePortNumber(int value) {
        bitField0_ |= 0x00000010;
        releasePortNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ReleasePortNumber = 5;</code>
       */
      public Builder clearReleasePortNumber() {
        bitField0_ = (bitField0_ & ~0x00000010);
        releasePortNumber_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltReleasePartPortNack)
    }

    static {
      defaultInstance = new DssCltReleasePartPortNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltReleasePartPortNack)
  }

  public interface CltDssSyncAddBridgeReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional bool ForceKeyFrame = 3;
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    boolean hasForceKeyFrame();
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    boolean getForceKeyFrame();

    // optional uint32 ClientTick = 4;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    int getClientTick();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssSyncAddBridgeReq}
   */
  public static final class CltDssSyncAddBridgeReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssSyncAddBridgeReqOrBuilder {
    // Use CltDssSyncAddBridgeReq.newBuilder() to construct.
    private CltDssSyncAddBridgeReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssSyncAddBridgeReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssSyncAddBridgeReq defaultInstance;
    public static CltDssSyncAddBridgeReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssSyncAddBridgeReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncAddBridgeReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncAddBridgeReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssSyncAddBridgeReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssSyncAddBridgeReq>() {
      public CltDssSyncAddBridgeReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssSyncAddBridgeReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool ForceKeyFrame = 3;
    public static final int FORCEKEYFRAME_FIELD_NUMBER = 3;
    private boolean forceKeyFrame_;
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    public boolean hasForceKeyFrame() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    public boolean getForceKeyFrame() {
      return forceKeyFrame_;
    }

    // optional uint32 ClientTick = 4;
    public static final int CLIENTTICK_FIELD_NUMBER = 4;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      forceKeyFrame_ = false;
      clientTick_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssSyncAddBridgeReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncAddBridgeReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncAddBridgeReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        forceKeyFrame_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncAddBridgeReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSyncAddBridgeReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.forceKeyFrame_ = forceKeyFrame_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clientTick_ = clientTick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional bool ForceKeyFrame = 3;
      private boolean forceKeyFrame_ ;
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public boolean hasForceKeyFrame() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public boolean getForceKeyFrame() {
        return forceKeyFrame_;
      }
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public Builder setForceKeyFrame(boolean value) {
        bitField0_ |= 0x00000004;
        forceKeyFrame_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public Builder clearForceKeyFrame() {
        bitField0_ = (bitField0_ & ~0x00000004);
        forceKeyFrame_ = false;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 4;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000008;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssSyncAddBridgeReq)
    }

    static {
      defaultInstance = new CltDssSyncAddBridgeReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssSyncAddBridgeReq)
  }

  public interface DssCltSyncAddBridgeAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional bool ForceKeyFrame = 3;
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    boolean hasForceKeyFrame();
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    boolean getForceKeyFrame();

    // optional uint32 BridgeHandle = 4;
    /**
     * <code>optional uint32 BridgeHandle = 4;</code>
     */
    boolean hasBridgeHandle();
    /**
     * <code>optional uint32 BridgeHandle = 4;</code>
     */
    int getBridgeHandle();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSyncAddBridgeAck}
   */
  public static final class DssCltSyncAddBridgeAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltSyncAddBridgeAckOrBuilder {
    // Use DssCltSyncAddBridgeAck.newBuilder() to construct.
    private DssCltSyncAddBridgeAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltSyncAddBridgeAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltSyncAddBridgeAck defaultInstance;
    public static DssCltSyncAddBridgeAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltSyncAddBridgeAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncAddBridgeAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncAddBridgeAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltSyncAddBridgeAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltSyncAddBridgeAck>() {
      public DssCltSyncAddBridgeAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltSyncAddBridgeAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool ForceKeyFrame = 3;
    public static final int FORCEKEYFRAME_FIELD_NUMBER = 3;
    private boolean forceKeyFrame_;
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    public boolean hasForceKeyFrame() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    public boolean getForceKeyFrame() {
      return forceKeyFrame_;
    }

    // optional uint32 BridgeHandle = 4;
    public static final int BRIDGEHANDLE_FIELD_NUMBER = 4;
    private int bridgeHandle_;
    /**
     * <code>optional uint32 BridgeHandle = 4;</code>
     */
    public boolean hasBridgeHandle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 BridgeHandle = 4;</code>
     */
    public int getBridgeHandle() {
      return bridgeHandle_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      forceKeyFrame_ = false;
      bridgeHandle_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSyncAddBridgeAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncAddBridgeAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncAddBridgeAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        forceKeyFrame_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        bridgeHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncAddBridgeAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.forceKeyFrame_ = forceKeyFrame_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bridgeHandle_ = bridgeHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional bool ForceKeyFrame = 3;
      private boolean forceKeyFrame_ ;
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public boolean hasForceKeyFrame() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public boolean getForceKeyFrame() {
        return forceKeyFrame_;
      }
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public Builder setForceKeyFrame(boolean value) {
        bitField0_ |= 0x00000004;
        forceKeyFrame_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public Builder clearForceKeyFrame() {
        bitField0_ = (bitField0_ & ~0x00000004);
        forceKeyFrame_ = false;
        onChanged();
        return this;
      }

      // optional uint32 BridgeHandle = 4;
      private int bridgeHandle_ ;
      /**
       * <code>optional uint32 BridgeHandle = 4;</code>
       */
      public boolean hasBridgeHandle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 BridgeHandle = 4;</code>
       */
      public int getBridgeHandle() {
        return bridgeHandle_;
      }
      /**
       * <code>optional uint32 BridgeHandle = 4;</code>
       */
      public Builder setBridgeHandle(int value) {
        bitField0_ |= 0x00000008;
        bridgeHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BridgeHandle = 4;</code>
       */
      public Builder clearBridgeHandle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bridgeHandle_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltSyncAddBridgeAck)
    }

    static {
      defaultInstance = new DssCltSyncAddBridgeAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltSyncAddBridgeAck)
  }

  public interface DssCltSyncAddBridgeNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional bool ForceKeyFrame = 3;
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    boolean hasForceKeyFrame();
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    boolean getForceKeyFrame();

    // optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 4;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 4;</code>
     */
    boolean hasResultCode();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.EDssAddBridgeResultCode getResultCode();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSyncAddBridgeNack}
   */
  public static final class DssCltSyncAddBridgeNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltSyncAddBridgeNackOrBuilder {
    // Use DssCltSyncAddBridgeNack.newBuilder() to construct.
    private DssCltSyncAddBridgeNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltSyncAddBridgeNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltSyncAddBridgeNack defaultInstance;
    public static DssCltSyncAddBridgeNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltSyncAddBridgeNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncAddBridgeNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncAddBridgeNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltSyncAddBridgeNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltSyncAddBridgeNack>() {
      public DssCltSyncAddBridgeNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltSyncAddBridgeNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool ForceKeyFrame = 3;
    public static final int FORCEKEYFRAME_FIELD_NUMBER = 3;
    private boolean forceKeyFrame_;
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    public boolean hasForceKeyFrame() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    public boolean getForceKeyFrame() {
      return forceKeyFrame_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 4;
    public static final int RESULTCODE_FIELD_NUMBER = 4;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.EDssAddBridgeResultCode resultCode_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 4;</code>
     */
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.EDssAddBridgeResultCode getResultCode() {
      return resultCode_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      forceKeyFrame_ = false;
      resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssAddBridgeResultCode.eAddBridgeSucceed;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSyncAddBridgeNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncAddBridgeNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncAddBridgeNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        forceKeyFrame_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssAddBridgeResultCode.eAddBridgeSucceed;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncAddBridgeNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSyncAddBridgeNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.forceKeyFrame_ = forceKeyFrame_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.resultCode_ = resultCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional bool ForceKeyFrame = 3;
      private boolean forceKeyFrame_ ;
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public boolean hasForceKeyFrame() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public boolean getForceKeyFrame() {
        return forceKeyFrame_;
      }
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public Builder setForceKeyFrame(boolean value) {
        bitField0_ |= 0x00000004;
        forceKeyFrame_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public Builder clearForceKeyFrame() {
        bitField0_ = (bitField0_ & ~0x00000004);
        forceKeyFrame_ = false;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 4;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.EDssAddBridgeResultCode resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssAddBridgeResultCode.eAddBridgeSucceed;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 4;</code>
       */
      public boolean hasResultCode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.EDssAddBridgeResultCode getResultCode() {
        return resultCode_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 4;</code>
       */
      public Builder setResultCode(com.kedacom.ops.flink.etl.proto.Dssevenum.EDssAddBridgeResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        resultCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 4;</code>
       */
      public Builder clearResultCode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssAddBridgeResultCode.eAddBridgeSucceed;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltSyncAddBridgeNack)
    }

    static {
      defaultInstance = new DssCltSyncAddBridgeNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltSyncAddBridgeNack)
  }

  public interface CltDssASyncAddBridgeReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional bool ForceKeyFrame = 3;
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    boolean hasForceKeyFrame();
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    boolean getForceKeyFrame();

    // optional uint32 ClientTick = 4;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    int getClientTick();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssASyncAddBridgeReq}
   */
  public static final class CltDssASyncAddBridgeReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssASyncAddBridgeReqOrBuilder {
    // Use CltDssASyncAddBridgeReq.newBuilder() to construct.
    private CltDssASyncAddBridgeReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssASyncAddBridgeReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssASyncAddBridgeReq defaultInstance;
    public static CltDssASyncAddBridgeReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssASyncAddBridgeReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncAddBridgeReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncAddBridgeReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssASyncAddBridgeReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssASyncAddBridgeReq>() {
      public CltDssASyncAddBridgeReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssASyncAddBridgeReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool ForceKeyFrame = 3;
    public static final int FORCEKEYFRAME_FIELD_NUMBER = 3;
    private boolean forceKeyFrame_;
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    public boolean hasForceKeyFrame() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    public boolean getForceKeyFrame() {
      return forceKeyFrame_;
    }

    // optional uint32 ClientTick = 4;
    public static final int CLIENTTICK_FIELD_NUMBER = 4;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      forceKeyFrame_ = false;
      clientTick_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssASyncAddBridgeReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncAddBridgeReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncAddBridgeReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        forceKeyFrame_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncAddBridgeReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssASyncAddBridgeReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.forceKeyFrame_ = forceKeyFrame_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clientTick_ = clientTick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional bool ForceKeyFrame = 3;
      private boolean forceKeyFrame_ ;
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public boolean hasForceKeyFrame() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public boolean getForceKeyFrame() {
        return forceKeyFrame_;
      }
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public Builder setForceKeyFrame(boolean value) {
        bitField0_ |= 0x00000004;
        forceKeyFrame_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public Builder clearForceKeyFrame() {
        bitField0_ = (bitField0_ & ~0x00000004);
        forceKeyFrame_ = false;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 4;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000008;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssASyncAddBridgeReq)
    }

    static {
      defaultInstance = new CltDssASyncAddBridgeReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssASyncAddBridgeReq)
  }

  public interface DssCltASyncAddBridgeAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional bool ForceKeyFrame = 3;
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    boolean hasForceKeyFrame();
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    boolean getForceKeyFrame();

    // optional uint32 BridgeHandle = 4;
    /**
     * <code>optional uint32 BridgeHandle = 4;</code>
     */
    boolean hasBridgeHandle();
    /**
     * <code>optional uint32 BridgeHandle = 4;</code>
     */
    int getBridgeHandle();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltASyncAddBridgeAck}
   */
  public static final class DssCltASyncAddBridgeAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltASyncAddBridgeAckOrBuilder {
    // Use DssCltASyncAddBridgeAck.newBuilder() to construct.
    private DssCltASyncAddBridgeAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltASyncAddBridgeAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltASyncAddBridgeAck defaultInstance;
    public static DssCltASyncAddBridgeAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltASyncAddBridgeAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncAddBridgeAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncAddBridgeAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltASyncAddBridgeAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltASyncAddBridgeAck>() {
      public DssCltASyncAddBridgeAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltASyncAddBridgeAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool ForceKeyFrame = 3;
    public static final int FORCEKEYFRAME_FIELD_NUMBER = 3;
    private boolean forceKeyFrame_;
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    public boolean hasForceKeyFrame() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    public boolean getForceKeyFrame() {
      return forceKeyFrame_;
    }

    // optional uint32 BridgeHandle = 4;
    public static final int BRIDGEHANDLE_FIELD_NUMBER = 4;
    private int bridgeHandle_;
    /**
     * <code>optional uint32 BridgeHandle = 4;</code>
     */
    public boolean hasBridgeHandle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 BridgeHandle = 4;</code>
     */
    public int getBridgeHandle() {
      return bridgeHandle_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      forceKeyFrame_ = false;
      bridgeHandle_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltASyncAddBridgeAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncAddBridgeAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncAddBridgeAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        forceKeyFrame_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        bridgeHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncAddBridgeAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.forceKeyFrame_ = forceKeyFrame_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bridgeHandle_ = bridgeHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional bool ForceKeyFrame = 3;
      private boolean forceKeyFrame_ ;
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public boolean hasForceKeyFrame() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public boolean getForceKeyFrame() {
        return forceKeyFrame_;
      }
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public Builder setForceKeyFrame(boolean value) {
        bitField0_ |= 0x00000004;
        forceKeyFrame_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public Builder clearForceKeyFrame() {
        bitField0_ = (bitField0_ & ~0x00000004);
        forceKeyFrame_ = false;
        onChanged();
        return this;
      }

      // optional uint32 BridgeHandle = 4;
      private int bridgeHandle_ ;
      /**
       * <code>optional uint32 BridgeHandle = 4;</code>
       */
      public boolean hasBridgeHandle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 BridgeHandle = 4;</code>
       */
      public int getBridgeHandle() {
        return bridgeHandle_;
      }
      /**
       * <code>optional uint32 BridgeHandle = 4;</code>
       */
      public Builder setBridgeHandle(int value) {
        bitField0_ |= 0x00000008;
        bridgeHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BridgeHandle = 4;</code>
       */
      public Builder clearBridgeHandle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bridgeHandle_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltASyncAddBridgeAck)
    }

    static {
      defaultInstance = new DssCltASyncAddBridgeAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltASyncAddBridgeAck)
  }

  public interface DssCltASyncAddBridgeNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional bool ForceKeyFrame = 3;
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    boolean hasForceKeyFrame();
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    boolean getForceKeyFrame();

    // optional uint32 BridgeHandle = 4;
    /**
     * <code>optional uint32 BridgeHandle = 4;</code>
     */
    boolean hasBridgeHandle();
    /**
     * <code>optional uint32 BridgeHandle = 4;</code>
     */
    int getBridgeHandle();

    // optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 5;</code>
     */
    boolean hasResultCode();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.EDssAddBridgeResultCode getResultCode();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltASyncAddBridgeNack}
   */
  public static final class DssCltASyncAddBridgeNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltASyncAddBridgeNackOrBuilder {
    // Use DssCltASyncAddBridgeNack.newBuilder() to construct.
    private DssCltASyncAddBridgeNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltASyncAddBridgeNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltASyncAddBridgeNack defaultInstance;
    public static DssCltASyncAddBridgeNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltASyncAddBridgeNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncAddBridgeNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncAddBridgeNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltASyncAddBridgeNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltASyncAddBridgeNack>() {
      public DssCltASyncAddBridgeNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltASyncAddBridgeNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool ForceKeyFrame = 3;
    public static final int FORCEKEYFRAME_FIELD_NUMBER = 3;
    private boolean forceKeyFrame_;
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    public boolean hasForceKeyFrame() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool ForceKeyFrame = 3;</code>
     */
    public boolean getForceKeyFrame() {
      return forceKeyFrame_;
    }

    // optional uint32 BridgeHandle = 4;
    public static final int BRIDGEHANDLE_FIELD_NUMBER = 4;
    private int bridgeHandle_;
    /**
     * <code>optional uint32 BridgeHandle = 4;</code>
     */
    public boolean hasBridgeHandle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 BridgeHandle = 4;</code>
     */
    public int getBridgeHandle() {
      return bridgeHandle_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 5;
    public static final int RESULTCODE_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.EDssAddBridgeResultCode resultCode_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 5;</code>
     */
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.EDssAddBridgeResultCode getResultCode() {
      return resultCode_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      forceKeyFrame_ = false;
      bridgeHandle_ = 0;
      resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssAddBridgeResultCode.eAddBridgeSucceed;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltASyncAddBridgeNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncAddBridgeNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncAddBridgeNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        forceKeyFrame_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        bridgeHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssAddBridgeResultCode.eAddBridgeSucceed;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncAddBridgeNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltASyncAddBridgeNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.forceKeyFrame_ = forceKeyFrame_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bridgeHandle_ = bridgeHandle_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.resultCode_ = resultCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional bool ForceKeyFrame = 3;
      private boolean forceKeyFrame_ ;
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public boolean hasForceKeyFrame() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public boolean getForceKeyFrame() {
        return forceKeyFrame_;
      }
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public Builder setForceKeyFrame(boolean value) {
        bitField0_ |= 0x00000004;
        forceKeyFrame_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ForceKeyFrame = 3;</code>
       */
      public Builder clearForceKeyFrame() {
        bitField0_ = (bitField0_ & ~0x00000004);
        forceKeyFrame_ = false;
        onChanged();
        return this;
      }

      // optional uint32 BridgeHandle = 4;
      private int bridgeHandle_ ;
      /**
       * <code>optional uint32 BridgeHandle = 4;</code>
       */
      public boolean hasBridgeHandle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 BridgeHandle = 4;</code>
       */
      public int getBridgeHandle() {
        return bridgeHandle_;
      }
      /**
       * <code>optional uint32 BridgeHandle = 4;</code>
       */
      public Builder setBridgeHandle(int value) {
        bitField0_ |= 0x00000008;
        bridgeHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BridgeHandle = 4;</code>
       */
      public Builder clearBridgeHandle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bridgeHandle_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.EDssAddBridgeResultCode resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssAddBridgeResultCode.eAddBridgeSucceed;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 5;</code>
       */
      public boolean hasResultCode() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.EDssAddBridgeResultCode getResultCode() {
        return resultCode_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 5;</code>
       */
      public Builder setResultCode(com.kedacom.ops.flink.etl.proto.Dssevenum.EDssAddBridgeResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        resultCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssAddBridgeResultCode ResultCode = 5;</code>
       */
      public Builder clearResultCode() {
        bitField0_ = (bitField0_ & ~0x00000010);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssAddBridgeResultCode.eAddBridgeSucceed;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltASyncAddBridgeNack)
    }

    static {
      defaultInstance = new DssCltASyncAddBridgeNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltASyncAddBridgeNack)
  }

  public interface CltDssRemoveBridgeReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional uint32 BridgeHandle = 3;
    /**
     * <code>optional uint32 BridgeHandle = 3;</code>
     */
    boolean hasBridgeHandle();
    /**
     * <code>optional uint32 BridgeHandle = 3;</code>
     */
    int getBridgeHandle();

    // optional uint32 ClientTick = 4;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    int getClientTick();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssRemoveBridgeReq}
   */
  public static final class CltDssRemoveBridgeReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssRemoveBridgeReqOrBuilder {
    // Use CltDssRemoveBridgeReq.newBuilder() to construct.
    private CltDssRemoveBridgeReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssRemoveBridgeReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssRemoveBridgeReq defaultInstance;
    public static CltDssRemoveBridgeReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssRemoveBridgeReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveBridgeReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveBridgeReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssRemoveBridgeReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssRemoveBridgeReq>() {
      public CltDssRemoveBridgeReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssRemoveBridgeReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 BridgeHandle = 3;
    public static final int BRIDGEHANDLE_FIELD_NUMBER = 3;
    private int bridgeHandle_;
    /**
     * <code>optional uint32 BridgeHandle = 3;</code>
     */
    public boolean hasBridgeHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 BridgeHandle = 3;</code>
     */
    public int getBridgeHandle() {
      return bridgeHandle_;
    }

    // optional uint32 ClientTick = 4;
    public static final int CLIENTTICK_FIELD_NUMBER = 4;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      bridgeHandle_ = 0;
      clientTick_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssRemoveBridgeReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveBridgeReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveBridgeReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        bridgeHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveBridgeReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.bridgeHandle_ = bridgeHandle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clientTick_ = clientTick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional uint32 BridgeHandle = 3;
      private int bridgeHandle_ ;
      /**
       * <code>optional uint32 BridgeHandle = 3;</code>
       */
      public boolean hasBridgeHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 BridgeHandle = 3;</code>
       */
      public int getBridgeHandle() {
        return bridgeHandle_;
      }
      /**
       * <code>optional uint32 BridgeHandle = 3;</code>
       */
      public Builder setBridgeHandle(int value) {
        bitField0_ |= 0x00000004;
        bridgeHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BridgeHandle = 3;</code>
       */
      public Builder clearBridgeHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        bridgeHandle_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 4;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000008;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssRemoveBridgeReq)
    }

    static {
      defaultInstance = new CltDssRemoveBridgeReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssRemoveBridgeReq)
  }

  public interface DssCltRemoveBridgeAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional uint32 BridgeHandle = 3;
    /**
     * <code>optional uint32 BridgeHandle = 3;</code>
     */
    boolean hasBridgeHandle();
    /**
     * <code>optional uint32 BridgeHandle = 3;</code>
     */
    int getBridgeHandle();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveBridgeAck}
   */
  public static final class DssCltRemoveBridgeAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltRemoveBridgeAckOrBuilder {
    // Use DssCltRemoveBridgeAck.newBuilder() to construct.
    private DssCltRemoveBridgeAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltRemoveBridgeAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltRemoveBridgeAck defaultInstance;
    public static DssCltRemoveBridgeAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltRemoveBridgeAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltRemoveBridgeAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltRemoveBridgeAck>() {
      public DssCltRemoveBridgeAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltRemoveBridgeAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 BridgeHandle = 3;
    public static final int BRIDGEHANDLE_FIELD_NUMBER = 3;
    private int bridgeHandle_;
    /**
     * <code>optional uint32 BridgeHandle = 3;</code>
     */
    public boolean hasBridgeHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 BridgeHandle = 3;</code>
     */
    public int getBridgeHandle() {
      return bridgeHandle_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      bridgeHandle_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveBridgeAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        bridgeHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.bridgeHandle_ = bridgeHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional uint32 BridgeHandle = 3;
      private int bridgeHandle_ ;
      /**
       * <code>optional uint32 BridgeHandle = 3;</code>
       */
      public boolean hasBridgeHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 BridgeHandle = 3;</code>
       */
      public int getBridgeHandle() {
        return bridgeHandle_;
      }
      /**
       * <code>optional uint32 BridgeHandle = 3;</code>
       */
      public Builder setBridgeHandle(int value) {
        bitField0_ |= 0x00000004;
        bridgeHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BridgeHandle = 3;</code>
       */
      public Builder clearBridgeHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        bridgeHandle_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveBridgeAck)
    }

    static {
      defaultInstance = new DssCltRemoveBridgeAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveBridgeAck)
  }

  public interface DssCltRemoveBridgeNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional uint32 BridgeHandle = 3;
    /**
     * <code>optional uint32 BridgeHandle = 3;</code>
     */
    boolean hasBridgeHandle();
    /**
     * <code>optional uint32 BridgeHandle = 3;</code>
     */
    int getBridgeHandle();

    // optional .com.kedacom.ops.flink.etl.proto.EDssRmBridgeResultCode ResultCode = 4;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssRmBridgeResultCode ResultCode = 4;</code>
     */
    boolean hasResultCode();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssRmBridgeResultCode ResultCode = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.EDssRmBridgeResultCode getResultCode();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveBridgeNack}
   */
  public static final class DssCltRemoveBridgeNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltRemoveBridgeNackOrBuilder {
    // Use DssCltRemoveBridgeNack.newBuilder() to construct.
    private DssCltRemoveBridgeNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltRemoveBridgeNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltRemoveBridgeNack defaultInstance;
    public static DssCltRemoveBridgeNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltRemoveBridgeNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltRemoveBridgeNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltRemoveBridgeNack>() {
      public DssCltRemoveBridgeNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltRemoveBridgeNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 BridgeHandle = 3;
    public static final int BRIDGEHANDLE_FIELD_NUMBER = 3;
    private int bridgeHandle_;
    /**
     * <code>optional uint32 BridgeHandle = 3;</code>
     */
    public boolean hasBridgeHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 BridgeHandle = 3;</code>
     */
    public int getBridgeHandle() {
      return bridgeHandle_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.EDssRmBridgeResultCode ResultCode = 4;
    public static final int RESULTCODE_FIELD_NUMBER = 4;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.EDssRmBridgeResultCode resultCode_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssRmBridgeResultCode ResultCode = 4;</code>
     */
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EDssRmBridgeResultCode ResultCode = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.EDssRmBridgeResultCode getResultCode() {
      return resultCode_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      bridgeHandle_ = 0;
      resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssRmBridgeResultCode.eRmBridgeSucceed;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveBridgeNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        bridgeHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssRmBridgeResultCode.eRmBridgeSucceed;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.bridgeHandle_ = bridgeHandle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.resultCode_ = resultCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional uint32 BridgeHandle = 3;
      private int bridgeHandle_ ;
      /**
       * <code>optional uint32 BridgeHandle = 3;</code>
       */
      public boolean hasBridgeHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 BridgeHandle = 3;</code>
       */
      public int getBridgeHandle() {
        return bridgeHandle_;
      }
      /**
       * <code>optional uint32 BridgeHandle = 3;</code>
       */
      public Builder setBridgeHandle(int value) {
        bitField0_ |= 0x00000004;
        bridgeHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BridgeHandle = 3;</code>
       */
      public Builder clearBridgeHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        bridgeHandle_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.EDssRmBridgeResultCode ResultCode = 4;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.EDssRmBridgeResultCode resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssRmBridgeResultCode.eRmBridgeSucceed;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssRmBridgeResultCode ResultCode = 4;</code>
       */
      public boolean hasResultCode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssRmBridgeResultCode ResultCode = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.EDssRmBridgeResultCode getResultCode() {
        return resultCode_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssRmBridgeResultCode ResultCode = 4;</code>
       */
      public Builder setResultCode(com.kedacom.ops.flink.etl.proto.Dssevenum.EDssRmBridgeResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        resultCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EDssRmBridgeResultCode ResultCode = 4;</code>
       */
      public Builder clearResultCode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EDssRmBridgeResultCode.eRmBridgeSucceed;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveBridgeNack)
    }

    static {
      defaultInstance = new DssCltRemoveBridgeNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveBridgeNack)
  }

  public interface CltDssSendToBridgeReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 BridgeHandle = 2;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    boolean hasBridgeHandle();
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    int getBridgeHandle();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional uint32 ClientTick = 4;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    int getClientTick();

    // optional string MeetingHandle = 5;
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssSendToBridgeReq}
   */
  public static final class CltDssSendToBridgeReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssSendToBridgeReqOrBuilder {
    // Use CltDssSendToBridgeReq.newBuilder() to construct.
    private CltDssSendToBridgeReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssSendToBridgeReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssSendToBridgeReq defaultInstance;
    public static CltDssSendToBridgeReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssSendToBridgeReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSendToBridgeReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSendToBridgeReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssSendToBridgeReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssSendToBridgeReq>() {
      public CltDssSendToBridgeReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssSendToBridgeReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 BridgeHandle = 2;
    public static final int BRIDGEHANDLE_FIELD_NUMBER = 2;
    private int bridgeHandle_;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public boolean hasBridgeHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public int getBridgeHandle() {
      return bridgeHandle_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional uint32 ClientTick = 4;
    public static final int CLIENTTICK_FIELD_NUMBER = 4;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    // optional string MeetingHandle = 5;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 5;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientId_ = 0;
      bridgeHandle_ = 0;
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      clientTick_ = 0;
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssSendToBridgeReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSendToBridgeReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSendToBridgeReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRcvAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bridgeHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssSendToBridgeReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssSendToBridgeReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bridgeHandle_ = bridgeHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clientTick_ = clientTick_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 BridgeHandle = 2;
      private int bridgeHandle_ ;
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public boolean hasBridgeHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public int getBridgeHandle() {
        return bridgeHandle_;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder setBridgeHandle(int value) {
        bitField0_ |= 0x00000002;
        bridgeHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder clearBridgeHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bridgeHandle_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional uint32 ClientTick = 4;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000008;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 5;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssSendToBridgeReq)
    }

    static {
      defaultInstance = new CltDssSendToBridgeReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssSendToBridgeReq)
  }

  public interface DssCltSendToBridgeAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 BridgeHandle = 2;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    boolean hasBridgeHandle();
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    int getBridgeHandle();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional string MeetingHandle = 4;
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSendToBridgeAck}
   */
  public static final class DssCltSendToBridgeAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltSendToBridgeAckOrBuilder {
    // Use DssCltSendToBridgeAck.newBuilder() to construct.
    private DssCltSendToBridgeAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltSendToBridgeAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltSendToBridgeAck defaultInstance;
    public static DssCltSendToBridgeAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltSendToBridgeAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSendToBridgeAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSendToBridgeAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltSendToBridgeAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltSendToBridgeAck>() {
      public DssCltSendToBridgeAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltSendToBridgeAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 BridgeHandle = 2;
    public static final int BRIDGEHANDLE_FIELD_NUMBER = 2;
    private int bridgeHandle_;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public boolean hasBridgeHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public int getBridgeHandle() {
      return bridgeHandle_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional string MeetingHandle = 4;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 4;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientId_ = 0;
      bridgeHandle_ = 0;
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSendToBridgeAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSendToBridgeAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSendToBridgeAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRcvAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bridgeHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSendToBridgeAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bridgeHandle_ = bridgeHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 BridgeHandle = 2;
      private int bridgeHandle_ ;
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public boolean hasBridgeHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public int getBridgeHandle() {
        return bridgeHandle_;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder setBridgeHandle(int value) {
        bitField0_ |= 0x00000002;
        bridgeHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder clearBridgeHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bridgeHandle_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional string MeetingHandle = 4;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltSendToBridgeAck)
    }

    static {
      defaultInstance = new DssCltSendToBridgeAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltSendToBridgeAck)
  }

  public interface DssCltSendToBridgeNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 BridgeHandle = 2;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    boolean hasBridgeHandle();
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    int getBridgeHandle();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional string MeetingHandle = 4;
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional .com.kedacom.ops.flink.etl.proto.ESendToBridgeResultCode ResultCode = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESendToBridgeResultCode ResultCode = 5;</code>
     */
    boolean hasResultCode();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESendToBridgeResultCode ResultCode = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESendToBridgeResultCode getResultCode();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSendToBridgeNack}
   */
  public static final class DssCltSendToBridgeNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltSendToBridgeNackOrBuilder {
    // Use DssCltSendToBridgeNack.newBuilder() to construct.
    private DssCltSendToBridgeNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltSendToBridgeNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltSendToBridgeNack defaultInstance;
    public static DssCltSendToBridgeNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltSendToBridgeNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSendToBridgeNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSendToBridgeNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltSendToBridgeNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltSendToBridgeNack>() {
      public DssCltSendToBridgeNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltSendToBridgeNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 BridgeHandle = 2;
    public static final int BRIDGEHANDLE_FIELD_NUMBER = 2;
    private int bridgeHandle_;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public boolean hasBridgeHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public int getBridgeHandle() {
      return bridgeHandle_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional string MeetingHandle = 4;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 4;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESendToBridgeResultCode ResultCode = 5;
    public static final int RESULTCODE_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESendToBridgeResultCode resultCode_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESendToBridgeResultCode ResultCode = 5;</code>
     */
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESendToBridgeResultCode ResultCode = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESendToBridgeResultCode getResultCode() {
      return resultCode_;
    }

    private void initFields() {
      clientId_ = 0;
      bridgeHandle_ = 0;
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      meetingHandle_ = "";
      resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESendToBridgeResultCode.eSendToBridgeSucceed;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSendToBridgeNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSendToBridgeNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSendToBridgeNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRcvAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bridgeHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESendToBridgeResultCode.eSendToBridgeSucceed;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSendToBridgeNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSendToBridgeNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bridgeHandle_ = bridgeHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.resultCode_ = resultCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 BridgeHandle = 2;
      private int bridgeHandle_ ;
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public boolean hasBridgeHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public int getBridgeHandle() {
        return bridgeHandle_;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder setBridgeHandle(int value) {
        bitField0_ |= 0x00000002;
        bridgeHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder clearBridgeHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bridgeHandle_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional string MeetingHandle = 4;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESendToBridgeResultCode ResultCode = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESendToBridgeResultCode resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESendToBridgeResultCode.eSendToBridgeSucceed;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESendToBridgeResultCode ResultCode = 5;</code>
       */
      public boolean hasResultCode() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESendToBridgeResultCode ResultCode = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESendToBridgeResultCode getResultCode() {
        return resultCode_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESendToBridgeResultCode ResultCode = 5;</code>
       */
      public Builder setResultCode(com.kedacom.ops.flink.etl.proto.Dssevenum.ESendToBridgeResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        resultCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESendToBridgeResultCode ResultCode = 5;</code>
       */
      public Builder clearResultCode() {
        bitField0_ = (bitField0_ & ~0x00000010);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESendToBridgeResultCode.eSendToBridgeSucceed;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltSendToBridgeNack)
    }

    static {
      defaultInstance = new DssCltSendToBridgeNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltSendToBridgeNack)
  }

  public interface DssCltBridgeSpeakerRemovedNtfOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 BridgeHandle = 2;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    boolean hasBridgeHandle();
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    int getBridgeHandle();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional string MeetingHandle = 4;
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltBridgeSpeakerRemovedNtf}
   */
  public static final class DssCltBridgeSpeakerRemovedNtf extends
      com.google.protobuf.GeneratedMessage
      implements DssCltBridgeSpeakerRemovedNtfOrBuilder {
    // Use DssCltBridgeSpeakerRemovedNtf.newBuilder() to construct.
    private DssCltBridgeSpeakerRemovedNtf(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltBridgeSpeakerRemovedNtf(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltBridgeSpeakerRemovedNtf defaultInstance;
    public static DssCltBridgeSpeakerRemovedNtf getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltBridgeSpeakerRemovedNtf getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltBridgeSpeakerRemovedNtf_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltBridgeSpeakerRemovedNtf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltBridgeSpeakerRemovedNtf> PARSER =
        new com.google.protobuf.AbstractParser<DssCltBridgeSpeakerRemovedNtf>() {
      public DssCltBridgeSpeakerRemovedNtf parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltBridgeSpeakerRemovedNtf> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 BridgeHandle = 2;
    public static final int BRIDGEHANDLE_FIELD_NUMBER = 2;
    private int bridgeHandle_;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public boolean hasBridgeHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public int getBridgeHandle() {
      return bridgeHandle_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional string MeetingHandle = 4;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 4;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientId_ = 0;
      bridgeHandle_ = 0;
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltBridgeSpeakerRemovedNtf}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtfOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltBridgeSpeakerRemovedNtf_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltBridgeSpeakerRemovedNtf_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRcvAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bridgeHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltBridgeSpeakerRemovedNtf_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBridgeSpeakerRemovedNtf(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bridgeHandle_ = bridgeHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 BridgeHandle = 2;
      private int bridgeHandle_ ;
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public boolean hasBridgeHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public int getBridgeHandle() {
        return bridgeHandle_;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder setBridgeHandle(int value) {
        bitField0_ |= 0x00000002;
        bridgeHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder clearBridgeHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bridgeHandle_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional string MeetingHandle = 4;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltBridgeSpeakerRemovedNtf)
    }

    static {
      defaultInstance = new DssCltBridgeSpeakerRemovedNtf(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltBridgeSpeakerRemovedNtf)
  }

  public interface CltDssStopSendToBridgeReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 BridgeHandle = 2;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    boolean hasBridgeHandle();
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    int getBridgeHandle();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional bool RemoveByDst = 4;
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    boolean hasRemoveByDst();
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    boolean getRemoveByDst();

    // optional uint32 ClientTick = 5;
    /**
     * <code>optional uint32 ClientTick = 5;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 5;</code>
     */
    int getClientTick();

    // optional string MeetingHandle = 6;
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssStopSendToBridgeReq}
   */
  public static final class CltDssStopSendToBridgeReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssStopSendToBridgeReqOrBuilder {
    // Use CltDssStopSendToBridgeReq.newBuilder() to construct.
    private CltDssStopSendToBridgeReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssStopSendToBridgeReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssStopSendToBridgeReq defaultInstance;
    public static CltDssStopSendToBridgeReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssStopSendToBridgeReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssStopSendToBridgeReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssStopSendToBridgeReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssStopSendToBridgeReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssStopSendToBridgeReq>() {
      public CltDssStopSendToBridgeReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssStopSendToBridgeReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 BridgeHandle = 2;
    public static final int BRIDGEHANDLE_FIELD_NUMBER = 2;
    private int bridgeHandle_;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public boolean hasBridgeHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public int getBridgeHandle() {
      return bridgeHandle_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional bool RemoveByDst = 4;
    public static final int REMOVEBYDST_FIELD_NUMBER = 4;
    private boolean removeByDst_;
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    public boolean hasRemoveByDst() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    public boolean getRemoveByDst() {
      return removeByDst_;
    }

    // optional uint32 ClientTick = 5;
    public static final int CLIENTTICK_FIELD_NUMBER = 5;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 5;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 ClientTick = 5;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    // optional string MeetingHandle = 6;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 6;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientId_ = 0;
      bridgeHandle_ = 0;
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      removeByDst_ = false;
      clientTick_ = 0;
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssStopSendToBridgeReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssStopSendToBridgeReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssStopSendToBridgeReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRcvAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bridgeHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        removeByDst_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssStopSendToBridgeReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopSendToBridgeReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bridgeHandle_ = bridgeHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.removeByDst_ = removeByDst_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.clientTick_ = clientTick_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 BridgeHandle = 2;
      private int bridgeHandle_ ;
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public boolean hasBridgeHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public int getBridgeHandle() {
        return bridgeHandle_;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder setBridgeHandle(int value) {
        bitField0_ |= 0x00000002;
        bridgeHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder clearBridgeHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bridgeHandle_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional bool RemoveByDst = 4;
      private boolean removeByDst_ ;
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public boolean hasRemoveByDst() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public boolean getRemoveByDst() {
        return removeByDst_;
      }
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public Builder setRemoveByDst(boolean value) {
        bitField0_ |= 0x00000008;
        removeByDst_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public Builder clearRemoveByDst() {
        bitField0_ = (bitField0_ & ~0x00000008);
        removeByDst_ = false;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 5;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 5;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 ClientTick = 5;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 5;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000010;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 5;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000010);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 6;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000020);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssStopSendToBridgeReq)
    }

    static {
      defaultInstance = new CltDssStopSendToBridgeReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssStopSendToBridgeReq)
  }

  public interface DssCltStopSendToBridgeAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 BridgeHandle = 2;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    boolean hasBridgeHandle();
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    int getBridgeHandle();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional bool RemoveByDst = 4;
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    boolean hasRemoveByDst();
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    boolean getRemoveByDst();

    // optional string MeetingHandle = 5;
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltStopSendToBridgeAck}
   */
  public static final class DssCltStopSendToBridgeAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltStopSendToBridgeAckOrBuilder {
    // Use DssCltStopSendToBridgeAck.newBuilder() to construct.
    private DssCltStopSendToBridgeAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltStopSendToBridgeAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltStopSendToBridgeAck defaultInstance;
    public static DssCltStopSendToBridgeAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltStopSendToBridgeAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopSendToBridgeAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopSendToBridgeAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltStopSendToBridgeAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltStopSendToBridgeAck>() {
      public DssCltStopSendToBridgeAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltStopSendToBridgeAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 BridgeHandle = 2;
    public static final int BRIDGEHANDLE_FIELD_NUMBER = 2;
    private int bridgeHandle_;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public boolean hasBridgeHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public int getBridgeHandle() {
      return bridgeHandle_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional bool RemoveByDst = 4;
    public static final int REMOVEBYDST_FIELD_NUMBER = 4;
    private boolean removeByDst_;
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    public boolean hasRemoveByDst() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    public boolean getRemoveByDst() {
      return removeByDst_;
    }

    // optional string MeetingHandle = 5;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 5;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientId_ = 0;
      bridgeHandle_ = 0;
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      removeByDst_ = false;
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltStopSendToBridgeAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopSendToBridgeAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopSendToBridgeAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRcvAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bridgeHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        removeByDst_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopSendToBridgeAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bridgeHandle_ = bridgeHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.removeByDst_ = removeByDst_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 BridgeHandle = 2;
      private int bridgeHandle_ ;
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public boolean hasBridgeHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public int getBridgeHandle() {
        return bridgeHandle_;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder setBridgeHandle(int value) {
        bitField0_ |= 0x00000002;
        bridgeHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder clearBridgeHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bridgeHandle_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional bool RemoveByDst = 4;
      private boolean removeByDst_ ;
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public boolean hasRemoveByDst() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public boolean getRemoveByDst() {
        return removeByDst_;
      }
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public Builder setRemoveByDst(boolean value) {
        bitField0_ |= 0x00000008;
        removeByDst_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public Builder clearRemoveByDst() {
        bitField0_ = (bitField0_ & ~0x00000008);
        removeByDst_ = false;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 5;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltStopSendToBridgeAck)
    }

    static {
      defaultInstance = new DssCltStopSendToBridgeAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltStopSendToBridgeAck)
  }

  public interface DssCltStopSendToBridgeNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 BridgeHandle = 2;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    boolean hasBridgeHandle();
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    int getBridgeHandle();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional bool RemoveByDst = 4;
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    boolean hasRemoveByDst();
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    boolean getRemoveByDst();

    // optional string MeetingHandle = 5;
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional .com.kedacom.ops.flink.etl.proto.EStopSendToBridgeResultCode ResultCode = 6;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EStopSendToBridgeResultCode ResultCode = 6;</code>
     */
    boolean hasResultCode();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EStopSendToBridgeResultCode ResultCode = 6;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.EStopSendToBridgeResultCode getResultCode();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltStopSendToBridgeNack}
   */
  public static final class DssCltStopSendToBridgeNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltStopSendToBridgeNackOrBuilder {
    // Use DssCltStopSendToBridgeNack.newBuilder() to construct.
    private DssCltStopSendToBridgeNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltStopSendToBridgeNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltStopSendToBridgeNack defaultInstance;
    public static DssCltStopSendToBridgeNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltStopSendToBridgeNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopSendToBridgeNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopSendToBridgeNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltStopSendToBridgeNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltStopSendToBridgeNack>() {
      public DssCltStopSendToBridgeNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltStopSendToBridgeNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 BridgeHandle = 2;
    public static final int BRIDGEHANDLE_FIELD_NUMBER = 2;
    private int bridgeHandle_;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public boolean hasBridgeHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public int getBridgeHandle() {
      return bridgeHandle_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional bool RemoveByDst = 4;
    public static final int REMOVEBYDST_FIELD_NUMBER = 4;
    private boolean removeByDst_;
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    public boolean hasRemoveByDst() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    public boolean getRemoveByDst() {
      return removeByDst_;
    }

    // optional string MeetingHandle = 5;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 5;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .com.kedacom.ops.flink.etl.proto.EStopSendToBridgeResultCode ResultCode = 6;
    public static final int RESULTCODE_FIELD_NUMBER = 6;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.EStopSendToBridgeResultCode resultCode_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EStopSendToBridgeResultCode ResultCode = 6;</code>
     */
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EStopSendToBridgeResultCode ResultCode = 6;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.EStopSendToBridgeResultCode getResultCode() {
      return resultCode_;
    }

    private void initFields() {
      clientId_ = 0;
      bridgeHandle_ = 0;
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      removeByDst_ = false;
      meetingHandle_ = "";
      resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EStopSendToBridgeResultCode.eStopSendToBridgeSucceed;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltStopSendToBridgeNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopSendToBridgeNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopSendToBridgeNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRcvAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bridgeHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        removeByDst_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EStopSendToBridgeResultCode.eStopSendToBridgeSucceed;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopSendToBridgeNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopSendToBridgeNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bridgeHandle_ = bridgeHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.removeByDst_ = removeByDst_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.resultCode_ = resultCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 BridgeHandle = 2;
      private int bridgeHandle_ ;
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public boolean hasBridgeHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public int getBridgeHandle() {
        return bridgeHandle_;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder setBridgeHandle(int value) {
        bitField0_ |= 0x00000002;
        bridgeHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder clearBridgeHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bridgeHandle_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional bool RemoveByDst = 4;
      private boolean removeByDst_ ;
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public boolean hasRemoveByDst() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public boolean getRemoveByDst() {
        return removeByDst_;
      }
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public Builder setRemoveByDst(boolean value) {
        bitField0_ |= 0x00000008;
        removeByDst_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public Builder clearRemoveByDst() {
        bitField0_ = (bitField0_ & ~0x00000008);
        removeByDst_ = false;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 5;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.EStopSendToBridgeResultCode ResultCode = 6;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.EStopSendToBridgeResultCode resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EStopSendToBridgeResultCode.eStopSendToBridgeSucceed;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EStopSendToBridgeResultCode ResultCode = 6;</code>
       */
      public boolean hasResultCode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EStopSendToBridgeResultCode ResultCode = 6;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.EStopSendToBridgeResultCode getResultCode() {
        return resultCode_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EStopSendToBridgeResultCode ResultCode = 6;</code>
       */
      public Builder setResultCode(com.kedacom.ops.flink.etl.proto.Dssevenum.EStopSendToBridgeResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        resultCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EStopSendToBridgeResultCode ResultCode = 6;</code>
       */
      public Builder clearResultCode() {
        bitField0_ = (bitField0_ & ~0x00000020);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EStopSendToBridgeResultCode.eStopSendToBridgeSucceed;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltStopSendToBridgeNack)
    }

    static {
      defaultInstance = new DssCltStopSendToBridgeNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltStopSendToBridgeNack)
  }

  public interface CltDssReceiveFromBridgeReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 BridgeHandle = 2;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    boolean hasBridgeHandle();
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    int getBridgeHandle();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
     */
    boolean hasDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder();

    // optional uint32 ClientTick = 4;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    int getClientTick();

    // optional string MeetingHandle = 5;
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssReceiveFromBridgeReq}
   */
  public static final class CltDssReceiveFromBridgeReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssReceiveFromBridgeReqOrBuilder {
    // Use CltDssReceiveFromBridgeReq.newBuilder() to construct.
    private CltDssReceiveFromBridgeReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssReceiveFromBridgeReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssReceiveFromBridgeReq defaultInstance;
    public static CltDssReceiveFromBridgeReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssReceiveFromBridgeReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssReceiveFromBridgeReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssReceiveFromBridgeReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssReceiveFromBridgeReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssReceiveFromBridgeReq>() {
      public CltDssReceiveFromBridgeReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssReceiveFromBridgeReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 BridgeHandle = 2;
    public static final int BRIDGEHANDLE_FIELD_NUMBER = 2;
    private int bridgeHandle_;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public boolean hasBridgeHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public int getBridgeHandle() {
      return bridgeHandle_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;
    public static final int DSTADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
     */
    public boolean hasDstAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
      return dstAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
      return dstAddr_;
    }

    // optional uint32 ClientTick = 4;
    public static final int CLIENTTICK_FIELD_NUMBER = 4;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    // optional string MeetingHandle = 5;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 5;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 5;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientId_ = 0;
      bridgeHandle_ = 0;
      dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      clientTick_ = 0;
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssReceiveFromBridgeReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssReceiveFromBridgeReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssReceiveFromBridgeReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDstAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bridgeHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssReceiveFromBridgeReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReceiveFromBridgeReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bridgeHandle_ = bridgeHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (dstAddrBuilder_ == null) {
          result.dstAddr_ = dstAddr_;
        } else {
          result.dstAddr_ = dstAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clientTick_ = clientTick_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 BridgeHandle = 2;
      private int bridgeHandle_ ;
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public boolean hasBridgeHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public int getBridgeHandle() {
        return bridgeHandle_;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder setBridgeHandle(int value) {
        bitField0_ |= 0x00000002;
        bridgeHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder clearBridgeHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bridgeHandle_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> dstAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public boolean hasDstAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
        if (dstAddrBuilder_ == null) {
          return dstAddr_;
        } else {
          return dstAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public Builder setDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dstAddr_ = value;
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public Builder setDstAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = builderForValue.build();
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public Builder mergeDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              dstAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            dstAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(dstAddr_).mergeFrom(value).buildPartial();
          } else {
            dstAddr_ = value;
          }
          onChanged();
        } else {
          dstAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public Builder clearDstAddr() {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getDstAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getDstAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
        if (dstAddrBuilder_ != null) {
          return dstAddrBuilder_.getMessageOrBuilder();
        } else {
          return dstAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getDstAddrFieldBuilder() {
        if (dstAddrBuilder_ == null) {
          dstAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  dstAddr_,
                  getParentForChildren(),
                  isClean());
          dstAddr_ = null;
        }
        return dstAddrBuilder_;
      }

      // optional uint32 ClientTick = 4;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000008;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 5;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 5;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssReceiveFromBridgeReq)
    }

    static {
      defaultInstance = new CltDssReceiveFromBridgeReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssReceiveFromBridgeReq)
  }

  public interface DssCltReceiveFromBridgeAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 BridgeHandle = 2;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    boolean hasBridgeHandle();
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    int getBridgeHandle();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
     */
    boolean hasDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder();

    // optional string MeetingHandle = 4;
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltReceiveFromBridgeAck}
   */
  public static final class DssCltReceiveFromBridgeAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltReceiveFromBridgeAckOrBuilder {
    // Use DssCltReceiveFromBridgeAck.newBuilder() to construct.
    private DssCltReceiveFromBridgeAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltReceiveFromBridgeAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltReceiveFromBridgeAck defaultInstance;
    public static DssCltReceiveFromBridgeAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltReceiveFromBridgeAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReceiveFromBridgeAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReceiveFromBridgeAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltReceiveFromBridgeAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltReceiveFromBridgeAck>() {
      public DssCltReceiveFromBridgeAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltReceiveFromBridgeAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 BridgeHandle = 2;
    public static final int BRIDGEHANDLE_FIELD_NUMBER = 2;
    private int bridgeHandle_;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public boolean hasBridgeHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public int getBridgeHandle() {
      return bridgeHandle_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;
    public static final int DSTADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
     */
    public boolean hasDstAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
      return dstAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
      return dstAddr_;
    }

    // optional string MeetingHandle = 4;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 4;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientId_ = 0;
      bridgeHandle_ = 0;
      dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltReceiveFromBridgeAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReceiveFromBridgeAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReceiveFromBridgeAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDstAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bridgeHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReceiveFromBridgeAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bridgeHandle_ = bridgeHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (dstAddrBuilder_ == null) {
          result.dstAddr_ = dstAddr_;
        } else {
          result.dstAddr_ = dstAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 BridgeHandle = 2;
      private int bridgeHandle_ ;
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public boolean hasBridgeHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public int getBridgeHandle() {
        return bridgeHandle_;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder setBridgeHandle(int value) {
        bitField0_ |= 0x00000002;
        bridgeHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder clearBridgeHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bridgeHandle_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> dstAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public boolean hasDstAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
        if (dstAddrBuilder_ == null) {
          return dstAddr_;
        } else {
          return dstAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public Builder setDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dstAddr_ = value;
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public Builder setDstAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = builderForValue.build();
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public Builder mergeDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              dstAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            dstAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(dstAddr_).mergeFrom(value).buildPartial();
          } else {
            dstAddr_ = value;
          }
          onChanged();
        } else {
          dstAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public Builder clearDstAddr() {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getDstAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getDstAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
        if (dstAddrBuilder_ != null) {
          return dstAddrBuilder_.getMessageOrBuilder();
        } else {
          return dstAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getDstAddrFieldBuilder() {
        if (dstAddrBuilder_ == null) {
          dstAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  dstAddr_,
                  getParentForChildren(),
                  isClean());
          dstAddr_ = null;
        }
        return dstAddrBuilder_;
      }

      // optional string MeetingHandle = 4;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltReceiveFromBridgeAck)
    }

    static {
      defaultInstance = new DssCltReceiveFromBridgeAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltReceiveFromBridgeAck)
  }

  public interface DssCltReceiveFromBridgeNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 BridgeHandle = 2;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    boolean hasBridgeHandle();
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    int getBridgeHandle();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
     */
    boolean hasDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder();

    // optional string MeetingHandle = 4;
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional .com.kedacom.ops.flink.etl.proto.EReceiveFromBridgeResultCode ResultCode = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EReceiveFromBridgeResultCode ResultCode = 5;</code>
     */
    boolean hasResultCode();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EReceiveFromBridgeResultCode ResultCode = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.EReceiveFromBridgeResultCode getResultCode();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltReceiveFromBridgeNack}
   */
  public static final class DssCltReceiveFromBridgeNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltReceiveFromBridgeNackOrBuilder {
    // Use DssCltReceiveFromBridgeNack.newBuilder() to construct.
    private DssCltReceiveFromBridgeNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltReceiveFromBridgeNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltReceiveFromBridgeNack defaultInstance;
    public static DssCltReceiveFromBridgeNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltReceiveFromBridgeNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReceiveFromBridgeNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReceiveFromBridgeNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltReceiveFromBridgeNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltReceiveFromBridgeNack>() {
      public DssCltReceiveFromBridgeNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltReceiveFromBridgeNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 BridgeHandle = 2;
    public static final int BRIDGEHANDLE_FIELD_NUMBER = 2;
    private int bridgeHandle_;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public boolean hasBridgeHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public int getBridgeHandle() {
      return bridgeHandle_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;
    public static final int DSTADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
     */
    public boolean hasDstAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
      return dstAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
      return dstAddr_;
    }

    // optional string MeetingHandle = 4;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 4;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .com.kedacom.ops.flink.etl.proto.EReceiveFromBridgeResultCode ResultCode = 5;
    public static final int RESULTCODE_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.EReceiveFromBridgeResultCode resultCode_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EReceiveFromBridgeResultCode ResultCode = 5;</code>
     */
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EReceiveFromBridgeResultCode ResultCode = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.EReceiveFromBridgeResultCode getResultCode() {
      return resultCode_;
    }

    private void initFields() {
      clientId_ = 0;
      bridgeHandle_ = 0;
      dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      meetingHandle_ = "";
      resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EReceiveFromBridgeResultCode.eReceiveFromBridgeSucceed;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltReceiveFromBridgeNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReceiveFromBridgeNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReceiveFromBridgeNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDstAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bridgeHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EReceiveFromBridgeResultCode.eReceiveFromBridgeSucceed;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReceiveFromBridgeNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReceiveFromBridgeNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bridgeHandle_ = bridgeHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (dstAddrBuilder_ == null) {
          result.dstAddr_ = dstAddr_;
        } else {
          result.dstAddr_ = dstAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.resultCode_ = resultCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 BridgeHandle = 2;
      private int bridgeHandle_ ;
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public boolean hasBridgeHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public int getBridgeHandle() {
        return bridgeHandle_;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder setBridgeHandle(int value) {
        bitField0_ |= 0x00000002;
        bridgeHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder clearBridgeHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bridgeHandle_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> dstAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public boolean hasDstAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
        if (dstAddrBuilder_ == null) {
          return dstAddr_;
        } else {
          return dstAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public Builder setDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dstAddr_ = value;
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public Builder setDstAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = builderForValue.build();
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public Builder mergeDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              dstAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            dstAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(dstAddr_).mergeFrom(value).buildPartial();
          } else {
            dstAddr_ = value;
          }
          onChanged();
        } else {
          dstAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public Builder clearDstAddr() {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getDstAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getDstAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
        if (dstAddrBuilder_ != null) {
          return dstAddrBuilder_.getMessageOrBuilder();
        } else {
          return dstAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getDstAddrFieldBuilder() {
        if (dstAddrBuilder_ == null) {
          dstAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  dstAddr_,
                  getParentForChildren(),
                  isClean());
          dstAddr_ = null;
        }
        return dstAddrBuilder_;
      }

      // optional string MeetingHandle = 4;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.EReceiveFromBridgeResultCode ResultCode = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.EReceiveFromBridgeResultCode resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EReceiveFromBridgeResultCode.eReceiveFromBridgeSucceed;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EReceiveFromBridgeResultCode ResultCode = 5;</code>
       */
      public boolean hasResultCode() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EReceiveFromBridgeResultCode ResultCode = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.EReceiveFromBridgeResultCode getResultCode() {
        return resultCode_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EReceiveFromBridgeResultCode ResultCode = 5;</code>
       */
      public Builder setResultCode(com.kedacom.ops.flink.etl.proto.Dssevenum.EReceiveFromBridgeResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        resultCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EReceiveFromBridgeResultCode ResultCode = 5;</code>
       */
      public Builder clearResultCode() {
        bitField0_ = (bitField0_ & ~0x00000010);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EReceiveFromBridgeResultCode.eReceiveFromBridgeSucceed;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltReceiveFromBridgeNack)
    }

    static {
      defaultInstance = new DssCltReceiveFromBridgeNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltReceiveFromBridgeNack)
  }

  public interface CltDssStopReceiveFromBridgeReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 BridgeHandle = 2;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    boolean hasBridgeHandle();
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    int getBridgeHandle();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
     */
    boolean hasMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder();

    // optional bool RemoveByDst = 4;
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    boolean hasRemoveByDst();
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    boolean getRemoveByDst();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
     */
    boolean hasDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder();

    // optional uint32 ClientTick = 6;
    /**
     * <code>optional uint32 ClientTick = 6;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 6;</code>
     */
    int getClientTick();

    // optional string MeetingHandle = 7;
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssStopReceiveFromBridgeReq}
   */
  public static final class CltDssStopReceiveFromBridgeReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssStopReceiveFromBridgeReqOrBuilder {
    // Use CltDssStopReceiveFromBridgeReq.newBuilder() to construct.
    private CltDssStopReceiveFromBridgeReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssStopReceiveFromBridgeReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssStopReceiveFromBridgeReq defaultInstance;
    public static CltDssStopReceiveFromBridgeReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssStopReceiveFromBridgeReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssStopReceiveFromBridgeReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssStopReceiveFromBridgeReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssStopReceiveFromBridgeReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssStopReceiveFromBridgeReq>() {
      public CltDssStopReceiveFromBridgeReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssStopReceiveFromBridgeReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 BridgeHandle = 2;
    public static final int BRIDGEHANDLE_FIELD_NUMBER = 2;
    private int bridgeHandle_;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public boolean hasBridgeHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public int getBridgeHandle() {
      return bridgeHandle_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;
    public static final int MAPADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
     */
    public boolean hasMapAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
      return mapAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
      return mapAddr_;
    }

    // optional bool RemoveByDst = 4;
    public static final int REMOVEBYDST_FIELD_NUMBER = 4;
    private boolean removeByDst_;
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    public boolean hasRemoveByDst() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    public boolean getRemoveByDst() {
      return removeByDst_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;
    public static final int DSTADDR_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
     */
    public boolean hasDstAddr() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
      return dstAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
      return dstAddr_;
    }

    // optional uint32 ClientTick = 6;
    public static final int CLIENTTICK_FIELD_NUMBER = 6;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 6;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 ClientTick = 6;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    // optional string MeetingHandle = 7;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 7;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientId_ = 0;
      bridgeHandle_ = 0;
      mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      removeByDst_ = false;
      dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      clientTick_ = 0;
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssStopReceiveFromBridgeReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssStopReceiveFromBridgeReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssStopReceiveFromBridgeReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMapAddrFieldBuilder();
          getDstAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bridgeHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        removeByDst_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssStopReceiveFromBridgeReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssStopReceiveFromBridgeReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bridgeHandle_ = bridgeHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (mapAddrBuilder_ == null) {
          result.mapAddr_ = mapAddr_;
        } else {
          result.mapAddr_ = mapAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.removeByDst_ = removeByDst_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (dstAddrBuilder_ == null) {
          result.dstAddr_ = dstAddr_;
        } else {
          result.dstAddr_ = dstAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.clientTick_ = clientTick_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 BridgeHandle = 2;
      private int bridgeHandle_ ;
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public boolean hasBridgeHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public int getBridgeHandle() {
        return bridgeHandle_;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder setBridgeHandle(int value) {
        bitField0_ |= 0x00000002;
        bridgeHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder clearBridgeHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bridgeHandle_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> mapAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public boolean hasMapAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
        if (mapAddrBuilder_ == null) {
          return mapAddr_;
        } else {
          return mapAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public Builder setMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mapAddr_ = value;
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public Builder setMapAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = builderForValue.build();
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public Builder mergeMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              mapAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            mapAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(mapAddr_).mergeFrom(value).buildPartial();
          } else {
            mapAddr_ = value;
          }
          onChanged();
        } else {
          mapAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public Builder clearMapAddr() {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getMapAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getMapAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
        if (mapAddrBuilder_ != null) {
          return mapAddrBuilder_.getMessageOrBuilder();
        } else {
          return mapAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getMapAddrFieldBuilder() {
        if (mapAddrBuilder_ == null) {
          mapAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  mapAddr_,
                  getParentForChildren(),
                  isClean());
          mapAddr_ = null;
        }
        return mapAddrBuilder_;
      }

      // optional bool RemoveByDst = 4;
      private boolean removeByDst_ ;
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public boolean hasRemoveByDst() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public boolean getRemoveByDst() {
        return removeByDst_;
      }
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public Builder setRemoveByDst(boolean value) {
        bitField0_ |= 0x00000008;
        removeByDst_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public Builder clearRemoveByDst() {
        bitField0_ = (bitField0_ & ~0x00000008);
        removeByDst_ = false;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> dstAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public boolean hasDstAddr() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
        if (dstAddrBuilder_ == null) {
          return dstAddr_;
        } else {
          return dstAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public Builder setDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dstAddr_ = value;
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public Builder setDstAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = builderForValue.build();
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public Builder mergeDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              dstAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            dstAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(dstAddr_).mergeFrom(value).buildPartial();
          } else {
            dstAddr_ = value;
          }
          onChanged();
        } else {
          dstAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public Builder clearDstAddr() {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getDstAddrBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getDstAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
        if (dstAddrBuilder_ != null) {
          return dstAddrBuilder_.getMessageOrBuilder();
        } else {
          return dstAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getDstAddrFieldBuilder() {
        if (dstAddrBuilder_ == null) {
          dstAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  dstAddr_,
                  getParentForChildren(),
                  isClean());
          dstAddr_ = null;
        }
        return dstAddrBuilder_;
      }

      // optional uint32 ClientTick = 6;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 6;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 ClientTick = 6;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 6;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000020;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 6;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000020);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 7;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000040);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssStopReceiveFromBridgeReq)
    }

    static {
      defaultInstance = new CltDssStopReceiveFromBridgeReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssStopReceiveFromBridgeReq)
  }

  public interface DssCltStopReceiveFromBridgeAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 BridgeHandle = 2;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    boolean hasBridgeHandle();
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    int getBridgeHandle();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
     */
    boolean hasMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder();

    // optional bool RemoveByDst = 4;
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    boolean hasRemoveByDst();
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    boolean getRemoveByDst();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
     */
    boolean hasDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder();

    // optional string MeetingHandle = 6;
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltStopReceiveFromBridgeAck}
   */
  public static final class DssCltStopReceiveFromBridgeAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltStopReceiveFromBridgeAckOrBuilder {
    // Use DssCltStopReceiveFromBridgeAck.newBuilder() to construct.
    private DssCltStopReceiveFromBridgeAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltStopReceiveFromBridgeAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltStopReceiveFromBridgeAck defaultInstance;
    public static DssCltStopReceiveFromBridgeAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltStopReceiveFromBridgeAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopReceiveFromBridgeAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopReceiveFromBridgeAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltStopReceiveFromBridgeAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltStopReceiveFromBridgeAck>() {
      public DssCltStopReceiveFromBridgeAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltStopReceiveFromBridgeAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 BridgeHandle = 2;
    public static final int BRIDGEHANDLE_FIELD_NUMBER = 2;
    private int bridgeHandle_;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public boolean hasBridgeHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public int getBridgeHandle() {
      return bridgeHandle_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;
    public static final int MAPADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
     */
    public boolean hasMapAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
      return mapAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
      return mapAddr_;
    }

    // optional bool RemoveByDst = 4;
    public static final int REMOVEBYDST_FIELD_NUMBER = 4;
    private boolean removeByDst_;
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    public boolean hasRemoveByDst() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    public boolean getRemoveByDst() {
      return removeByDst_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;
    public static final int DSTADDR_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
     */
    public boolean hasDstAddr() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
      return dstAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
      return dstAddr_;
    }

    // optional string MeetingHandle = 6;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 6;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientId_ = 0;
      bridgeHandle_ = 0;
      mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      removeByDst_ = false;
      dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltStopReceiveFromBridgeAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopReceiveFromBridgeAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopReceiveFromBridgeAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMapAddrFieldBuilder();
          getDstAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bridgeHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        removeByDst_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopReceiveFromBridgeAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bridgeHandle_ = bridgeHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (mapAddrBuilder_ == null) {
          result.mapAddr_ = mapAddr_;
        } else {
          result.mapAddr_ = mapAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.removeByDst_ = removeByDst_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (dstAddrBuilder_ == null) {
          result.dstAddr_ = dstAddr_;
        } else {
          result.dstAddr_ = dstAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 BridgeHandle = 2;
      private int bridgeHandle_ ;
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public boolean hasBridgeHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public int getBridgeHandle() {
        return bridgeHandle_;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder setBridgeHandle(int value) {
        bitField0_ |= 0x00000002;
        bridgeHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder clearBridgeHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bridgeHandle_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> mapAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public boolean hasMapAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
        if (mapAddrBuilder_ == null) {
          return mapAddr_;
        } else {
          return mapAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public Builder setMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mapAddr_ = value;
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public Builder setMapAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = builderForValue.build();
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public Builder mergeMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              mapAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            mapAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(mapAddr_).mergeFrom(value).buildPartial();
          } else {
            mapAddr_ = value;
          }
          onChanged();
        } else {
          mapAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public Builder clearMapAddr() {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getMapAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getMapAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
        if (mapAddrBuilder_ != null) {
          return mapAddrBuilder_.getMessageOrBuilder();
        } else {
          return mapAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getMapAddrFieldBuilder() {
        if (mapAddrBuilder_ == null) {
          mapAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  mapAddr_,
                  getParentForChildren(),
                  isClean());
          mapAddr_ = null;
        }
        return mapAddrBuilder_;
      }

      // optional bool RemoveByDst = 4;
      private boolean removeByDst_ ;
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public boolean hasRemoveByDst() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public boolean getRemoveByDst() {
        return removeByDst_;
      }
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public Builder setRemoveByDst(boolean value) {
        bitField0_ |= 0x00000008;
        removeByDst_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public Builder clearRemoveByDst() {
        bitField0_ = (bitField0_ & ~0x00000008);
        removeByDst_ = false;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> dstAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public boolean hasDstAddr() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
        if (dstAddrBuilder_ == null) {
          return dstAddr_;
        } else {
          return dstAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public Builder setDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dstAddr_ = value;
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public Builder setDstAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = builderForValue.build();
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public Builder mergeDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              dstAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            dstAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(dstAddr_).mergeFrom(value).buildPartial();
          } else {
            dstAddr_ = value;
          }
          onChanged();
        } else {
          dstAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public Builder clearDstAddr() {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getDstAddrBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getDstAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
        if (dstAddrBuilder_ != null) {
          return dstAddrBuilder_.getMessageOrBuilder();
        } else {
          return dstAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getDstAddrFieldBuilder() {
        if (dstAddrBuilder_ == null) {
          dstAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  dstAddr_,
                  getParentForChildren(),
                  isClean());
          dstAddr_ = null;
        }
        return dstAddrBuilder_;
      }

      // optional string MeetingHandle = 6;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000020);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltStopReceiveFromBridgeAck)
    }

    static {
      defaultInstance = new DssCltStopReceiveFromBridgeAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltStopReceiveFromBridgeAck)
  }

  public interface DssCltStopReceiveFromBridgeNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 BridgeHandle = 2;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    boolean hasBridgeHandle();
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    int getBridgeHandle();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
     */
    boolean hasMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder();

    // optional bool RemoveByDst = 4;
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    boolean hasRemoveByDst();
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    boolean getRemoveByDst();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
     */
    boolean hasDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder();

    // optional string MeetingHandle = 6;
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional .com.kedacom.ops.flink.etl.proto.EStopReceiveFromBridgeResultCode ResultCode = 7;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EStopReceiveFromBridgeResultCode ResultCode = 7;</code>
     */
    boolean hasResultCode();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EStopReceiveFromBridgeResultCode ResultCode = 7;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.EStopReceiveFromBridgeResultCode getResultCode();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltStopReceiveFromBridgeNack}
   */
  public static final class DssCltStopReceiveFromBridgeNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltStopReceiveFromBridgeNackOrBuilder {
    // Use DssCltStopReceiveFromBridgeNack.newBuilder() to construct.
    private DssCltStopReceiveFromBridgeNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltStopReceiveFromBridgeNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltStopReceiveFromBridgeNack defaultInstance;
    public static DssCltStopReceiveFromBridgeNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltStopReceiveFromBridgeNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopReceiveFromBridgeNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopReceiveFromBridgeNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltStopReceiveFromBridgeNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltStopReceiveFromBridgeNack>() {
      public DssCltStopReceiveFromBridgeNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltStopReceiveFromBridgeNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 BridgeHandle = 2;
    public static final int BRIDGEHANDLE_FIELD_NUMBER = 2;
    private int bridgeHandle_;
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public boolean hasBridgeHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 BridgeHandle = 2;</code>
     */
    public int getBridgeHandle() {
      return bridgeHandle_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;
    public static final int MAPADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
     */
    public boolean hasMapAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
      return mapAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
      return mapAddr_;
    }

    // optional bool RemoveByDst = 4;
    public static final int REMOVEBYDST_FIELD_NUMBER = 4;
    private boolean removeByDst_;
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    public boolean hasRemoveByDst() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool RemoveByDst = 4;</code>
     */
    public boolean getRemoveByDst() {
      return removeByDst_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;
    public static final int DSTADDR_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
     */
    public boolean hasDstAddr() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
      return dstAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
      return dstAddr_;
    }

    // optional string MeetingHandle = 6;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 6;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .com.kedacom.ops.flink.etl.proto.EStopReceiveFromBridgeResultCode ResultCode = 7;
    public static final int RESULTCODE_FIELD_NUMBER = 7;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.EStopReceiveFromBridgeResultCode resultCode_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EStopReceiveFromBridgeResultCode ResultCode = 7;</code>
     */
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EStopReceiveFromBridgeResultCode ResultCode = 7;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.EStopReceiveFromBridgeResultCode getResultCode() {
      return resultCode_;
    }

    private void initFields() {
      clientId_ = 0;
      bridgeHandle_ = 0;
      mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      removeByDst_ = false;
      dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      meetingHandle_ = "";
      resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EStopReceiveFromBridgeResultCode.eStopReceiveFromBridgeSucceed;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltStopReceiveFromBridgeNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopReceiveFromBridgeNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopReceiveFromBridgeNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMapAddrFieldBuilder();
          getDstAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bridgeHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        removeByDst_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EStopReceiveFromBridgeResultCode.eStopReceiveFromBridgeSucceed;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopReceiveFromBridgeNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltStopReceiveFromBridgeNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bridgeHandle_ = bridgeHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (mapAddrBuilder_ == null) {
          result.mapAddr_ = mapAddr_;
        } else {
          result.mapAddr_ = mapAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.removeByDst_ = removeByDst_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (dstAddrBuilder_ == null) {
          result.dstAddr_ = dstAddr_;
        } else {
          result.dstAddr_ = dstAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.resultCode_ = resultCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 BridgeHandle = 2;
      private int bridgeHandle_ ;
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public boolean hasBridgeHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public int getBridgeHandle() {
        return bridgeHandle_;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder setBridgeHandle(int value) {
        bitField0_ |= 0x00000002;
        bridgeHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BridgeHandle = 2;</code>
       */
      public Builder clearBridgeHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bridgeHandle_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> mapAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public boolean hasMapAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
        if (mapAddrBuilder_ == null) {
          return mapAddr_;
        } else {
          return mapAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public Builder setMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mapAddr_ = value;
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public Builder setMapAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = builderForValue.build();
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public Builder mergeMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              mapAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            mapAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(mapAddr_).mergeFrom(value).buildPartial();
          } else {
            mapAddr_ = value;
          }
          onChanged();
        } else {
          mapAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public Builder clearMapAddr() {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getMapAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getMapAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
        if (mapAddrBuilder_ != null) {
          return mapAddrBuilder_.getMessageOrBuilder();
        } else {
          return mapAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getMapAddrFieldBuilder() {
        if (mapAddrBuilder_ == null) {
          mapAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  mapAddr_,
                  getParentForChildren(),
                  isClean());
          mapAddr_ = null;
        }
        return mapAddrBuilder_;
      }

      // optional bool RemoveByDst = 4;
      private boolean removeByDst_ ;
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public boolean hasRemoveByDst() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public boolean getRemoveByDst() {
        return removeByDst_;
      }
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public Builder setRemoveByDst(boolean value) {
        bitField0_ |= 0x00000008;
        removeByDst_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool RemoveByDst = 4;</code>
       */
      public Builder clearRemoveByDst() {
        bitField0_ = (bitField0_ & ~0x00000008);
        removeByDst_ = false;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> dstAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public boolean hasDstAddr() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
        if (dstAddrBuilder_ == null) {
          return dstAddr_;
        } else {
          return dstAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public Builder setDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dstAddr_ = value;
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public Builder setDstAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = builderForValue.build();
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public Builder mergeDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              dstAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            dstAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(dstAddr_).mergeFrom(value).buildPartial();
          } else {
            dstAddr_ = value;
          }
          onChanged();
        } else {
          dstAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public Builder clearDstAddr() {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getDstAddrBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getDstAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
        if (dstAddrBuilder_ != null) {
          return dstAddrBuilder_.getMessageOrBuilder();
        } else {
          return dstAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getDstAddrFieldBuilder() {
        if (dstAddrBuilder_ == null) {
          dstAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  dstAddr_,
                  getParentForChildren(),
                  isClean());
          dstAddr_ = null;
        }
        return dstAddrBuilder_;
      }

      // optional string MeetingHandle = 6;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000020);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.EStopReceiveFromBridgeResultCode ResultCode = 7;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.EStopReceiveFromBridgeResultCode resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EStopReceiveFromBridgeResultCode.eStopReceiveFromBridgeSucceed;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EStopReceiveFromBridgeResultCode ResultCode = 7;</code>
       */
      public boolean hasResultCode() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EStopReceiveFromBridgeResultCode ResultCode = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.EStopReceiveFromBridgeResultCode getResultCode() {
        return resultCode_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EStopReceiveFromBridgeResultCode ResultCode = 7;</code>
       */
      public Builder setResultCode(com.kedacom.ops.flink.etl.proto.Dssevenum.EStopReceiveFromBridgeResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        resultCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EStopReceiveFromBridgeResultCode ResultCode = 7;</code>
       */
      public Builder clearResultCode() {
        bitField0_ = (bitField0_ & ~0x00000040);
        resultCode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EStopReceiveFromBridgeResultCode.eStopReceiveFromBridgeSucceed;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltStopReceiveFromBridgeNack)
    }

    static {
      defaultInstance = new DssCltStopReceiveFromBridgeNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltStopReceiveFromBridgeNack)
  }

  public interface CltDssAddSwitchReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    boolean hasDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    boolean hasMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    boolean hasSwitchType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType();

    // optional bool DisFec = 6;
    /**
     * <code>optional bool DisFec = 6;</code>
     */
    boolean hasDisFec();
    /**
     * <code>optional bool DisFec = 6;</code>
     */
    boolean getDisFec();

    // optional bool MdyRtpData = 7;
    /**
     * <code>optional bool MdyRtpData = 7;</code>
     */
    boolean hasMdyRtpData();
    /**
     * <code>optional bool MdyRtpData = 7;</code>
     */
    boolean getMdyRtpData();

    // optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
     */
    boolean hasCipher();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher getCipher();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder getCipherOrBuilder();

    // optional bool FixedSsrc = 9;
    /**
     * <code>optional bool FixedSsrc = 9;</code>
     */
    boolean hasFixedSsrc();
    /**
     * <code>optional bool FixedSsrc = 9;</code>
     */
    boolean getFixedSsrc();

    // optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
     */
    boolean hasFixedpt();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt getFixedpt();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder getFixedptOrBuilder();

    // optional bool FilterRed = 11;
    /**
     * <code>optional bool FilterRed = 11;</code>
     */
    boolean hasFilterRed();
    /**
     * <code>optional bool FilterRed = 11;</code>
     */
    boolean getFilterRed();

    // optional bool RemoveExt = 12;
    /**
     * <code>optional bool RemoveExt = 12;</code>
     */
    boolean hasRemoveExt();
    /**
     * <code>optional bool RemoveExt = 12;</code>
     */
    boolean getRemoveExt();

    // optional uint32 ClientTick = 13;
    /**
     * <code>optional uint32 ClientTick = 13;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 13;</code>
     */
    int getClientTick();

    // optional string MeetingHandle = 14;
    /**
     * <code>optional string MeetingHandle = 14;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 14;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 14;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 15;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 15;</code>
     */
    boolean hasSwitchStreamType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 15;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType getSwitchStreamType();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 16;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 16;</code>
     */
    boolean hasSwitchDirectionType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 16;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType getSwitchDirectionType();

    // optional bytes AnalysisContext = 17;
    /**
     * <code>optional bytes AnalysisContext = 17;</code>
     */
    boolean hasAnalysisContext();
    /**
     * <code>optional bytes AnalysisContext = 17;</code>
     */
    com.google.protobuf.ByteString getAnalysisContext();

    // optional bool DsAllocEpAttrPayloadHole = 18;
    /**
     * <code>optional bool DsAllocEpAttrPayloadHole = 18;</code>
     */
    boolean hasDsAllocEpAttrPayloadHole();
    /**
     * <code>optional bool DsAllocEpAttrPayloadHole = 18;</code>
     */
    boolean getDsAllocEpAttrPayloadHole();

    // optional bool EpSilentAttr = 19;
    /**
     * <code>optional bool EpSilentAttr = 19;</code>
     */
    boolean hasEpSilentAttr();
    /**
     * <code>optional bool EpSilentAttr = 19;</code>
     */
    boolean getEpSilentAttr();

    // optional bool EpMuteAttr = 20;
    /**
     * <code>optional bool EpMuteAttr = 20;</code>
     */
    boolean hasEpMuteAttr();
    /**
     * <code>optional bool EpMuteAttr = 20;</code>
     */
    boolean getEpMuteAttr();

    // optional bool isValidSSRC = 21;
    /**
     * <code>optional bool isValidSSRC = 21;</code>
     */
    boolean hasIsValidSSRC();
    /**
     * <code>optional bool isValidSSRC = 21;</code>
     */
    boolean getIsValidSSRC();

    // optional uint32 ssrc = 22;
    /**
     * <code>optional uint32 ssrc = 22;</code>
     */
    boolean hasSsrc();
    /**
     * <code>optional uint32 ssrc = 22;</code>
     */
    int getSsrc();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssAddSwitchReq}
   */
  public static final class CltDssAddSwitchReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssAddSwitchReqOrBuilder {
    // Use CltDssAddSwitchReq.newBuilder() to construct.
    private CltDssAddSwitchReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssAddSwitchReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssAddSwitchReq defaultInstance;
    public static CltDssAddSwitchReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssAddSwitchReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddSwitchReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddSwitchReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssAddSwitchReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssAddSwitchReq>() {
      public CltDssAddSwitchReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssAddSwitchReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    public static final int DSTADDR_FIELD_NUMBER = 2;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public boolean hasDstAddr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
      return dstAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
      return dstAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    public static final int MAPADDR_FIELD_NUMBER = 4;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public boolean hasMapAddr() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
      return mapAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
      return mapAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    public static final int SWITCHTYPE_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public boolean hasSwitchType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
      return switchType_;
    }

    // optional bool DisFec = 6;
    public static final int DISFEC_FIELD_NUMBER = 6;
    private boolean disFec_;
    /**
     * <code>optional bool DisFec = 6;</code>
     */
    public boolean hasDisFec() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool DisFec = 6;</code>
     */
    public boolean getDisFec() {
      return disFec_;
    }

    // optional bool MdyRtpData = 7;
    public static final int MDYRTPDATA_FIELD_NUMBER = 7;
    private boolean mdyRtpData_;
    /**
     * <code>optional bool MdyRtpData = 7;</code>
     */
    public boolean hasMdyRtpData() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool MdyRtpData = 7;</code>
     */
    public boolean getMdyRtpData() {
      return mdyRtpData_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;
    public static final int CIPHER_FIELD_NUMBER = 8;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher cipher_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
     */
    public boolean hasCipher() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher getCipher() {
      return cipher_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder getCipherOrBuilder() {
      return cipher_;
    }

    // optional bool FixedSsrc = 9;
    public static final int FIXEDSSRC_FIELD_NUMBER = 9;
    private boolean fixedSsrc_;
    /**
     * <code>optional bool FixedSsrc = 9;</code>
     */
    public boolean hasFixedSsrc() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool FixedSsrc = 9;</code>
     */
    public boolean getFixedSsrc() {
      return fixedSsrc_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;
    public static final int FIXEDPT_FIELD_NUMBER = 10;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt fixedpt_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
     */
    public boolean hasFixedpt() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt getFixedpt() {
      return fixedpt_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder getFixedptOrBuilder() {
      return fixedpt_;
    }

    // optional bool FilterRed = 11;
    public static final int FILTERRED_FIELD_NUMBER = 11;
    private boolean filterRed_;
    /**
     * <code>optional bool FilterRed = 11;</code>
     */
    public boolean hasFilterRed() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool FilterRed = 11;</code>
     */
    public boolean getFilterRed() {
      return filterRed_;
    }

    // optional bool RemoveExt = 12;
    public static final int REMOVEEXT_FIELD_NUMBER = 12;
    private boolean removeExt_;
    /**
     * <code>optional bool RemoveExt = 12;</code>
     */
    public boolean hasRemoveExt() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool RemoveExt = 12;</code>
     */
    public boolean getRemoveExt() {
      return removeExt_;
    }

    // optional uint32 ClientTick = 13;
    public static final int CLIENTTICK_FIELD_NUMBER = 13;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 13;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 ClientTick = 13;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    // optional string MeetingHandle = 14;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 14;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 14;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional string MeetingHandle = 14;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 14;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 15;
    public static final int SWITCHSTREAMTYPE_FIELD_NUMBER = 15;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType switchStreamType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 15;</code>
     */
    public boolean hasSwitchStreamType() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 15;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType getSwitchStreamType() {
      return switchStreamType_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 16;
    public static final int SWITCHDIRECTIONTYPE_FIELD_NUMBER = 16;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType switchDirectionType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 16;</code>
     */
    public boolean hasSwitchDirectionType() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 16;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType getSwitchDirectionType() {
      return switchDirectionType_;
    }

    // optional bytes AnalysisContext = 17;
    public static final int ANALYSISCONTEXT_FIELD_NUMBER = 17;
    private com.google.protobuf.ByteString analysisContext_;
    /**
     * <code>optional bytes AnalysisContext = 17;</code>
     */
    public boolean hasAnalysisContext() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional bytes AnalysisContext = 17;</code>
     */
    public com.google.protobuf.ByteString getAnalysisContext() {
      return analysisContext_;
    }

    // optional bool DsAllocEpAttrPayloadHole = 18;
    public static final int DSALLOCEPATTRPAYLOADHOLE_FIELD_NUMBER = 18;
    private boolean dsAllocEpAttrPayloadHole_;
    /**
     * <code>optional bool DsAllocEpAttrPayloadHole = 18;</code>
     */
    public boolean hasDsAllocEpAttrPayloadHole() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional bool DsAllocEpAttrPayloadHole = 18;</code>
     */
    public boolean getDsAllocEpAttrPayloadHole() {
      return dsAllocEpAttrPayloadHole_;
    }

    // optional bool EpSilentAttr = 19;
    public static final int EPSILENTATTR_FIELD_NUMBER = 19;
    private boolean epSilentAttr_;
    /**
     * <code>optional bool EpSilentAttr = 19;</code>
     */
    public boolean hasEpSilentAttr() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional bool EpSilentAttr = 19;</code>
     */
    public boolean getEpSilentAttr() {
      return epSilentAttr_;
    }

    // optional bool EpMuteAttr = 20;
    public static final int EPMUTEATTR_FIELD_NUMBER = 20;
    private boolean epMuteAttr_;
    /**
     * <code>optional bool EpMuteAttr = 20;</code>
     */
    public boolean hasEpMuteAttr() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional bool EpMuteAttr = 20;</code>
     */
    public boolean getEpMuteAttr() {
      return epMuteAttr_;
    }

    // optional bool isValidSSRC = 21;
    public static final int ISVALIDSSRC_FIELD_NUMBER = 21;
    private boolean isValidSSRC_;
    /**
     * <code>optional bool isValidSSRC = 21;</code>
     */
    public boolean hasIsValidSSRC() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional bool isValidSSRC = 21;</code>
     */
    public boolean getIsValidSSRC() {
      return isValidSSRC_;
    }

    // optional uint32 ssrc = 22;
    public static final int SSRC_FIELD_NUMBER = 22;
    private int ssrc_;
    /**
     * <code>optional uint32 ssrc = 22;</code>
     */
    public boolean hasSsrc() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional uint32 ssrc = 22;</code>
     */
    public int getSsrc() {
      return ssrc_;
    }

    private void initFields() {
      clientId_ = 0;
      dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      disFec_ = false;
      mdyRtpData_ = false;
      cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
      fixedSsrc_ = false;
      fixedpt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
      filterRed_ = false;
      removeExt_ = false;
      clientTick_ = 0;
      meetingHandle_ = "";
      switchStreamType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType.StreamType_Unknown;
      switchDirectionType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType.DSDIRECTION_NONE;
      analysisContext_ = com.google.protobuf.ByteString.EMPTY;
      dsAllocEpAttrPayloadHole_ = false;
      epSilentAttr_ = false;
      epMuteAttr_ = false;
      isValidSSRC_ = false;
      ssrc_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssAddSwitchReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddSwitchReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddSwitchReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDstAddrFieldBuilder();
          getRcvAddrFieldBuilder();
          getMapAddrFieldBuilder();
          getCipherFieldBuilder();
          getFixedptFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        bitField0_ = (bitField0_ & ~0x00000010);
        disFec_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        mdyRtpData_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (cipherBuilder_ == null) {
          cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
        } else {
          cipherBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        fixedSsrc_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (fixedptBuilder_ == null) {
          fixedpt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
        } else {
          fixedptBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        filterRed_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        removeExt_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        switchStreamType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType.StreamType_Unknown;
        bitField0_ = (bitField0_ & ~0x00004000);
        switchDirectionType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType.DSDIRECTION_NONE;
        bitField0_ = (bitField0_ & ~0x00008000);
        analysisContext_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00010000);
        dsAllocEpAttrPayloadHole_ = false;
        bitField0_ = (bitField0_ & ~0x00020000);
        epSilentAttr_ = false;
        bitField0_ = (bitField0_ & ~0x00040000);
        epMuteAttr_ = false;
        bitField0_ = (bitField0_ & ~0x00080000);
        isValidSSRC_ = false;
        bitField0_ = (bitField0_ & ~0x00100000);
        ssrc_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddSwitchReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddSwitchReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (dstAddrBuilder_ == null) {
          result.dstAddr_ = dstAddr_;
        } else {
          result.dstAddr_ = dstAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (mapAddrBuilder_ == null) {
          result.mapAddr_ = mapAddr_;
        } else {
          result.mapAddr_ = mapAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.switchType_ = switchType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.disFec_ = disFec_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.mdyRtpData_ = mdyRtpData_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (cipherBuilder_ == null) {
          result.cipher_ = cipher_;
        } else {
          result.cipher_ = cipherBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.fixedSsrc_ = fixedSsrc_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (fixedptBuilder_ == null) {
          result.fixedpt_ = fixedpt_;
        } else {
          result.fixedpt_ = fixedptBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.filterRed_ = filterRed_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.removeExt_ = removeExt_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.clientTick_ = clientTick_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.switchStreamType_ = switchStreamType_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.switchDirectionType_ = switchDirectionType_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.analysisContext_ = analysisContext_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.dsAllocEpAttrPayloadHole_ = dsAllocEpAttrPayloadHole_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.epSilentAttr_ = epSilentAttr_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.epMuteAttr_ = epMuteAttr_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.isValidSSRC_ = isValidSSRC_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.ssrc_ = ssrc_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> dstAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public boolean hasDstAddr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
        if (dstAddrBuilder_ == null) {
          return dstAddr_;
        } else {
          return dstAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dstAddr_ = value;
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = builderForValue.build();
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder mergeDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              dstAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            dstAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(dstAddr_).mergeFrom(value).buildPartial();
          } else {
            dstAddr_ = value;
          }
          onChanged();
        } else {
          dstAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder clearDstAddr() {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getDstAddrBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDstAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
        if (dstAddrBuilder_ != null) {
          return dstAddrBuilder_.getMessageOrBuilder();
        } else {
          return dstAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getDstAddrFieldBuilder() {
        if (dstAddrBuilder_ == null) {
          dstAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  dstAddr_,
                  getParentForChildren(),
                  isClean());
          dstAddr_ = null;
        }
        return dstAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> mapAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public boolean hasMapAddr() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
        if (mapAddrBuilder_ == null) {
          return mapAddr_;
        } else {
          return mapAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mapAddr_ = value;
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = builderForValue.build();
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder mergeMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              mapAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            mapAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(mapAddr_).mergeFrom(value).buildPartial();
          } else {
            mapAddr_ = value;
          }
          onChanged();
        } else {
          mapAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder clearMapAddr() {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getMapAddrBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getMapAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
        if (mapAddrBuilder_ != null) {
          return mapAddrBuilder_.getMessageOrBuilder();
        } else {
          return mapAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getMapAddrFieldBuilder() {
        if (mapAddrBuilder_ == null) {
          mapAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  mapAddr_,
                  getParentForChildren(),
                  isClean());
          mapAddr_ = null;
        }
        return mapAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public boolean hasSwitchType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
        return switchType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder setSwitchType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        switchType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder clearSwitchType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        onChanged();
        return this;
      }

      // optional bool DisFec = 6;
      private boolean disFec_ ;
      /**
       * <code>optional bool DisFec = 6;</code>
       */
      public boolean hasDisFec() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool DisFec = 6;</code>
       */
      public boolean getDisFec() {
        return disFec_;
      }
      /**
       * <code>optional bool DisFec = 6;</code>
       */
      public Builder setDisFec(boolean value) {
        bitField0_ |= 0x00000020;
        disFec_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool DisFec = 6;</code>
       */
      public Builder clearDisFec() {
        bitField0_ = (bitField0_ & ~0x00000020);
        disFec_ = false;
        onChanged();
        return this;
      }

      // optional bool MdyRtpData = 7;
      private boolean mdyRtpData_ ;
      /**
       * <code>optional bool MdyRtpData = 7;</code>
       */
      public boolean hasMdyRtpData() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool MdyRtpData = 7;</code>
       */
      public boolean getMdyRtpData() {
        return mdyRtpData_;
      }
      /**
       * <code>optional bool MdyRtpData = 7;</code>
       */
      public Builder setMdyRtpData(boolean value) {
        bitField0_ |= 0x00000040;
        mdyRtpData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool MdyRtpData = 7;</code>
       */
      public Builder clearMdyRtpData() {
        bitField0_ = (bitField0_ & ~0x00000040);
        mdyRtpData_ = false;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder> cipherBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public boolean hasCipher() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher getCipher() {
        if (cipherBuilder_ == null) {
          return cipher_;
        } else {
          return cipherBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public Builder setCipher(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher value) {
        if (cipherBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cipher_ = value;
          onChanged();
        } else {
          cipherBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public Builder setCipher(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder builderForValue) {
        if (cipherBuilder_ == null) {
          cipher_ = builderForValue.build();
          onChanged();
        } else {
          cipherBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public Builder mergeCipher(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher value) {
        if (cipherBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              cipher_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance()) {
            cipher_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.newBuilder(cipher_).mergeFrom(value).buildPartial();
          } else {
            cipher_ = value;
          }
          onChanged();
        } else {
          cipherBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public Builder clearCipher() {
        if (cipherBuilder_ == null) {
          cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
          onChanged();
        } else {
          cipherBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder getCipherBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getCipherFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder getCipherOrBuilder() {
        if (cipherBuilder_ != null) {
          return cipherBuilder_.getMessageOrBuilder();
        } else {
          return cipher_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder> 
          getCipherFieldBuilder() {
        if (cipherBuilder_ == null) {
          cipherBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder>(
                  cipher_,
                  getParentForChildren(),
                  isClean());
          cipher_ = null;
        }
        return cipherBuilder_;
      }

      // optional bool FixedSsrc = 9;
      private boolean fixedSsrc_ ;
      /**
       * <code>optional bool FixedSsrc = 9;</code>
       */
      public boolean hasFixedSsrc() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool FixedSsrc = 9;</code>
       */
      public boolean getFixedSsrc() {
        return fixedSsrc_;
      }
      /**
       * <code>optional bool FixedSsrc = 9;</code>
       */
      public Builder setFixedSsrc(boolean value) {
        bitField0_ |= 0x00000100;
        fixedSsrc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool FixedSsrc = 9;</code>
       */
      public Builder clearFixedSsrc() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fixedSsrc_ = false;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt fixedpt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder> fixedptBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public boolean hasFixedpt() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt getFixedpt() {
        if (fixedptBuilder_ == null) {
          return fixedpt_;
        } else {
          return fixedptBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public Builder setFixedpt(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt value) {
        if (fixedptBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fixedpt_ = value;
          onChanged();
        } else {
          fixedptBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public Builder setFixedpt(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder builderForValue) {
        if (fixedptBuilder_ == null) {
          fixedpt_ = builderForValue.build();
          onChanged();
        } else {
          fixedptBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public Builder mergeFixedpt(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt value) {
        if (fixedptBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              fixedpt_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance()) {
            fixedpt_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.newBuilder(fixedpt_).mergeFrom(value).buildPartial();
          } else {
            fixedpt_ = value;
          }
          onChanged();
        } else {
          fixedptBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public Builder clearFixedpt() {
        if (fixedptBuilder_ == null) {
          fixedpt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
          onChanged();
        } else {
          fixedptBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder getFixedptBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getFixedptFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder getFixedptOrBuilder() {
        if (fixedptBuilder_ != null) {
          return fixedptBuilder_.getMessageOrBuilder();
        } else {
          return fixedpt_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder> 
          getFixedptFieldBuilder() {
        if (fixedptBuilder_ == null) {
          fixedptBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder>(
                  fixedpt_,
                  getParentForChildren(),
                  isClean());
          fixedpt_ = null;
        }
        return fixedptBuilder_;
      }

      // optional bool FilterRed = 11;
      private boolean filterRed_ ;
      /**
       * <code>optional bool FilterRed = 11;</code>
       */
      public boolean hasFilterRed() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool FilterRed = 11;</code>
       */
      public boolean getFilterRed() {
        return filterRed_;
      }
      /**
       * <code>optional bool FilterRed = 11;</code>
       */
      public Builder setFilterRed(boolean value) {
        bitField0_ |= 0x00000400;
        filterRed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool FilterRed = 11;</code>
       */
      public Builder clearFilterRed() {
        bitField0_ = (bitField0_ & ~0x00000400);
        filterRed_ = false;
        onChanged();
        return this;
      }

      // optional bool RemoveExt = 12;
      private boolean removeExt_ ;
      /**
       * <code>optional bool RemoveExt = 12;</code>
       */
      public boolean hasRemoveExt() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool RemoveExt = 12;</code>
       */
      public boolean getRemoveExt() {
        return removeExt_;
      }
      /**
       * <code>optional bool RemoveExt = 12;</code>
       */
      public Builder setRemoveExt(boolean value) {
        bitField0_ |= 0x00000800;
        removeExt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool RemoveExt = 12;</code>
       */
      public Builder clearRemoveExt() {
        bitField0_ = (bitField0_ & ~0x00000800);
        removeExt_ = false;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 13;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 13;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 ClientTick = 13;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 13;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00001000;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 13;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00001000);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 14;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 14;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string MeetingHandle = 14;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 14;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 14;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 14;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00002000);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 14;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 15;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType switchStreamType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType.StreamType_Unknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 15;</code>
       */
      public boolean hasSwitchStreamType() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 15;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType getSwitchStreamType() {
        return switchStreamType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 15;</code>
       */
      public Builder setSwitchStreamType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00004000;
        switchStreamType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 15;</code>
       */
      public Builder clearSwitchStreamType() {
        bitField0_ = (bitField0_ & ~0x00004000);
        switchStreamType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType.StreamType_Unknown;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 16;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType switchDirectionType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType.DSDIRECTION_NONE;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 16;</code>
       */
      public boolean hasSwitchDirectionType() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 16;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType getSwitchDirectionType() {
        return switchDirectionType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 16;</code>
       */
      public Builder setSwitchDirectionType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00008000;
        switchDirectionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 16;</code>
       */
      public Builder clearSwitchDirectionType() {
        bitField0_ = (bitField0_ & ~0x00008000);
        switchDirectionType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType.DSDIRECTION_NONE;
        onChanged();
        return this;
      }

      // optional bytes AnalysisContext = 17;
      private com.google.protobuf.ByteString analysisContext_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes AnalysisContext = 17;</code>
       */
      public boolean hasAnalysisContext() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional bytes AnalysisContext = 17;</code>
       */
      public com.google.protobuf.ByteString getAnalysisContext() {
        return analysisContext_;
      }
      /**
       * <code>optional bytes AnalysisContext = 17;</code>
       */
      public Builder setAnalysisContext(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        analysisContext_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes AnalysisContext = 17;</code>
       */
      public Builder clearAnalysisContext() {
        bitField0_ = (bitField0_ & ~0x00010000);
        analysisContext_ = getDefaultInstance().getAnalysisContext();
        onChanged();
        return this;
      }

      // optional bool DsAllocEpAttrPayloadHole = 18;
      private boolean dsAllocEpAttrPayloadHole_ ;
      /**
       * <code>optional bool DsAllocEpAttrPayloadHole = 18;</code>
       */
      public boolean hasDsAllocEpAttrPayloadHole() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional bool DsAllocEpAttrPayloadHole = 18;</code>
       */
      public boolean getDsAllocEpAttrPayloadHole() {
        return dsAllocEpAttrPayloadHole_;
      }
      /**
       * <code>optional bool DsAllocEpAttrPayloadHole = 18;</code>
       */
      public Builder setDsAllocEpAttrPayloadHole(boolean value) {
        bitField0_ |= 0x00020000;
        dsAllocEpAttrPayloadHole_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool DsAllocEpAttrPayloadHole = 18;</code>
       */
      public Builder clearDsAllocEpAttrPayloadHole() {
        bitField0_ = (bitField0_ & ~0x00020000);
        dsAllocEpAttrPayloadHole_ = false;
        onChanged();
        return this;
      }

      // optional bool EpSilentAttr = 19;
      private boolean epSilentAttr_ ;
      /**
       * <code>optional bool EpSilentAttr = 19;</code>
       */
      public boolean hasEpSilentAttr() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional bool EpSilentAttr = 19;</code>
       */
      public boolean getEpSilentAttr() {
        return epSilentAttr_;
      }
      /**
       * <code>optional bool EpSilentAttr = 19;</code>
       */
      public Builder setEpSilentAttr(boolean value) {
        bitField0_ |= 0x00040000;
        epSilentAttr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool EpSilentAttr = 19;</code>
       */
      public Builder clearEpSilentAttr() {
        bitField0_ = (bitField0_ & ~0x00040000);
        epSilentAttr_ = false;
        onChanged();
        return this;
      }

      // optional bool EpMuteAttr = 20;
      private boolean epMuteAttr_ ;
      /**
       * <code>optional bool EpMuteAttr = 20;</code>
       */
      public boolean hasEpMuteAttr() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional bool EpMuteAttr = 20;</code>
       */
      public boolean getEpMuteAttr() {
        return epMuteAttr_;
      }
      /**
       * <code>optional bool EpMuteAttr = 20;</code>
       */
      public Builder setEpMuteAttr(boolean value) {
        bitField0_ |= 0x00080000;
        epMuteAttr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool EpMuteAttr = 20;</code>
       */
      public Builder clearEpMuteAttr() {
        bitField0_ = (bitField0_ & ~0x00080000);
        epMuteAttr_ = false;
        onChanged();
        return this;
      }

      // optional bool isValidSSRC = 21;
      private boolean isValidSSRC_ ;
      /**
       * <code>optional bool isValidSSRC = 21;</code>
       */
      public boolean hasIsValidSSRC() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional bool isValidSSRC = 21;</code>
       */
      public boolean getIsValidSSRC() {
        return isValidSSRC_;
      }
      /**
       * <code>optional bool isValidSSRC = 21;</code>
       */
      public Builder setIsValidSSRC(boolean value) {
        bitField0_ |= 0x00100000;
        isValidSSRC_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isValidSSRC = 21;</code>
       */
      public Builder clearIsValidSSRC() {
        bitField0_ = (bitField0_ & ~0x00100000);
        isValidSSRC_ = false;
        onChanged();
        return this;
      }

      // optional uint32 ssrc = 22;
      private int ssrc_ ;
      /**
       * <code>optional uint32 ssrc = 22;</code>
       */
      public boolean hasSsrc() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional uint32 ssrc = 22;</code>
       */
      public int getSsrc() {
        return ssrc_;
      }
      /**
       * <code>optional uint32 ssrc = 22;</code>
       */
      public Builder setSsrc(int value) {
        bitField0_ |= 0x00200000;
        ssrc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ssrc = 22;</code>
       */
      public Builder clearSsrc() {
        bitField0_ = (bitField0_ & ~0x00200000);
        ssrc_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssAddSwitchReq)
    }

    static {
      defaultInstance = new CltDssAddSwitchReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssAddSwitchReq)
  }

  public interface DssCltAddSwitchAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    boolean hasDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    boolean hasMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    boolean hasSwitchType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType();

    // optional bool DisFec = 6;
    /**
     * <code>optional bool DisFec = 6;</code>
     */
    boolean hasDisFec();
    /**
     * <code>optional bool DisFec = 6;</code>
     */
    boolean getDisFec();

    // optional bool MdyRtpData = 7;
    /**
     * <code>optional bool MdyRtpData = 7;</code>
     */
    boolean hasMdyRtpData();
    /**
     * <code>optional bool MdyRtpData = 7;</code>
     */
    boolean getMdyRtpData();

    // optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
     */
    boolean hasCipher();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher getCipher();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder getCipherOrBuilder();

    // optional bool FixedSsrc = 9;
    /**
     * <code>optional bool FixedSsrc = 9;</code>
     */
    boolean hasFixedSsrc();
    /**
     * <code>optional bool FixedSsrc = 9;</code>
     */
    boolean getFixedSsrc();

    // optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
     */
    boolean hasFixedpt();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt getFixedpt();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder getFixedptOrBuilder();

    // optional bool FilterRed = 11;
    /**
     * <code>optional bool FilterRed = 11;</code>
     */
    boolean hasFilterRed();
    /**
     * <code>optional bool FilterRed = 11;</code>
     */
    boolean getFilterRed();

    // optional bool RemoveExt = 12;
    /**
     * <code>optional bool RemoveExt = 12;</code>
     */
    boolean hasRemoveExt();
    /**
     * <code>optional bool RemoveExt = 12;</code>
     */
    boolean getRemoveExt();

    // optional string MeetingHandle = 13;
    /**
     * <code>optional string MeetingHandle = 13;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 13;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 13;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltAddSwitchAck}
   */
  public static final class DssCltAddSwitchAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltAddSwitchAckOrBuilder {
    // Use DssCltAddSwitchAck.newBuilder() to construct.
    private DssCltAddSwitchAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltAddSwitchAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltAddSwitchAck defaultInstance;
    public static DssCltAddSwitchAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltAddSwitchAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddSwitchAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddSwitchAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltAddSwitchAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltAddSwitchAck>() {
      public DssCltAddSwitchAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltAddSwitchAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    public static final int DSTADDR_FIELD_NUMBER = 2;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public boolean hasDstAddr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
      return dstAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
      return dstAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    public static final int MAPADDR_FIELD_NUMBER = 4;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public boolean hasMapAddr() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
      return mapAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
      return mapAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    public static final int SWITCHTYPE_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public boolean hasSwitchType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
      return switchType_;
    }

    // optional bool DisFec = 6;
    public static final int DISFEC_FIELD_NUMBER = 6;
    private boolean disFec_;
    /**
     * <code>optional bool DisFec = 6;</code>
     */
    public boolean hasDisFec() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool DisFec = 6;</code>
     */
    public boolean getDisFec() {
      return disFec_;
    }

    // optional bool MdyRtpData = 7;
    public static final int MDYRTPDATA_FIELD_NUMBER = 7;
    private boolean mdyRtpData_;
    /**
     * <code>optional bool MdyRtpData = 7;</code>
     */
    public boolean hasMdyRtpData() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool MdyRtpData = 7;</code>
     */
    public boolean getMdyRtpData() {
      return mdyRtpData_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;
    public static final int CIPHER_FIELD_NUMBER = 8;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher cipher_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
     */
    public boolean hasCipher() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher getCipher() {
      return cipher_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder getCipherOrBuilder() {
      return cipher_;
    }

    // optional bool FixedSsrc = 9;
    public static final int FIXEDSSRC_FIELD_NUMBER = 9;
    private boolean fixedSsrc_;
    /**
     * <code>optional bool FixedSsrc = 9;</code>
     */
    public boolean hasFixedSsrc() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool FixedSsrc = 9;</code>
     */
    public boolean getFixedSsrc() {
      return fixedSsrc_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;
    public static final int FIXEDPT_FIELD_NUMBER = 10;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt fixedpt_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
     */
    public boolean hasFixedpt() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt getFixedpt() {
      return fixedpt_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder getFixedptOrBuilder() {
      return fixedpt_;
    }

    // optional bool FilterRed = 11;
    public static final int FILTERRED_FIELD_NUMBER = 11;
    private boolean filterRed_;
    /**
     * <code>optional bool FilterRed = 11;</code>
     */
    public boolean hasFilterRed() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool FilterRed = 11;</code>
     */
    public boolean getFilterRed() {
      return filterRed_;
    }

    // optional bool RemoveExt = 12;
    public static final int REMOVEEXT_FIELD_NUMBER = 12;
    private boolean removeExt_;
    /**
     * <code>optional bool RemoveExt = 12;</code>
     */
    public boolean hasRemoveExt() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool RemoveExt = 12;</code>
     */
    public boolean getRemoveExt() {
      return removeExt_;
    }

    // optional string MeetingHandle = 13;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 13;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 13;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string MeetingHandle = 13;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 13;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientId_ = 0;
      dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      disFec_ = false;
      mdyRtpData_ = false;
      cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
      fixedSsrc_ = false;
      fixedpt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
      filterRed_ = false;
      removeExt_ = false;
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltAddSwitchAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddSwitchAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddSwitchAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDstAddrFieldBuilder();
          getRcvAddrFieldBuilder();
          getMapAddrFieldBuilder();
          getCipherFieldBuilder();
          getFixedptFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        bitField0_ = (bitField0_ & ~0x00000010);
        disFec_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        mdyRtpData_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (cipherBuilder_ == null) {
          cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
        } else {
          cipherBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        fixedSsrc_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (fixedptBuilder_ == null) {
          fixedpt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
        } else {
          fixedptBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        filterRed_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        removeExt_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddSwitchAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (dstAddrBuilder_ == null) {
          result.dstAddr_ = dstAddr_;
        } else {
          result.dstAddr_ = dstAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (mapAddrBuilder_ == null) {
          result.mapAddr_ = mapAddr_;
        } else {
          result.mapAddr_ = mapAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.switchType_ = switchType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.disFec_ = disFec_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.mdyRtpData_ = mdyRtpData_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (cipherBuilder_ == null) {
          result.cipher_ = cipher_;
        } else {
          result.cipher_ = cipherBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.fixedSsrc_ = fixedSsrc_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (fixedptBuilder_ == null) {
          result.fixedpt_ = fixedpt_;
        } else {
          result.fixedpt_ = fixedptBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.filterRed_ = filterRed_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.removeExt_ = removeExt_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> dstAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public boolean hasDstAddr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
        if (dstAddrBuilder_ == null) {
          return dstAddr_;
        } else {
          return dstAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dstAddr_ = value;
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = builderForValue.build();
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder mergeDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              dstAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            dstAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(dstAddr_).mergeFrom(value).buildPartial();
          } else {
            dstAddr_ = value;
          }
          onChanged();
        } else {
          dstAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder clearDstAddr() {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getDstAddrBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDstAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
        if (dstAddrBuilder_ != null) {
          return dstAddrBuilder_.getMessageOrBuilder();
        } else {
          return dstAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getDstAddrFieldBuilder() {
        if (dstAddrBuilder_ == null) {
          dstAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  dstAddr_,
                  getParentForChildren(),
                  isClean());
          dstAddr_ = null;
        }
        return dstAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> mapAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public boolean hasMapAddr() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
        if (mapAddrBuilder_ == null) {
          return mapAddr_;
        } else {
          return mapAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mapAddr_ = value;
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = builderForValue.build();
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder mergeMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              mapAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            mapAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(mapAddr_).mergeFrom(value).buildPartial();
          } else {
            mapAddr_ = value;
          }
          onChanged();
        } else {
          mapAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder clearMapAddr() {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getMapAddrBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getMapAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
        if (mapAddrBuilder_ != null) {
          return mapAddrBuilder_.getMessageOrBuilder();
        } else {
          return mapAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getMapAddrFieldBuilder() {
        if (mapAddrBuilder_ == null) {
          mapAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  mapAddr_,
                  getParentForChildren(),
                  isClean());
          mapAddr_ = null;
        }
        return mapAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public boolean hasSwitchType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
        return switchType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder setSwitchType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        switchType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder clearSwitchType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        onChanged();
        return this;
      }

      // optional bool DisFec = 6;
      private boolean disFec_ ;
      /**
       * <code>optional bool DisFec = 6;</code>
       */
      public boolean hasDisFec() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool DisFec = 6;</code>
       */
      public boolean getDisFec() {
        return disFec_;
      }
      /**
       * <code>optional bool DisFec = 6;</code>
       */
      public Builder setDisFec(boolean value) {
        bitField0_ |= 0x00000020;
        disFec_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool DisFec = 6;</code>
       */
      public Builder clearDisFec() {
        bitField0_ = (bitField0_ & ~0x00000020);
        disFec_ = false;
        onChanged();
        return this;
      }

      // optional bool MdyRtpData = 7;
      private boolean mdyRtpData_ ;
      /**
       * <code>optional bool MdyRtpData = 7;</code>
       */
      public boolean hasMdyRtpData() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool MdyRtpData = 7;</code>
       */
      public boolean getMdyRtpData() {
        return mdyRtpData_;
      }
      /**
       * <code>optional bool MdyRtpData = 7;</code>
       */
      public Builder setMdyRtpData(boolean value) {
        bitField0_ |= 0x00000040;
        mdyRtpData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool MdyRtpData = 7;</code>
       */
      public Builder clearMdyRtpData() {
        bitField0_ = (bitField0_ & ~0x00000040);
        mdyRtpData_ = false;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder> cipherBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public boolean hasCipher() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher getCipher() {
        if (cipherBuilder_ == null) {
          return cipher_;
        } else {
          return cipherBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public Builder setCipher(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher value) {
        if (cipherBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cipher_ = value;
          onChanged();
        } else {
          cipherBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public Builder setCipher(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder builderForValue) {
        if (cipherBuilder_ == null) {
          cipher_ = builderForValue.build();
          onChanged();
        } else {
          cipherBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public Builder mergeCipher(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher value) {
        if (cipherBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              cipher_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance()) {
            cipher_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.newBuilder(cipher_).mergeFrom(value).buildPartial();
          } else {
            cipher_ = value;
          }
          onChanged();
        } else {
          cipherBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public Builder clearCipher() {
        if (cipherBuilder_ == null) {
          cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
          onChanged();
        } else {
          cipherBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder getCipherBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getCipherFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder getCipherOrBuilder() {
        if (cipherBuilder_ != null) {
          return cipherBuilder_.getMessageOrBuilder();
        } else {
          return cipher_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder> 
          getCipherFieldBuilder() {
        if (cipherBuilder_ == null) {
          cipherBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder>(
                  cipher_,
                  getParentForChildren(),
                  isClean());
          cipher_ = null;
        }
        return cipherBuilder_;
      }

      // optional bool FixedSsrc = 9;
      private boolean fixedSsrc_ ;
      /**
       * <code>optional bool FixedSsrc = 9;</code>
       */
      public boolean hasFixedSsrc() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool FixedSsrc = 9;</code>
       */
      public boolean getFixedSsrc() {
        return fixedSsrc_;
      }
      /**
       * <code>optional bool FixedSsrc = 9;</code>
       */
      public Builder setFixedSsrc(boolean value) {
        bitField0_ |= 0x00000100;
        fixedSsrc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool FixedSsrc = 9;</code>
       */
      public Builder clearFixedSsrc() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fixedSsrc_ = false;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt fixedpt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder> fixedptBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public boolean hasFixedpt() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt getFixedpt() {
        if (fixedptBuilder_ == null) {
          return fixedpt_;
        } else {
          return fixedptBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public Builder setFixedpt(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt value) {
        if (fixedptBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fixedpt_ = value;
          onChanged();
        } else {
          fixedptBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public Builder setFixedpt(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder builderForValue) {
        if (fixedptBuilder_ == null) {
          fixedpt_ = builderForValue.build();
          onChanged();
        } else {
          fixedptBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public Builder mergeFixedpt(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt value) {
        if (fixedptBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              fixedpt_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance()) {
            fixedpt_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.newBuilder(fixedpt_).mergeFrom(value).buildPartial();
          } else {
            fixedpt_ = value;
          }
          onChanged();
        } else {
          fixedptBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public Builder clearFixedpt() {
        if (fixedptBuilder_ == null) {
          fixedpt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
          onChanged();
        } else {
          fixedptBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder getFixedptBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getFixedptFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder getFixedptOrBuilder() {
        if (fixedptBuilder_ != null) {
          return fixedptBuilder_.getMessageOrBuilder();
        } else {
          return fixedpt_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder> 
          getFixedptFieldBuilder() {
        if (fixedptBuilder_ == null) {
          fixedptBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder>(
                  fixedpt_,
                  getParentForChildren(),
                  isClean());
          fixedpt_ = null;
        }
        return fixedptBuilder_;
      }

      // optional bool FilterRed = 11;
      private boolean filterRed_ ;
      /**
       * <code>optional bool FilterRed = 11;</code>
       */
      public boolean hasFilterRed() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool FilterRed = 11;</code>
       */
      public boolean getFilterRed() {
        return filterRed_;
      }
      /**
       * <code>optional bool FilterRed = 11;</code>
       */
      public Builder setFilterRed(boolean value) {
        bitField0_ |= 0x00000400;
        filterRed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool FilterRed = 11;</code>
       */
      public Builder clearFilterRed() {
        bitField0_ = (bitField0_ & ~0x00000400);
        filterRed_ = false;
        onChanged();
        return this;
      }

      // optional bool RemoveExt = 12;
      private boolean removeExt_ ;
      /**
       * <code>optional bool RemoveExt = 12;</code>
       */
      public boolean hasRemoveExt() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool RemoveExt = 12;</code>
       */
      public boolean getRemoveExt() {
        return removeExt_;
      }
      /**
       * <code>optional bool RemoveExt = 12;</code>
       */
      public Builder setRemoveExt(boolean value) {
        bitField0_ |= 0x00000800;
        removeExt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool RemoveExt = 12;</code>
       */
      public Builder clearRemoveExt() {
        bitField0_ = (bitField0_ & ~0x00000800);
        removeExt_ = false;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 13;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 13;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string MeetingHandle = 13;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 13;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 13;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 13;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00001000);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 13;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltAddSwitchAck)
    }

    static {
      defaultInstance = new DssCltAddSwitchAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltAddSwitchAck)
  }

  public interface DssCltAddSwitchNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    boolean hasDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    boolean hasMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    boolean hasSwitchType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType();

    // optional bool DisFec = 6;
    /**
     * <code>optional bool DisFec = 6;</code>
     */
    boolean hasDisFec();
    /**
     * <code>optional bool DisFec = 6;</code>
     */
    boolean getDisFec();

    // optional bool MdyRtpData = 7;
    /**
     * <code>optional bool MdyRtpData = 7;</code>
     */
    boolean hasMdyRtpData();
    /**
     * <code>optional bool MdyRtpData = 7;</code>
     */
    boolean getMdyRtpData();

    // optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
     */
    boolean hasCipher();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher getCipher();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder getCipherOrBuilder();

    // optional bool FixedSsrc = 9;
    /**
     * <code>optional bool FixedSsrc = 9;</code>
     */
    boolean hasFixedSsrc();
    /**
     * <code>optional bool FixedSsrc = 9;</code>
     */
    boolean getFixedSsrc();

    // optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
     */
    boolean hasFixedpt();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt getFixedpt();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder getFixedptOrBuilder();

    // optional bool FilterRed = 11;
    /**
     * <code>optional bool FilterRed = 11;</code>
     */
    boolean hasFilterRed();
    /**
     * <code>optional bool FilterRed = 11;</code>
     */
    boolean getFilterRed();

    // optional bool RemoveExt = 12;
    /**
     * <code>optional bool RemoveExt = 12;</code>
     */
    boolean hasRemoveExt();
    /**
     * <code>optional bool RemoveExt = 12;</code>
     */
    boolean getRemoveExt();

    // optional .com.kedacom.ops.flink.etl.proto.EAddSwitchResultCode resultcode = 13;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EAddSwitchResultCode resultcode = 13;</code>
     */
    boolean hasResultcode();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EAddSwitchResultCode resultcode = 13;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.EAddSwitchResultCode getResultcode();

    // optional string MeetingHandle = 14;
    /**
     * <code>optional string MeetingHandle = 14;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 14;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 14;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltAddSwitchNack}
   */
  public static final class DssCltAddSwitchNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltAddSwitchNackOrBuilder {
    // Use DssCltAddSwitchNack.newBuilder() to construct.
    private DssCltAddSwitchNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltAddSwitchNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltAddSwitchNack defaultInstance;
    public static DssCltAddSwitchNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltAddSwitchNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddSwitchNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddSwitchNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltAddSwitchNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltAddSwitchNack>() {
      public DssCltAddSwitchNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltAddSwitchNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    public static final int DSTADDR_FIELD_NUMBER = 2;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public boolean hasDstAddr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
      return dstAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
      return dstAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    public static final int MAPADDR_FIELD_NUMBER = 4;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public boolean hasMapAddr() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
      return mapAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
      return mapAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    public static final int SWITCHTYPE_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public boolean hasSwitchType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
      return switchType_;
    }

    // optional bool DisFec = 6;
    public static final int DISFEC_FIELD_NUMBER = 6;
    private boolean disFec_;
    /**
     * <code>optional bool DisFec = 6;</code>
     */
    public boolean hasDisFec() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool DisFec = 6;</code>
     */
    public boolean getDisFec() {
      return disFec_;
    }

    // optional bool MdyRtpData = 7;
    public static final int MDYRTPDATA_FIELD_NUMBER = 7;
    private boolean mdyRtpData_;
    /**
     * <code>optional bool MdyRtpData = 7;</code>
     */
    public boolean hasMdyRtpData() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool MdyRtpData = 7;</code>
     */
    public boolean getMdyRtpData() {
      return mdyRtpData_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;
    public static final int CIPHER_FIELD_NUMBER = 8;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher cipher_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
     */
    public boolean hasCipher() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher getCipher() {
      return cipher_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder getCipherOrBuilder() {
      return cipher_;
    }

    // optional bool FixedSsrc = 9;
    public static final int FIXEDSSRC_FIELD_NUMBER = 9;
    private boolean fixedSsrc_;
    /**
     * <code>optional bool FixedSsrc = 9;</code>
     */
    public boolean hasFixedSsrc() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool FixedSsrc = 9;</code>
     */
    public boolean getFixedSsrc() {
      return fixedSsrc_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;
    public static final int FIXEDPT_FIELD_NUMBER = 10;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt fixedpt_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
     */
    public boolean hasFixedpt() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt getFixedpt() {
      return fixedpt_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder getFixedptOrBuilder() {
      return fixedpt_;
    }

    // optional bool FilterRed = 11;
    public static final int FILTERRED_FIELD_NUMBER = 11;
    private boolean filterRed_;
    /**
     * <code>optional bool FilterRed = 11;</code>
     */
    public boolean hasFilterRed() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool FilterRed = 11;</code>
     */
    public boolean getFilterRed() {
      return filterRed_;
    }

    // optional bool RemoveExt = 12;
    public static final int REMOVEEXT_FIELD_NUMBER = 12;
    private boolean removeExt_;
    /**
     * <code>optional bool RemoveExt = 12;</code>
     */
    public boolean hasRemoveExt() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool RemoveExt = 12;</code>
     */
    public boolean getRemoveExt() {
      return removeExt_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.EAddSwitchResultCode resultcode = 13;
    public static final int RESULTCODE_FIELD_NUMBER = 13;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.EAddSwitchResultCode resultcode_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EAddSwitchResultCode resultcode = 13;</code>
     */
    public boolean hasResultcode() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EAddSwitchResultCode resultcode = 13;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.EAddSwitchResultCode getResultcode() {
      return resultcode_;
    }

    // optional string MeetingHandle = 14;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 14;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 14;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional string MeetingHandle = 14;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 14;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientId_ = 0;
      dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      disFec_ = false;
      mdyRtpData_ = false;
      cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
      fixedSsrc_ = false;
      fixedpt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
      filterRed_ = false;
      removeExt_ = false;
      resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EAddSwitchResultCode.eAddSwitchSucceed;
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltAddSwitchNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddSwitchNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddSwitchNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDstAddrFieldBuilder();
          getRcvAddrFieldBuilder();
          getMapAddrFieldBuilder();
          getCipherFieldBuilder();
          getFixedptFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        bitField0_ = (bitField0_ & ~0x00000010);
        disFec_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        mdyRtpData_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (cipherBuilder_ == null) {
          cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
        } else {
          cipherBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        fixedSsrc_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (fixedptBuilder_ == null) {
          fixedpt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
        } else {
          fixedptBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        filterRed_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        removeExt_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EAddSwitchResultCode.eAddSwitchSucceed;
        bitField0_ = (bitField0_ & ~0x00001000);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddSwitchNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddSwitchNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (dstAddrBuilder_ == null) {
          result.dstAddr_ = dstAddr_;
        } else {
          result.dstAddr_ = dstAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (mapAddrBuilder_ == null) {
          result.mapAddr_ = mapAddr_;
        } else {
          result.mapAddr_ = mapAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.switchType_ = switchType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.disFec_ = disFec_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.mdyRtpData_ = mdyRtpData_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (cipherBuilder_ == null) {
          result.cipher_ = cipher_;
        } else {
          result.cipher_ = cipherBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.fixedSsrc_ = fixedSsrc_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (fixedptBuilder_ == null) {
          result.fixedpt_ = fixedpt_;
        } else {
          result.fixedpt_ = fixedptBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.filterRed_ = filterRed_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.removeExt_ = removeExt_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.resultcode_ = resultcode_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> dstAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public boolean hasDstAddr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
        if (dstAddrBuilder_ == null) {
          return dstAddr_;
        } else {
          return dstAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dstAddr_ = value;
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = builderForValue.build();
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder mergeDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              dstAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            dstAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(dstAddr_).mergeFrom(value).buildPartial();
          } else {
            dstAddr_ = value;
          }
          onChanged();
        } else {
          dstAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder clearDstAddr() {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getDstAddrBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDstAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
        if (dstAddrBuilder_ != null) {
          return dstAddrBuilder_.getMessageOrBuilder();
        } else {
          return dstAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getDstAddrFieldBuilder() {
        if (dstAddrBuilder_ == null) {
          dstAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  dstAddr_,
                  getParentForChildren(),
                  isClean());
          dstAddr_ = null;
        }
        return dstAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> mapAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public boolean hasMapAddr() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
        if (mapAddrBuilder_ == null) {
          return mapAddr_;
        } else {
          return mapAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mapAddr_ = value;
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = builderForValue.build();
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder mergeMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              mapAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            mapAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(mapAddr_).mergeFrom(value).buildPartial();
          } else {
            mapAddr_ = value;
          }
          onChanged();
        } else {
          mapAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder clearMapAddr() {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getMapAddrBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getMapAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
        if (mapAddrBuilder_ != null) {
          return mapAddrBuilder_.getMessageOrBuilder();
        } else {
          return mapAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getMapAddrFieldBuilder() {
        if (mapAddrBuilder_ == null) {
          mapAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  mapAddr_,
                  getParentForChildren(),
                  isClean());
          mapAddr_ = null;
        }
        return mapAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public boolean hasSwitchType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
        return switchType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder setSwitchType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        switchType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder clearSwitchType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        onChanged();
        return this;
      }

      // optional bool DisFec = 6;
      private boolean disFec_ ;
      /**
       * <code>optional bool DisFec = 6;</code>
       */
      public boolean hasDisFec() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool DisFec = 6;</code>
       */
      public boolean getDisFec() {
        return disFec_;
      }
      /**
       * <code>optional bool DisFec = 6;</code>
       */
      public Builder setDisFec(boolean value) {
        bitField0_ |= 0x00000020;
        disFec_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool DisFec = 6;</code>
       */
      public Builder clearDisFec() {
        bitField0_ = (bitField0_ & ~0x00000020);
        disFec_ = false;
        onChanged();
        return this;
      }

      // optional bool MdyRtpData = 7;
      private boolean mdyRtpData_ ;
      /**
       * <code>optional bool MdyRtpData = 7;</code>
       */
      public boolean hasMdyRtpData() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool MdyRtpData = 7;</code>
       */
      public boolean getMdyRtpData() {
        return mdyRtpData_;
      }
      /**
       * <code>optional bool MdyRtpData = 7;</code>
       */
      public Builder setMdyRtpData(boolean value) {
        bitField0_ |= 0x00000040;
        mdyRtpData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool MdyRtpData = 7;</code>
       */
      public Builder clearMdyRtpData() {
        bitField0_ = (bitField0_ & ~0x00000040);
        mdyRtpData_ = false;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder> cipherBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public boolean hasCipher() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher getCipher() {
        if (cipherBuilder_ == null) {
          return cipher_;
        } else {
          return cipherBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public Builder setCipher(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher value) {
        if (cipherBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cipher_ = value;
          onChanged();
        } else {
          cipherBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public Builder setCipher(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder builderForValue) {
        if (cipherBuilder_ == null) {
          cipher_ = builderForValue.build();
          onChanged();
        } else {
          cipherBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public Builder mergeCipher(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher value) {
        if (cipherBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              cipher_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance()) {
            cipher_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.newBuilder(cipher_).mergeFrom(value).buildPartial();
          } else {
            cipher_ = value;
          }
          onChanged();
        } else {
          cipherBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public Builder clearCipher() {
        if (cipherBuilder_ == null) {
          cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
          onChanged();
        } else {
          cipherBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder getCipherBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getCipherFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder getCipherOrBuilder() {
        if (cipherBuilder_ != null) {
          return cipherBuilder_.getMessageOrBuilder();
        } else {
          return cipher_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder> 
          getCipherFieldBuilder() {
        if (cipherBuilder_ == null) {
          cipherBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder>(
                  cipher_,
                  getParentForChildren(),
                  isClean());
          cipher_ = null;
        }
        return cipherBuilder_;
      }

      // optional bool FixedSsrc = 9;
      private boolean fixedSsrc_ ;
      /**
       * <code>optional bool FixedSsrc = 9;</code>
       */
      public boolean hasFixedSsrc() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool FixedSsrc = 9;</code>
       */
      public boolean getFixedSsrc() {
        return fixedSsrc_;
      }
      /**
       * <code>optional bool FixedSsrc = 9;</code>
       */
      public Builder setFixedSsrc(boolean value) {
        bitField0_ |= 0x00000100;
        fixedSsrc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool FixedSsrc = 9;</code>
       */
      public Builder clearFixedSsrc() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fixedSsrc_ = false;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt fixedpt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder> fixedptBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public boolean hasFixedpt() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt getFixedpt() {
        if (fixedptBuilder_ == null) {
          return fixedpt_;
        } else {
          return fixedptBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public Builder setFixedpt(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt value) {
        if (fixedptBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fixedpt_ = value;
          onChanged();
        } else {
          fixedptBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public Builder setFixedpt(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder builderForValue) {
        if (fixedptBuilder_ == null) {
          fixedpt_ = builderForValue.build();
          onChanged();
        } else {
          fixedptBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public Builder mergeFixedpt(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt value) {
        if (fixedptBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              fixedpt_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance()) {
            fixedpt_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.newBuilder(fixedpt_).mergeFrom(value).buildPartial();
          } else {
            fixedpt_ = value;
          }
          onChanged();
        } else {
          fixedptBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public Builder clearFixedpt() {
        if (fixedptBuilder_ == null) {
          fixedpt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
          onChanged();
        } else {
          fixedptBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder getFixedptBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getFixedptFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder getFixedptOrBuilder() {
        if (fixedptBuilder_ != null) {
          return fixedptBuilder_.getMessageOrBuilder();
        } else {
          return fixedpt_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt fixedpt = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder> 
          getFixedptFieldBuilder() {
        if (fixedptBuilder_ == null) {
          fixedptBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder>(
                  fixedpt_,
                  getParentForChildren(),
                  isClean());
          fixedpt_ = null;
        }
        return fixedptBuilder_;
      }

      // optional bool FilterRed = 11;
      private boolean filterRed_ ;
      /**
       * <code>optional bool FilterRed = 11;</code>
       */
      public boolean hasFilterRed() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool FilterRed = 11;</code>
       */
      public boolean getFilterRed() {
        return filterRed_;
      }
      /**
       * <code>optional bool FilterRed = 11;</code>
       */
      public Builder setFilterRed(boolean value) {
        bitField0_ |= 0x00000400;
        filterRed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool FilterRed = 11;</code>
       */
      public Builder clearFilterRed() {
        bitField0_ = (bitField0_ & ~0x00000400);
        filterRed_ = false;
        onChanged();
        return this;
      }

      // optional bool RemoveExt = 12;
      private boolean removeExt_ ;
      /**
       * <code>optional bool RemoveExt = 12;</code>
       */
      public boolean hasRemoveExt() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool RemoveExt = 12;</code>
       */
      public boolean getRemoveExt() {
        return removeExt_;
      }
      /**
       * <code>optional bool RemoveExt = 12;</code>
       */
      public Builder setRemoveExt(boolean value) {
        bitField0_ |= 0x00000800;
        removeExt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool RemoveExt = 12;</code>
       */
      public Builder clearRemoveExt() {
        bitField0_ = (bitField0_ & ~0x00000800);
        removeExt_ = false;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.EAddSwitchResultCode resultcode = 13;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.EAddSwitchResultCode resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EAddSwitchResultCode.eAddSwitchSucceed;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EAddSwitchResultCode resultcode = 13;</code>
       */
      public boolean hasResultcode() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EAddSwitchResultCode resultcode = 13;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.EAddSwitchResultCode getResultcode() {
        return resultcode_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EAddSwitchResultCode resultcode = 13;</code>
       */
      public Builder setResultcode(com.kedacom.ops.flink.etl.proto.Dssevenum.EAddSwitchResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00001000;
        resultcode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EAddSwitchResultCode resultcode = 13;</code>
       */
      public Builder clearResultcode() {
        bitField0_ = (bitField0_ & ~0x00001000);
        resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EAddSwitchResultCode.eAddSwitchSucceed;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 14;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 14;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string MeetingHandle = 14;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 14;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 14;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 14;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00002000);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 14;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltAddSwitchNack)
    }

    static {
      defaultInstance = new DssCltAddSwitchNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltAddSwitchNack)
  }

  public interface CltDssRemoveSwitchReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    boolean hasDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    boolean hasMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    boolean hasSwitchType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType();

    // optional bool RemoveByDst = 6;
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    boolean hasRemoveByDst();
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    boolean getRemoveByDst();

    // optional uint32 ClientTick = 7;
    /**
     * <code>optional uint32 ClientTick = 7;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 7;</code>
     */
    int getClientTick();

    // optional string MeetingHandle = 8;
    /**
     * <code>optional string MeetingHandle = 8;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 8;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 8;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssRemoveSwitchReq}
   */
  public static final class CltDssRemoveSwitchReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssRemoveSwitchReqOrBuilder {
    // Use CltDssRemoveSwitchReq.newBuilder() to construct.
    private CltDssRemoveSwitchReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssRemoveSwitchReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssRemoveSwitchReq defaultInstance;
    public static CltDssRemoveSwitchReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssRemoveSwitchReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveSwitchReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveSwitchReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssRemoveSwitchReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssRemoveSwitchReq>() {
      public CltDssRemoveSwitchReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssRemoveSwitchReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    public static final int DSTADDR_FIELD_NUMBER = 2;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public boolean hasDstAddr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
      return dstAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
      return dstAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    public static final int MAPADDR_FIELD_NUMBER = 4;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public boolean hasMapAddr() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
      return mapAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
      return mapAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    public static final int SWITCHTYPE_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public boolean hasSwitchType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
      return switchType_;
    }

    // optional bool RemoveByDst = 6;
    public static final int REMOVEBYDST_FIELD_NUMBER = 6;
    private boolean removeByDst_;
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    public boolean hasRemoveByDst() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    public boolean getRemoveByDst() {
      return removeByDst_;
    }

    // optional uint32 ClientTick = 7;
    public static final int CLIENTTICK_FIELD_NUMBER = 7;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 7;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 ClientTick = 7;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    // optional string MeetingHandle = 8;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 8;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 8;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string MeetingHandle = 8;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 8;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientId_ = 0;
      dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      removeByDst_ = false;
      clientTick_ = 0;
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssRemoveSwitchReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveSwitchReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveSwitchReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDstAddrFieldBuilder();
          getRcvAddrFieldBuilder();
          getMapAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        bitField0_ = (bitField0_ & ~0x00000010);
        removeByDst_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveSwitchReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveSwitchReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (dstAddrBuilder_ == null) {
          result.dstAddr_ = dstAddr_;
        } else {
          result.dstAddr_ = dstAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (mapAddrBuilder_ == null) {
          result.mapAddr_ = mapAddr_;
        } else {
          result.mapAddr_ = mapAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.switchType_ = switchType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.removeByDst_ = removeByDst_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.clientTick_ = clientTick_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> dstAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public boolean hasDstAddr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
        if (dstAddrBuilder_ == null) {
          return dstAddr_;
        } else {
          return dstAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dstAddr_ = value;
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = builderForValue.build();
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder mergeDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              dstAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            dstAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(dstAddr_).mergeFrom(value).buildPartial();
          } else {
            dstAddr_ = value;
          }
          onChanged();
        } else {
          dstAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder clearDstAddr() {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getDstAddrBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDstAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
        if (dstAddrBuilder_ != null) {
          return dstAddrBuilder_.getMessageOrBuilder();
        } else {
          return dstAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getDstAddrFieldBuilder() {
        if (dstAddrBuilder_ == null) {
          dstAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  dstAddr_,
                  getParentForChildren(),
                  isClean());
          dstAddr_ = null;
        }
        return dstAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> mapAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public boolean hasMapAddr() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
        if (mapAddrBuilder_ == null) {
          return mapAddr_;
        } else {
          return mapAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mapAddr_ = value;
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = builderForValue.build();
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder mergeMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              mapAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            mapAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(mapAddr_).mergeFrom(value).buildPartial();
          } else {
            mapAddr_ = value;
          }
          onChanged();
        } else {
          mapAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder clearMapAddr() {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getMapAddrBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getMapAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
        if (mapAddrBuilder_ != null) {
          return mapAddrBuilder_.getMessageOrBuilder();
        } else {
          return mapAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getMapAddrFieldBuilder() {
        if (mapAddrBuilder_ == null) {
          mapAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  mapAddr_,
                  getParentForChildren(),
                  isClean());
          mapAddr_ = null;
        }
        return mapAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public boolean hasSwitchType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
        return switchType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder setSwitchType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        switchType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder clearSwitchType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        onChanged();
        return this;
      }

      // optional bool RemoveByDst = 6;
      private boolean removeByDst_ ;
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public boolean hasRemoveByDst() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public boolean getRemoveByDst() {
        return removeByDst_;
      }
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public Builder setRemoveByDst(boolean value) {
        bitField0_ |= 0x00000020;
        removeByDst_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public Builder clearRemoveByDst() {
        bitField0_ = (bitField0_ & ~0x00000020);
        removeByDst_ = false;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 7;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 7;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 ClientTick = 7;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 7;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000040;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 7;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000040);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 8;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 8;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string MeetingHandle = 8;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 8;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 8;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 8;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000080);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 8;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssRemoveSwitchReq)
    }

    static {
      defaultInstance = new CltDssRemoveSwitchReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssRemoveSwitchReq)
  }

  public interface DssCltRemoveSwitchAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    boolean hasDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    boolean hasMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    boolean hasSwitchType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType();

    // optional bool RemoveByDst = 6;
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    boolean hasRemoveByDst();
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    boolean getRemoveByDst();

    // optional string MeetingHandle = 7;
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveSwitchAck}
   */
  public static final class DssCltRemoveSwitchAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltRemoveSwitchAckOrBuilder {
    // Use DssCltRemoveSwitchAck.newBuilder() to construct.
    private DssCltRemoveSwitchAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltRemoveSwitchAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltRemoveSwitchAck defaultInstance;
    public static DssCltRemoveSwitchAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltRemoveSwitchAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveSwitchAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveSwitchAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltRemoveSwitchAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltRemoveSwitchAck>() {
      public DssCltRemoveSwitchAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltRemoveSwitchAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    public static final int DSTADDR_FIELD_NUMBER = 2;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public boolean hasDstAddr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
      return dstAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
      return dstAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    public static final int MAPADDR_FIELD_NUMBER = 4;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public boolean hasMapAddr() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
      return mapAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
      return mapAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    public static final int SWITCHTYPE_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public boolean hasSwitchType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
      return switchType_;
    }

    // optional bool RemoveByDst = 6;
    public static final int REMOVEBYDST_FIELD_NUMBER = 6;
    private boolean removeByDst_;
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    public boolean hasRemoveByDst() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    public boolean getRemoveByDst() {
      return removeByDst_;
    }

    // optional string MeetingHandle = 7;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 7;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientId_ = 0;
      dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      removeByDst_ = false;
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveSwitchAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveSwitchAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveSwitchAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDstAddrFieldBuilder();
          getRcvAddrFieldBuilder();
          getMapAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        bitField0_ = (bitField0_ & ~0x00000010);
        removeByDst_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveSwitchAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (dstAddrBuilder_ == null) {
          result.dstAddr_ = dstAddr_;
        } else {
          result.dstAddr_ = dstAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (mapAddrBuilder_ == null) {
          result.mapAddr_ = mapAddr_;
        } else {
          result.mapAddr_ = mapAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.switchType_ = switchType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.removeByDst_ = removeByDst_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> dstAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public boolean hasDstAddr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
        if (dstAddrBuilder_ == null) {
          return dstAddr_;
        } else {
          return dstAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dstAddr_ = value;
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = builderForValue.build();
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder mergeDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              dstAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            dstAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(dstAddr_).mergeFrom(value).buildPartial();
          } else {
            dstAddr_ = value;
          }
          onChanged();
        } else {
          dstAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder clearDstAddr() {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getDstAddrBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDstAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
        if (dstAddrBuilder_ != null) {
          return dstAddrBuilder_.getMessageOrBuilder();
        } else {
          return dstAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getDstAddrFieldBuilder() {
        if (dstAddrBuilder_ == null) {
          dstAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  dstAddr_,
                  getParentForChildren(),
                  isClean());
          dstAddr_ = null;
        }
        return dstAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> mapAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public boolean hasMapAddr() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
        if (mapAddrBuilder_ == null) {
          return mapAddr_;
        } else {
          return mapAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mapAddr_ = value;
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = builderForValue.build();
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder mergeMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              mapAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            mapAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(mapAddr_).mergeFrom(value).buildPartial();
          } else {
            mapAddr_ = value;
          }
          onChanged();
        } else {
          mapAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder clearMapAddr() {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getMapAddrBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getMapAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
        if (mapAddrBuilder_ != null) {
          return mapAddrBuilder_.getMessageOrBuilder();
        } else {
          return mapAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getMapAddrFieldBuilder() {
        if (mapAddrBuilder_ == null) {
          mapAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  mapAddr_,
                  getParentForChildren(),
                  isClean());
          mapAddr_ = null;
        }
        return mapAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public boolean hasSwitchType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
        return switchType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder setSwitchType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        switchType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder clearSwitchType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        onChanged();
        return this;
      }

      // optional bool RemoveByDst = 6;
      private boolean removeByDst_ ;
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public boolean hasRemoveByDst() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public boolean getRemoveByDst() {
        return removeByDst_;
      }
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public Builder setRemoveByDst(boolean value) {
        bitField0_ |= 0x00000020;
        removeByDst_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public Builder clearRemoveByDst() {
        bitField0_ = (bitField0_ & ~0x00000020);
        removeByDst_ = false;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 7;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000040);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveSwitchAck)
    }

    static {
      defaultInstance = new DssCltRemoveSwitchAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveSwitchAck)
  }

  public interface DssCltRemoveSwitchNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    boolean hasDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    boolean hasMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    boolean hasSwitchType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType();

    // optional bool RemoveByDst = 6;
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    boolean hasRemoveByDst();
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    boolean getRemoveByDst();

    // optional .com.kedacom.ops.flink.etl.proto.ERmSwitchResultCode resultcode = 7;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ERmSwitchResultCode resultcode = 7;</code>
     */
    boolean hasResultcode();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ERmSwitchResultCode resultcode = 7;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ERmSwitchResultCode getResultcode();

    // optional string MeetingHandle = 8;
    /**
     * <code>optional string MeetingHandle = 8;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 8;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 8;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveSwitchNack}
   */
  public static final class DssCltRemoveSwitchNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltRemoveSwitchNackOrBuilder {
    // Use DssCltRemoveSwitchNack.newBuilder() to construct.
    private DssCltRemoveSwitchNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltRemoveSwitchNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltRemoveSwitchNack defaultInstance;
    public static DssCltRemoveSwitchNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltRemoveSwitchNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveSwitchNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveSwitchNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltRemoveSwitchNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltRemoveSwitchNack>() {
      public DssCltRemoveSwitchNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltRemoveSwitchNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    public static final int DSTADDR_FIELD_NUMBER = 2;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public boolean hasDstAddr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
      return dstAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
      return dstAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    public static final int MAPADDR_FIELD_NUMBER = 4;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public boolean hasMapAddr() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
      return mapAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
      return mapAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    public static final int SWITCHTYPE_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public boolean hasSwitchType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
      return switchType_;
    }

    // optional bool RemoveByDst = 6;
    public static final int REMOVEBYDST_FIELD_NUMBER = 6;
    private boolean removeByDst_;
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    public boolean hasRemoveByDst() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    public boolean getRemoveByDst() {
      return removeByDst_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ERmSwitchResultCode resultcode = 7;
    public static final int RESULTCODE_FIELD_NUMBER = 7;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ERmSwitchResultCode resultcode_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ERmSwitchResultCode resultcode = 7;</code>
     */
    public boolean hasResultcode() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ERmSwitchResultCode resultcode = 7;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ERmSwitchResultCode getResultcode() {
      return resultcode_;
    }

    // optional string MeetingHandle = 8;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 8;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 8;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string MeetingHandle = 8;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 8;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientId_ = 0;
      dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      removeByDst_ = false;
      resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ERmSwitchResultCode.eRmSwitchSucceed;
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveSwitchNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveSwitchNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveSwitchNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDstAddrFieldBuilder();
          getRcvAddrFieldBuilder();
          getMapAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        bitField0_ = (bitField0_ & ~0x00000010);
        removeByDst_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ERmSwitchResultCode.eRmSwitchSucceed;
        bitField0_ = (bitField0_ & ~0x00000040);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveSwitchNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveSwitchNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (dstAddrBuilder_ == null) {
          result.dstAddr_ = dstAddr_;
        } else {
          result.dstAddr_ = dstAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (mapAddrBuilder_ == null) {
          result.mapAddr_ = mapAddr_;
        } else {
          result.mapAddr_ = mapAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.switchType_ = switchType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.removeByDst_ = removeByDst_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.resultcode_ = resultcode_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> dstAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public boolean hasDstAddr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
        if (dstAddrBuilder_ == null) {
          return dstAddr_;
        } else {
          return dstAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dstAddr_ = value;
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = builderForValue.build();
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder mergeDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              dstAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            dstAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(dstAddr_).mergeFrom(value).buildPartial();
          } else {
            dstAddr_ = value;
          }
          onChanged();
        } else {
          dstAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder clearDstAddr() {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getDstAddrBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDstAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
        if (dstAddrBuilder_ != null) {
          return dstAddrBuilder_.getMessageOrBuilder();
        } else {
          return dstAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getDstAddrFieldBuilder() {
        if (dstAddrBuilder_ == null) {
          dstAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  dstAddr_,
                  getParentForChildren(),
                  isClean());
          dstAddr_ = null;
        }
        return dstAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> mapAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public boolean hasMapAddr() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
        if (mapAddrBuilder_ == null) {
          return mapAddr_;
        } else {
          return mapAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mapAddr_ = value;
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = builderForValue.build();
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder mergeMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              mapAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            mapAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(mapAddr_).mergeFrom(value).buildPartial();
          } else {
            mapAddr_ = value;
          }
          onChanged();
        } else {
          mapAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder clearMapAddr() {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getMapAddrBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getMapAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
        if (mapAddrBuilder_ != null) {
          return mapAddrBuilder_.getMessageOrBuilder();
        } else {
          return mapAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getMapAddrFieldBuilder() {
        if (mapAddrBuilder_ == null) {
          mapAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  mapAddr_,
                  getParentForChildren(),
                  isClean());
          mapAddr_ = null;
        }
        return mapAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public boolean hasSwitchType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
        return switchType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder setSwitchType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        switchType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder clearSwitchType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        onChanged();
        return this;
      }

      // optional bool RemoveByDst = 6;
      private boolean removeByDst_ ;
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public boolean hasRemoveByDst() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public boolean getRemoveByDst() {
        return removeByDst_;
      }
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public Builder setRemoveByDst(boolean value) {
        bitField0_ |= 0x00000020;
        removeByDst_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public Builder clearRemoveByDst() {
        bitField0_ = (bitField0_ & ~0x00000020);
        removeByDst_ = false;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ERmSwitchResultCode resultcode = 7;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ERmSwitchResultCode resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ERmSwitchResultCode.eRmSwitchSucceed;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ERmSwitchResultCode resultcode = 7;</code>
       */
      public boolean hasResultcode() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ERmSwitchResultCode resultcode = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ERmSwitchResultCode getResultcode() {
        return resultcode_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ERmSwitchResultCode resultcode = 7;</code>
       */
      public Builder setResultcode(com.kedacom.ops.flink.etl.proto.Dssevenum.ERmSwitchResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        resultcode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ERmSwitchResultCode resultcode = 7;</code>
       */
      public Builder clearResultcode() {
        bitField0_ = (bitField0_ & ~0x00000040);
        resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ERmSwitchResultCode.eRmSwitchSucceed;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 8;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 8;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string MeetingHandle = 8;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 8;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 8;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 8;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000080);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 8;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveSwitchNack)
    }

    static {
      defaultInstance = new DssCltRemoveSwitchNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveSwitchNack)
  }

  public interface CltDssAddM2OneSwitchReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    boolean hasDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    boolean hasMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    boolean hasSwitchType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType();

    // optional uint32 ClientTick = 6;
    /**
     * <code>optional uint32 ClientTick = 6;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 6;</code>
     */
    int getClientTick();

    // optional string MeetingHandle = 7;
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;</code>
     */
    boolean hasSwitchStreamType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType getSwitchStreamType();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;</code>
     */
    boolean hasSwitchDirectionType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType getSwitchDirectionType();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssAddM2OneSwitchReq}
   */
  public static final class CltDssAddM2OneSwitchReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssAddM2OneSwitchReqOrBuilder {
    // Use CltDssAddM2OneSwitchReq.newBuilder() to construct.
    private CltDssAddM2OneSwitchReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssAddM2OneSwitchReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssAddM2OneSwitchReq defaultInstance;
    public static CltDssAddM2OneSwitchReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssAddM2OneSwitchReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddM2OneSwitchReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddM2OneSwitchReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssAddM2OneSwitchReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssAddM2OneSwitchReq>() {
      public CltDssAddM2OneSwitchReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssAddM2OneSwitchReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    public static final int DSTADDR_FIELD_NUMBER = 2;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public boolean hasDstAddr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
      return dstAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
      return dstAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    public static final int MAPADDR_FIELD_NUMBER = 4;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public boolean hasMapAddr() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
      return mapAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
      return mapAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    public static final int SWITCHTYPE_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public boolean hasSwitchType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
      return switchType_;
    }

    // optional uint32 ClientTick = 6;
    public static final int CLIENTTICK_FIELD_NUMBER = 6;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 6;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 ClientTick = 6;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    // optional string MeetingHandle = 7;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 7;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;
    public static final int SWITCHSTREAMTYPE_FIELD_NUMBER = 8;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType switchStreamType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;</code>
     */
    public boolean hasSwitchStreamType() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType getSwitchStreamType() {
      return switchStreamType_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;
    public static final int SWITCHDIRECTIONTYPE_FIELD_NUMBER = 9;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType switchDirectionType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;</code>
     */
    public boolean hasSwitchDirectionType() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType getSwitchDirectionType() {
      return switchDirectionType_;
    }

    private void initFields() {
      clientId_ = 0;
      dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      clientTick_ = 0;
      meetingHandle_ = "";
      switchStreamType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType.StreamType_Unknown;
      switchDirectionType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType.DSDIRECTION_NONE;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssAddM2OneSwitchReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddM2OneSwitchReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddM2OneSwitchReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDstAddrFieldBuilder();
          getRcvAddrFieldBuilder();
          getMapAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        bitField0_ = (bitField0_ & ~0x00000010);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        switchStreamType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType.StreamType_Unknown;
        bitField0_ = (bitField0_ & ~0x00000080);
        switchDirectionType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType.DSDIRECTION_NONE;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddM2OneSwitchReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddM2OneSwitchReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (dstAddrBuilder_ == null) {
          result.dstAddr_ = dstAddr_;
        } else {
          result.dstAddr_ = dstAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (mapAddrBuilder_ == null) {
          result.mapAddr_ = mapAddr_;
        } else {
          result.mapAddr_ = mapAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.switchType_ = switchType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.clientTick_ = clientTick_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.switchStreamType_ = switchStreamType_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.switchDirectionType_ = switchDirectionType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> dstAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public boolean hasDstAddr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
        if (dstAddrBuilder_ == null) {
          return dstAddr_;
        } else {
          return dstAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dstAddr_ = value;
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = builderForValue.build();
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder mergeDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              dstAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            dstAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(dstAddr_).mergeFrom(value).buildPartial();
          } else {
            dstAddr_ = value;
          }
          onChanged();
        } else {
          dstAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder clearDstAddr() {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getDstAddrBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDstAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
        if (dstAddrBuilder_ != null) {
          return dstAddrBuilder_.getMessageOrBuilder();
        } else {
          return dstAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getDstAddrFieldBuilder() {
        if (dstAddrBuilder_ == null) {
          dstAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  dstAddr_,
                  getParentForChildren(),
                  isClean());
          dstAddr_ = null;
        }
        return dstAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> mapAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public boolean hasMapAddr() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
        if (mapAddrBuilder_ == null) {
          return mapAddr_;
        } else {
          return mapAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mapAddr_ = value;
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = builderForValue.build();
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder mergeMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              mapAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            mapAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(mapAddr_).mergeFrom(value).buildPartial();
          } else {
            mapAddr_ = value;
          }
          onChanged();
        } else {
          mapAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder clearMapAddr() {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getMapAddrBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getMapAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
        if (mapAddrBuilder_ != null) {
          return mapAddrBuilder_.getMessageOrBuilder();
        } else {
          return mapAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getMapAddrFieldBuilder() {
        if (mapAddrBuilder_ == null) {
          mapAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  mapAddr_,
                  getParentForChildren(),
                  isClean());
          mapAddr_ = null;
        }
        return mapAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public boolean hasSwitchType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
        return switchType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder setSwitchType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        switchType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder clearSwitchType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 6;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 6;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 ClientTick = 6;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 6;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000020;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 6;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000020);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 7;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000040);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType switchStreamType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType.StreamType_Unknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;</code>
       */
      public boolean hasSwitchStreamType() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType getSwitchStreamType() {
        return switchStreamType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;</code>
       */
      public Builder setSwitchStreamType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        switchStreamType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;</code>
       */
      public Builder clearSwitchStreamType() {
        bitField0_ = (bitField0_ & ~0x00000080);
        switchStreamType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType.StreamType_Unknown;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType switchDirectionType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType.DSDIRECTION_NONE;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;</code>
       */
      public boolean hasSwitchDirectionType() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType getSwitchDirectionType() {
        return switchDirectionType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;</code>
       */
      public Builder setSwitchDirectionType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        switchDirectionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;</code>
       */
      public Builder clearSwitchDirectionType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        switchDirectionType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType.DSDIRECTION_NONE;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssAddM2OneSwitchReq)
    }

    static {
      defaultInstance = new CltDssAddM2OneSwitchReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssAddM2OneSwitchReq)
  }

  public interface DssCltAddM2OneSwitchAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    boolean hasDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    boolean hasMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    boolean hasSwitchType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType();

    // optional string MeetingHandle = 6;
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltAddM2OneSwitchAck}
   */
  public static final class DssCltAddM2OneSwitchAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltAddM2OneSwitchAckOrBuilder {
    // Use DssCltAddM2OneSwitchAck.newBuilder() to construct.
    private DssCltAddM2OneSwitchAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltAddM2OneSwitchAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltAddM2OneSwitchAck defaultInstance;
    public static DssCltAddM2OneSwitchAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltAddM2OneSwitchAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddM2OneSwitchAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddM2OneSwitchAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltAddM2OneSwitchAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltAddM2OneSwitchAck>() {
      public DssCltAddM2OneSwitchAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltAddM2OneSwitchAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    public static final int DSTADDR_FIELD_NUMBER = 2;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public boolean hasDstAddr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
      return dstAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
      return dstAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    public static final int MAPADDR_FIELD_NUMBER = 4;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public boolean hasMapAddr() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
      return mapAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
      return mapAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    public static final int SWITCHTYPE_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public boolean hasSwitchType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
      return switchType_;
    }

    // optional string MeetingHandle = 6;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 6;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 6;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientId_ = 0;
      dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltAddM2OneSwitchAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddM2OneSwitchAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddM2OneSwitchAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDstAddrFieldBuilder();
          getRcvAddrFieldBuilder();
          getMapAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        bitField0_ = (bitField0_ & ~0x00000010);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddM2OneSwitchAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (dstAddrBuilder_ == null) {
          result.dstAddr_ = dstAddr_;
        } else {
          result.dstAddr_ = dstAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (mapAddrBuilder_ == null) {
          result.mapAddr_ = mapAddr_;
        } else {
          result.mapAddr_ = mapAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.switchType_ = switchType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> dstAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public boolean hasDstAddr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
        if (dstAddrBuilder_ == null) {
          return dstAddr_;
        } else {
          return dstAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dstAddr_ = value;
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = builderForValue.build();
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder mergeDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              dstAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            dstAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(dstAddr_).mergeFrom(value).buildPartial();
          } else {
            dstAddr_ = value;
          }
          onChanged();
        } else {
          dstAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder clearDstAddr() {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getDstAddrBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDstAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
        if (dstAddrBuilder_ != null) {
          return dstAddrBuilder_.getMessageOrBuilder();
        } else {
          return dstAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getDstAddrFieldBuilder() {
        if (dstAddrBuilder_ == null) {
          dstAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  dstAddr_,
                  getParentForChildren(),
                  isClean());
          dstAddr_ = null;
        }
        return dstAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> mapAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public boolean hasMapAddr() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
        if (mapAddrBuilder_ == null) {
          return mapAddr_;
        } else {
          return mapAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mapAddr_ = value;
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = builderForValue.build();
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder mergeMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              mapAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            mapAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(mapAddr_).mergeFrom(value).buildPartial();
          } else {
            mapAddr_ = value;
          }
          onChanged();
        } else {
          mapAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder clearMapAddr() {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getMapAddrBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getMapAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
        if (mapAddrBuilder_ != null) {
          return mapAddrBuilder_.getMessageOrBuilder();
        } else {
          return mapAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getMapAddrFieldBuilder() {
        if (mapAddrBuilder_ == null) {
          mapAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  mapAddr_,
                  getParentForChildren(),
                  isClean());
          mapAddr_ = null;
        }
        return mapAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public boolean hasSwitchType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
        return switchType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder setSwitchType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        switchType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder clearSwitchType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 6;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000020);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 6;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltAddM2OneSwitchAck)
    }

    static {
      defaultInstance = new DssCltAddM2OneSwitchAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltAddM2OneSwitchAck)
  }

  public interface DssCltAddM2OneSwitchNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    boolean hasDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    boolean hasMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    boolean hasSwitchType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType();

    // optional .com.kedacom.ops.flink.etl.proto.EAddM2OneSwitchResultCode resultcode = 6;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EAddM2OneSwitchResultCode resultcode = 6;</code>
     */
    boolean hasResultcode();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EAddM2OneSwitchResultCode resultcode = 6;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.EAddM2OneSwitchResultCode getResultcode();

    // optional string MeetingHandle = 7;
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltAddM2OneSwitchNack}
   */
  public static final class DssCltAddM2OneSwitchNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltAddM2OneSwitchNackOrBuilder {
    // Use DssCltAddM2OneSwitchNack.newBuilder() to construct.
    private DssCltAddM2OneSwitchNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltAddM2OneSwitchNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltAddM2OneSwitchNack defaultInstance;
    public static DssCltAddM2OneSwitchNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltAddM2OneSwitchNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddM2OneSwitchNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddM2OneSwitchNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltAddM2OneSwitchNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltAddM2OneSwitchNack>() {
      public DssCltAddM2OneSwitchNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltAddM2OneSwitchNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    public static final int DSTADDR_FIELD_NUMBER = 2;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public boolean hasDstAddr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
      return dstAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
      return dstAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    public static final int MAPADDR_FIELD_NUMBER = 4;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public boolean hasMapAddr() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
      return mapAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
      return mapAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    public static final int SWITCHTYPE_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public boolean hasSwitchType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
      return switchType_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.EAddM2OneSwitchResultCode resultcode = 6;
    public static final int RESULTCODE_FIELD_NUMBER = 6;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.EAddM2OneSwitchResultCode resultcode_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EAddM2OneSwitchResultCode resultcode = 6;</code>
     */
    public boolean hasResultcode() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EAddM2OneSwitchResultCode resultcode = 6;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.EAddM2OneSwitchResultCode getResultcode() {
      return resultcode_;
    }

    // optional string MeetingHandle = 7;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 7;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientId_ = 0;
      dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EAddM2OneSwitchResultCode.eAddM2OneSwitchSucceed;
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltAddM2OneSwitchNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddM2OneSwitchNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddM2OneSwitchNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDstAddrFieldBuilder();
          getRcvAddrFieldBuilder();
          getMapAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        bitField0_ = (bitField0_ & ~0x00000010);
        resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EAddM2OneSwitchResultCode.eAddM2OneSwitchSucceed;
        bitField0_ = (bitField0_ & ~0x00000020);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddM2OneSwitchNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddM2OneSwitchNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (dstAddrBuilder_ == null) {
          result.dstAddr_ = dstAddr_;
        } else {
          result.dstAddr_ = dstAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (mapAddrBuilder_ == null) {
          result.mapAddr_ = mapAddr_;
        } else {
          result.mapAddr_ = mapAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.switchType_ = switchType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.resultcode_ = resultcode_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> dstAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public boolean hasDstAddr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
        if (dstAddrBuilder_ == null) {
          return dstAddr_;
        } else {
          return dstAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dstAddr_ = value;
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = builderForValue.build();
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder mergeDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              dstAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            dstAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(dstAddr_).mergeFrom(value).buildPartial();
          } else {
            dstAddr_ = value;
          }
          onChanged();
        } else {
          dstAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder clearDstAddr() {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getDstAddrBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDstAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
        if (dstAddrBuilder_ != null) {
          return dstAddrBuilder_.getMessageOrBuilder();
        } else {
          return dstAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getDstAddrFieldBuilder() {
        if (dstAddrBuilder_ == null) {
          dstAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  dstAddr_,
                  getParentForChildren(),
                  isClean());
          dstAddr_ = null;
        }
        return dstAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> mapAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public boolean hasMapAddr() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
        if (mapAddrBuilder_ == null) {
          return mapAddr_;
        } else {
          return mapAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mapAddr_ = value;
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = builderForValue.build();
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder mergeMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              mapAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            mapAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(mapAddr_).mergeFrom(value).buildPartial();
          } else {
            mapAddr_ = value;
          }
          onChanged();
        } else {
          mapAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder clearMapAddr() {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getMapAddrBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getMapAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
        if (mapAddrBuilder_ != null) {
          return mapAddrBuilder_.getMessageOrBuilder();
        } else {
          return mapAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getMapAddrFieldBuilder() {
        if (mapAddrBuilder_ == null) {
          mapAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  mapAddr_,
                  getParentForChildren(),
                  isClean());
          mapAddr_ = null;
        }
        return mapAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public boolean hasSwitchType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
        return switchType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder setSwitchType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        switchType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder clearSwitchType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.EAddM2OneSwitchResultCode resultcode = 6;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.EAddM2OneSwitchResultCode resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EAddM2OneSwitchResultCode.eAddM2OneSwitchSucceed;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EAddM2OneSwitchResultCode resultcode = 6;</code>
       */
      public boolean hasResultcode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EAddM2OneSwitchResultCode resultcode = 6;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.EAddM2OneSwitchResultCode getResultcode() {
        return resultcode_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EAddM2OneSwitchResultCode resultcode = 6;</code>
       */
      public Builder setResultcode(com.kedacom.ops.flink.etl.proto.Dssevenum.EAddM2OneSwitchResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        resultcode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EAddM2OneSwitchResultCode resultcode = 6;</code>
       */
      public Builder clearResultcode() {
        bitField0_ = (bitField0_ & ~0x00000020);
        resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EAddM2OneSwitchResultCode.eAddM2OneSwitchSucceed;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 7;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000040);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltAddM2OneSwitchNack)
    }

    static {
      defaultInstance = new DssCltAddM2OneSwitchNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltAddM2OneSwitchNack)
  }

  public interface CltDssRemoveM2OneSwitchReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    boolean hasDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    boolean hasMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    boolean hasSwitchType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType();

    // optional bool RemoveByDst = 6;
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    boolean hasRemoveByDst();
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    boolean getRemoveByDst();

    // optional bool RemoveByRcvDst = 7;
    /**
     * <code>optional bool RemoveByRcvDst = 7;</code>
     */
    boolean hasRemoveByRcvDst();
    /**
     * <code>optional bool RemoveByRcvDst = 7;</code>
     */
    boolean getRemoveByRcvDst();

    // optional uint32 ClientTick = 8;
    /**
     * <code>optional uint32 ClientTick = 8;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 8;</code>
     */
    int getClientTick();

    // optional string MeetingHandle = 9;
    /**
     * <code>optional string MeetingHandle = 9;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 9;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 9;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssRemoveM2OneSwitchReq}
   */
  public static final class CltDssRemoveM2OneSwitchReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssRemoveM2OneSwitchReqOrBuilder {
    // Use CltDssRemoveM2OneSwitchReq.newBuilder() to construct.
    private CltDssRemoveM2OneSwitchReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssRemoveM2OneSwitchReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssRemoveM2OneSwitchReq defaultInstance;
    public static CltDssRemoveM2OneSwitchReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssRemoveM2OneSwitchReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveM2OneSwitchReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveM2OneSwitchReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssRemoveM2OneSwitchReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssRemoveM2OneSwitchReq>() {
      public CltDssRemoveM2OneSwitchReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssRemoveM2OneSwitchReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    public static final int DSTADDR_FIELD_NUMBER = 2;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public boolean hasDstAddr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
      return dstAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
      return dstAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    public static final int MAPADDR_FIELD_NUMBER = 4;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public boolean hasMapAddr() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
      return mapAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
      return mapAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    public static final int SWITCHTYPE_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public boolean hasSwitchType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
      return switchType_;
    }

    // optional bool RemoveByDst = 6;
    public static final int REMOVEBYDST_FIELD_NUMBER = 6;
    private boolean removeByDst_;
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    public boolean hasRemoveByDst() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    public boolean getRemoveByDst() {
      return removeByDst_;
    }

    // optional bool RemoveByRcvDst = 7;
    public static final int REMOVEBYRCVDST_FIELD_NUMBER = 7;
    private boolean removeByRcvDst_;
    /**
     * <code>optional bool RemoveByRcvDst = 7;</code>
     */
    public boolean hasRemoveByRcvDst() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool RemoveByRcvDst = 7;</code>
     */
    public boolean getRemoveByRcvDst() {
      return removeByRcvDst_;
    }

    // optional uint32 ClientTick = 8;
    public static final int CLIENTTICK_FIELD_NUMBER = 8;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 8;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 ClientTick = 8;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    // optional string MeetingHandle = 9;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 9;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 9;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string MeetingHandle = 9;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 9;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientId_ = 0;
      dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      removeByDst_ = false;
      removeByRcvDst_ = false;
      clientTick_ = 0;
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssRemoveM2OneSwitchReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveM2OneSwitchReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveM2OneSwitchReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDstAddrFieldBuilder();
          getRcvAddrFieldBuilder();
          getMapAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        bitField0_ = (bitField0_ & ~0x00000010);
        removeByDst_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        removeByRcvDst_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveM2OneSwitchReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveM2OneSwitchReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (dstAddrBuilder_ == null) {
          result.dstAddr_ = dstAddr_;
        } else {
          result.dstAddr_ = dstAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (mapAddrBuilder_ == null) {
          result.mapAddr_ = mapAddr_;
        } else {
          result.mapAddr_ = mapAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.switchType_ = switchType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.removeByDst_ = removeByDst_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.removeByRcvDst_ = removeByRcvDst_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.clientTick_ = clientTick_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> dstAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public boolean hasDstAddr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
        if (dstAddrBuilder_ == null) {
          return dstAddr_;
        } else {
          return dstAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dstAddr_ = value;
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = builderForValue.build();
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder mergeDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              dstAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            dstAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(dstAddr_).mergeFrom(value).buildPartial();
          } else {
            dstAddr_ = value;
          }
          onChanged();
        } else {
          dstAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder clearDstAddr() {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getDstAddrBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDstAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
        if (dstAddrBuilder_ != null) {
          return dstAddrBuilder_.getMessageOrBuilder();
        } else {
          return dstAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getDstAddrFieldBuilder() {
        if (dstAddrBuilder_ == null) {
          dstAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  dstAddr_,
                  getParentForChildren(),
                  isClean());
          dstAddr_ = null;
        }
        return dstAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> mapAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public boolean hasMapAddr() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
        if (mapAddrBuilder_ == null) {
          return mapAddr_;
        } else {
          return mapAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mapAddr_ = value;
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = builderForValue.build();
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder mergeMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              mapAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            mapAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(mapAddr_).mergeFrom(value).buildPartial();
          } else {
            mapAddr_ = value;
          }
          onChanged();
        } else {
          mapAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder clearMapAddr() {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getMapAddrBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getMapAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
        if (mapAddrBuilder_ != null) {
          return mapAddrBuilder_.getMessageOrBuilder();
        } else {
          return mapAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getMapAddrFieldBuilder() {
        if (mapAddrBuilder_ == null) {
          mapAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  mapAddr_,
                  getParentForChildren(),
                  isClean());
          mapAddr_ = null;
        }
        return mapAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public boolean hasSwitchType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
        return switchType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder setSwitchType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        switchType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder clearSwitchType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        onChanged();
        return this;
      }

      // optional bool RemoveByDst = 6;
      private boolean removeByDst_ ;
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public boolean hasRemoveByDst() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public boolean getRemoveByDst() {
        return removeByDst_;
      }
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public Builder setRemoveByDst(boolean value) {
        bitField0_ |= 0x00000020;
        removeByDst_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public Builder clearRemoveByDst() {
        bitField0_ = (bitField0_ & ~0x00000020);
        removeByDst_ = false;
        onChanged();
        return this;
      }

      // optional bool RemoveByRcvDst = 7;
      private boolean removeByRcvDst_ ;
      /**
       * <code>optional bool RemoveByRcvDst = 7;</code>
       */
      public boolean hasRemoveByRcvDst() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool RemoveByRcvDst = 7;</code>
       */
      public boolean getRemoveByRcvDst() {
        return removeByRcvDst_;
      }
      /**
       * <code>optional bool RemoveByRcvDst = 7;</code>
       */
      public Builder setRemoveByRcvDst(boolean value) {
        bitField0_ |= 0x00000040;
        removeByRcvDst_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool RemoveByRcvDst = 7;</code>
       */
      public Builder clearRemoveByRcvDst() {
        bitField0_ = (bitField0_ & ~0x00000040);
        removeByRcvDst_ = false;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 8;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 8;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 ClientTick = 8;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 8;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000080;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 8;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000080);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 9;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 9;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string MeetingHandle = 9;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 9;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 9;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 9;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000100);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 9;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssRemoveM2OneSwitchReq)
    }

    static {
      defaultInstance = new CltDssRemoveM2OneSwitchReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssRemoveM2OneSwitchReq)
  }

  public interface DssCltRemoveM2OneSwitchAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    boolean hasDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    boolean hasMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    boolean hasSwitchType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType();

    // optional bool RemoveByDst = 6;
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    boolean hasRemoveByDst();
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    boolean getRemoveByDst();

    // optional string MeetingHandle = 7;
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveM2OneSwitchAck}
   */
  public static final class DssCltRemoveM2OneSwitchAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltRemoveM2OneSwitchAckOrBuilder {
    // Use DssCltRemoveM2OneSwitchAck.newBuilder() to construct.
    private DssCltRemoveM2OneSwitchAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltRemoveM2OneSwitchAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltRemoveM2OneSwitchAck defaultInstance;
    public static DssCltRemoveM2OneSwitchAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltRemoveM2OneSwitchAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveM2OneSwitchAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveM2OneSwitchAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltRemoveM2OneSwitchAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltRemoveM2OneSwitchAck>() {
      public DssCltRemoveM2OneSwitchAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltRemoveM2OneSwitchAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    public static final int DSTADDR_FIELD_NUMBER = 2;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public boolean hasDstAddr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
      return dstAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
      return dstAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    public static final int MAPADDR_FIELD_NUMBER = 4;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public boolean hasMapAddr() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
      return mapAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
      return mapAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    public static final int SWITCHTYPE_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public boolean hasSwitchType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
      return switchType_;
    }

    // optional bool RemoveByDst = 6;
    public static final int REMOVEBYDST_FIELD_NUMBER = 6;
    private boolean removeByDst_;
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    public boolean hasRemoveByDst() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    public boolean getRemoveByDst() {
      return removeByDst_;
    }

    // optional string MeetingHandle = 7;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 7;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 7;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientId_ = 0;
      dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      removeByDst_ = false;
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveM2OneSwitchAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveM2OneSwitchAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveM2OneSwitchAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDstAddrFieldBuilder();
          getRcvAddrFieldBuilder();
          getMapAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        bitField0_ = (bitField0_ & ~0x00000010);
        removeByDst_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveM2OneSwitchAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (dstAddrBuilder_ == null) {
          result.dstAddr_ = dstAddr_;
        } else {
          result.dstAddr_ = dstAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (mapAddrBuilder_ == null) {
          result.mapAddr_ = mapAddr_;
        } else {
          result.mapAddr_ = mapAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.switchType_ = switchType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.removeByDst_ = removeByDst_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> dstAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public boolean hasDstAddr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
        if (dstAddrBuilder_ == null) {
          return dstAddr_;
        } else {
          return dstAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dstAddr_ = value;
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = builderForValue.build();
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder mergeDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              dstAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            dstAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(dstAddr_).mergeFrom(value).buildPartial();
          } else {
            dstAddr_ = value;
          }
          onChanged();
        } else {
          dstAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder clearDstAddr() {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getDstAddrBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDstAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
        if (dstAddrBuilder_ != null) {
          return dstAddrBuilder_.getMessageOrBuilder();
        } else {
          return dstAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getDstAddrFieldBuilder() {
        if (dstAddrBuilder_ == null) {
          dstAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  dstAddr_,
                  getParentForChildren(),
                  isClean());
          dstAddr_ = null;
        }
        return dstAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> mapAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public boolean hasMapAddr() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
        if (mapAddrBuilder_ == null) {
          return mapAddr_;
        } else {
          return mapAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mapAddr_ = value;
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = builderForValue.build();
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder mergeMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              mapAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            mapAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(mapAddr_).mergeFrom(value).buildPartial();
          } else {
            mapAddr_ = value;
          }
          onChanged();
        } else {
          mapAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder clearMapAddr() {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getMapAddrBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getMapAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
        if (mapAddrBuilder_ != null) {
          return mapAddrBuilder_.getMessageOrBuilder();
        } else {
          return mapAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getMapAddrFieldBuilder() {
        if (mapAddrBuilder_ == null) {
          mapAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  mapAddr_,
                  getParentForChildren(),
                  isClean());
          mapAddr_ = null;
        }
        return mapAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public boolean hasSwitchType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
        return switchType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder setSwitchType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        switchType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder clearSwitchType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        onChanged();
        return this;
      }

      // optional bool RemoveByDst = 6;
      private boolean removeByDst_ ;
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public boolean hasRemoveByDst() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public boolean getRemoveByDst() {
        return removeByDst_;
      }
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public Builder setRemoveByDst(boolean value) {
        bitField0_ |= 0x00000020;
        removeByDst_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public Builder clearRemoveByDst() {
        bitField0_ = (bitField0_ & ~0x00000020);
        removeByDst_ = false;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 7;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000040);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 7;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveM2OneSwitchAck)
    }

    static {
      defaultInstance = new DssCltRemoveM2OneSwitchAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveM2OneSwitchAck)
  }

  public interface DssCltRemoveM2OneSwitchNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    boolean hasDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    boolean hasMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    boolean hasSwitchType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType();

    // optional bool RemoveByDst = 6;
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    boolean hasRemoveByDst();
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    boolean getRemoveByDst();

    // optional .com.kedacom.ops.flink.etl.proto.ERmM2OneSwitchResultCode resultcode = 7;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ERmM2OneSwitchResultCode resultcode = 7;</code>
     */
    boolean hasResultcode();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ERmM2OneSwitchResultCode resultcode = 7;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ERmM2OneSwitchResultCode getResultcode();

    // optional string MeetingHandle = 8;
    /**
     * <code>optional string MeetingHandle = 8;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 8;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 8;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveM2OneSwitchNack}
   */
  public static final class DssCltRemoveM2OneSwitchNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltRemoveM2OneSwitchNackOrBuilder {
    // Use DssCltRemoveM2OneSwitchNack.newBuilder() to construct.
    private DssCltRemoveM2OneSwitchNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltRemoveM2OneSwitchNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltRemoveM2OneSwitchNack defaultInstance;
    public static DssCltRemoveM2OneSwitchNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltRemoveM2OneSwitchNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveM2OneSwitchNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveM2OneSwitchNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltRemoveM2OneSwitchNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltRemoveM2OneSwitchNack>() {
      public DssCltRemoveM2OneSwitchNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltRemoveM2OneSwitchNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
    public static final int DSTADDR_FIELD_NUMBER = 2;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public boolean hasDstAddr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
      return dstAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
      return dstAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
    public static final int MAPADDR_FIELD_NUMBER = 4;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public boolean hasMapAddr() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
      return mapAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
      return mapAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
    public static final int SWITCHTYPE_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public boolean hasSwitchType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
      return switchType_;
    }

    // optional bool RemoveByDst = 6;
    public static final int REMOVEBYDST_FIELD_NUMBER = 6;
    private boolean removeByDst_;
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    public boolean hasRemoveByDst() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool RemoveByDst = 6;</code>
     */
    public boolean getRemoveByDst() {
      return removeByDst_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ERmM2OneSwitchResultCode resultcode = 7;
    public static final int RESULTCODE_FIELD_NUMBER = 7;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ERmM2OneSwitchResultCode resultcode_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ERmM2OneSwitchResultCode resultcode = 7;</code>
     */
    public boolean hasResultcode() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ERmM2OneSwitchResultCode resultcode = 7;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ERmM2OneSwitchResultCode getResultcode() {
      return resultcode_;
    }

    // optional string MeetingHandle = 8;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 8;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 8;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string MeetingHandle = 8;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 8;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientId_ = 0;
      dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      removeByDst_ = false;
      resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ERmM2OneSwitchResultCode.eRmM2OneSwitchSucceed;
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveM2OneSwitchNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveM2OneSwitchNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveM2OneSwitchNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDstAddrFieldBuilder();
          getRcvAddrFieldBuilder();
          getMapAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        bitField0_ = (bitField0_ & ~0x00000010);
        removeByDst_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ERmM2OneSwitchResultCode.eRmM2OneSwitchSucceed;
        bitField0_ = (bitField0_ & ~0x00000040);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveM2OneSwitchNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveM2OneSwitchNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (dstAddrBuilder_ == null) {
          result.dstAddr_ = dstAddr_;
        } else {
          result.dstAddr_ = dstAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (mapAddrBuilder_ == null) {
          result.mapAddr_ = mapAddr_;
        } else {
          result.mapAddr_ = mapAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.switchType_ = switchType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.removeByDst_ = removeByDst_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.resultcode_ = resultcode_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> dstAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public boolean hasDstAddr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getDstAddr() {
        if (dstAddrBuilder_ == null) {
          return dstAddr_;
        } else {
          return dstAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dstAddr_ = value;
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder setDstAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = builderForValue.build();
          onChanged();
        } else {
          dstAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder mergeDstAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (dstAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              dstAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            dstAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(dstAddr_).mergeFrom(value).buildPartial();
          } else {
            dstAddr_ = value;
          }
          onChanged();
        } else {
          dstAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public Builder clearDstAddr() {
        if (dstAddrBuilder_ == null) {
          dstAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          dstAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getDstAddrBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDstAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getDstAddrOrBuilder() {
        if (dstAddrBuilder_ != null) {
          return dstAddrBuilder_.getMessageOrBuilder();
        } else {
          return dstAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr DstAddr = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getDstAddrFieldBuilder() {
        if (dstAddrBuilder_ == null) {
          dstAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  dstAddr_,
                  getParentForChildren(),
                  isClean());
          dstAddr_ = null;
        }
        return dstAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> mapAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public boolean hasMapAddr() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getMapAddr() {
        if (mapAddrBuilder_ == null) {
          return mapAddr_;
        } else {
          return mapAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mapAddr_ = value;
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder setMapAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = builderForValue.build();
          onChanged();
        } else {
          mapAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder mergeMapAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (mapAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              mapAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            mapAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(mapAddr_).mergeFrom(value).buildPartial();
          } else {
            mapAddr_ = value;
          }
          onChanged();
        } else {
          mapAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public Builder clearMapAddr() {
        if (mapAddrBuilder_ == null) {
          mapAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          mapAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getMapAddrBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getMapAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getMapAddrOrBuilder() {
        if (mapAddrBuilder_ != null) {
          return mapAddrBuilder_.getMessageOrBuilder();
        } else {
          return mapAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr MapAddr = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getMapAddrFieldBuilder() {
        if (mapAddrBuilder_ == null) {
          mapAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  mapAddr_,
                  getParentForChildren(),
                  isClean());
          mapAddr_ = null;
        }
        return mapAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public boolean hasSwitchType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
        return switchType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder setSwitchType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        switchType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 5;</code>
       */
      public Builder clearSwitchType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        onChanged();
        return this;
      }

      // optional bool RemoveByDst = 6;
      private boolean removeByDst_ ;
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public boolean hasRemoveByDst() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public boolean getRemoveByDst() {
        return removeByDst_;
      }
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public Builder setRemoveByDst(boolean value) {
        bitField0_ |= 0x00000020;
        removeByDst_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool RemoveByDst = 6;</code>
       */
      public Builder clearRemoveByDst() {
        bitField0_ = (bitField0_ & ~0x00000020);
        removeByDst_ = false;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ERmM2OneSwitchResultCode resultcode = 7;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ERmM2OneSwitchResultCode resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ERmM2OneSwitchResultCode.eRmM2OneSwitchSucceed;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ERmM2OneSwitchResultCode resultcode = 7;</code>
       */
      public boolean hasResultcode() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ERmM2OneSwitchResultCode resultcode = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ERmM2OneSwitchResultCode getResultcode() {
        return resultcode_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ERmM2OneSwitchResultCode resultcode = 7;</code>
       */
      public Builder setResultcode(com.kedacom.ops.flink.etl.proto.Dssevenum.ERmM2OneSwitchResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        resultcode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ERmM2OneSwitchResultCode resultcode = 7;</code>
       */
      public Builder clearResultcode() {
        bitField0_ = (bitField0_ & ~0x00000040);
        resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ERmM2OneSwitchResultCode.eRmM2OneSwitchSucceed;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 8;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 8;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string MeetingHandle = 8;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 8;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 8;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 8;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000080);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 8;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveM2OneSwitchNack)
    }

    static {
      defaultInstance = new DssCltRemoveM2OneSwitchNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveM2OneSwitchNack)
  }

  public interface CltDssAddDumpReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
     */
    boolean hasCipher();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher getCipher();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder getCipherOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
     */
    boolean hasFixedPt();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt getFixedPt();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder getFixedPtOrBuilder();

    // optional uint32 ClientTick = 6;
    /**
     * <code>optional uint32 ClientTick = 6;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 6;</code>
     */
    int getClientTick();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;</code>
     */
    boolean hasSwitchType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;</code>
     */
    boolean hasSwitchStreamType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType getSwitchStreamType();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;</code>
     */
    boolean hasSwitchDirectionType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType getSwitchDirectionType();

    // optional bytes AnalysisContext = 10;
    /**
     * <code>optional bytes AnalysisContext = 10;</code>
     */
    boolean hasAnalysisContext();
    /**
     * <code>optional bytes AnalysisContext = 10;</code>
     */
    com.google.protobuf.ByteString getAnalysisContext();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssAddDumpReq}
   */
  public static final class CltDssAddDumpReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssAddDumpReqOrBuilder {
    // Use CltDssAddDumpReq.newBuilder() to construct.
    private CltDssAddDumpReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssAddDumpReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssAddDumpReq defaultInstance;
    public static CltDssAddDumpReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssAddDumpReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddDumpReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddDumpReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssAddDumpReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssAddDumpReq>() {
      public CltDssAddDumpReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssAddDumpReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;
    public static final int CIPHER_FIELD_NUMBER = 4;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher cipher_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
     */
    public boolean hasCipher() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher getCipher() {
      return cipher_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder getCipherOrBuilder() {
      return cipher_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;
    public static final int FIXEDPT_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt fixedPt_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
     */
    public boolean hasFixedPt() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt getFixedPt() {
      return fixedPt_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder getFixedPtOrBuilder() {
      return fixedPt_;
    }

    // optional uint32 ClientTick = 6;
    public static final int CLIENTTICK_FIELD_NUMBER = 6;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 6;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 ClientTick = 6;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;
    public static final int SWITCHTYPE_FIELD_NUMBER = 7;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;</code>
     */
    public boolean hasSwitchType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
      return switchType_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;
    public static final int SWITCHSTREAMTYPE_FIELD_NUMBER = 8;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType switchStreamType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;</code>
     */
    public boolean hasSwitchStreamType() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType getSwitchStreamType() {
      return switchStreamType_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;
    public static final int SWITCHDIRECTIONTYPE_FIELD_NUMBER = 9;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType switchDirectionType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;</code>
     */
    public boolean hasSwitchDirectionType() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType getSwitchDirectionType() {
      return switchDirectionType_;
    }

    // optional bytes AnalysisContext = 10;
    public static final int ANALYSISCONTEXT_FIELD_NUMBER = 10;
    private com.google.protobuf.ByteString analysisContext_;
    /**
     * <code>optional bytes AnalysisContext = 10;</code>
     */
    public boolean hasAnalysisContext() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bytes AnalysisContext = 10;</code>
     */
    public com.google.protobuf.ByteString getAnalysisContext() {
      return analysisContext_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
      fixedPt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
      clientTick_ = 0;
      switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      switchStreamType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType.StreamType_Unknown;
      switchDirectionType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType.DSDIRECTION_NONE;
      analysisContext_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssAddDumpReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddDumpReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddDumpReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRcvAddrFieldBuilder();
          getCipherFieldBuilder();
          getFixedPtFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (cipherBuilder_ == null) {
          cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
        } else {
          cipherBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (fixedPtBuilder_ == null) {
          fixedPt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
        } else {
          fixedPtBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        bitField0_ = (bitField0_ & ~0x00000040);
        switchStreamType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType.StreamType_Unknown;
        bitField0_ = (bitField0_ & ~0x00000080);
        switchDirectionType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType.DSDIRECTION_NONE;
        bitField0_ = (bitField0_ & ~0x00000100);
        analysisContext_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddDumpReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssAddDumpReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (cipherBuilder_ == null) {
          result.cipher_ = cipher_;
        } else {
          result.cipher_ = cipherBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (fixedPtBuilder_ == null) {
          result.fixedPt_ = fixedPt_;
        } else {
          result.fixedPt_ = fixedPtBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.clientTick_ = clientTick_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.switchType_ = switchType_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.switchStreamType_ = switchStreamType_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.switchDirectionType_ = switchDirectionType_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.analysisContext_ = analysisContext_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder> cipherBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public boolean hasCipher() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher getCipher() {
        if (cipherBuilder_ == null) {
          return cipher_;
        } else {
          return cipherBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public Builder setCipher(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher value) {
        if (cipherBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cipher_ = value;
          onChanged();
        } else {
          cipherBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public Builder setCipher(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder builderForValue) {
        if (cipherBuilder_ == null) {
          cipher_ = builderForValue.build();
          onChanged();
        } else {
          cipherBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public Builder mergeCipher(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher value) {
        if (cipherBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              cipher_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance()) {
            cipher_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.newBuilder(cipher_).mergeFrom(value).buildPartial();
          } else {
            cipher_ = value;
          }
          onChanged();
        } else {
          cipherBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public Builder clearCipher() {
        if (cipherBuilder_ == null) {
          cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
          onChanged();
        } else {
          cipherBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder getCipherBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getCipherFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder getCipherOrBuilder() {
        if (cipherBuilder_ != null) {
          return cipherBuilder_.getMessageOrBuilder();
        } else {
          return cipher_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder> 
          getCipherFieldBuilder() {
        if (cipherBuilder_ == null) {
          cipherBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder>(
                  cipher_,
                  getParentForChildren(),
                  isClean());
          cipher_ = null;
        }
        return cipherBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt fixedPt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder> fixedPtBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public boolean hasFixedPt() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt getFixedPt() {
        if (fixedPtBuilder_ == null) {
          return fixedPt_;
        } else {
          return fixedPtBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public Builder setFixedPt(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt value) {
        if (fixedPtBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fixedPt_ = value;
          onChanged();
        } else {
          fixedPtBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public Builder setFixedPt(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder builderForValue) {
        if (fixedPtBuilder_ == null) {
          fixedPt_ = builderForValue.build();
          onChanged();
        } else {
          fixedPtBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public Builder mergeFixedPt(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt value) {
        if (fixedPtBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              fixedPt_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance()) {
            fixedPt_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.newBuilder(fixedPt_).mergeFrom(value).buildPartial();
          } else {
            fixedPt_ = value;
          }
          onChanged();
        } else {
          fixedPtBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public Builder clearFixedPt() {
        if (fixedPtBuilder_ == null) {
          fixedPt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
          onChanged();
        } else {
          fixedPtBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder getFixedPtBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getFixedPtFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder getFixedPtOrBuilder() {
        if (fixedPtBuilder_ != null) {
          return fixedPtBuilder_.getMessageOrBuilder();
        } else {
          return fixedPt_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder> 
          getFixedPtFieldBuilder() {
        if (fixedPtBuilder_ == null) {
          fixedPtBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder>(
                  fixedPt_,
                  getParentForChildren(),
                  isClean());
          fixedPt_ = null;
        }
        return fixedPtBuilder_;
      }

      // optional uint32 ClientTick = 6;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 6;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 ClientTick = 6;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 6;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000020;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 6;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000020);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;</code>
       */
      public boolean hasSwitchType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
        return switchType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;</code>
       */
      public Builder setSwitchType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        switchType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;</code>
       */
      public Builder clearSwitchType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType switchStreamType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType.StreamType_Unknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;</code>
       */
      public boolean hasSwitchStreamType() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType getSwitchStreamType() {
        return switchStreamType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;</code>
       */
      public Builder setSwitchStreamType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        switchStreamType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchStreamType SwitchStreamType = 8;</code>
       */
      public Builder clearSwitchStreamType() {
        bitField0_ = (bitField0_ & ~0x00000080);
        switchStreamType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchStreamType.StreamType_Unknown;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType switchDirectionType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType.DSDIRECTION_NONE;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;</code>
       */
      public boolean hasSwitchDirectionType() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType getSwitchDirectionType() {
        return switchDirectionType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;</code>
       */
      public Builder setSwitchDirectionType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        switchDirectionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 9;</code>
       */
      public Builder clearSwitchDirectionType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        switchDirectionType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType.DSDIRECTION_NONE;
        onChanged();
        return this;
      }

      // optional bytes AnalysisContext = 10;
      private com.google.protobuf.ByteString analysisContext_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes AnalysisContext = 10;</code>
       */
      public boolean hasAnalysisContext() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bytes AnalysisContext = 10;</code>
       */
      public com.google.protobuf.ByteString getAnalysisContext() {
        return analysisContext_;
      }
      /**
       * <code>optional bytes AnalysisContext = 10;</code>
       */
      public Builder setAnalysisContext(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        analysisContext_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes AnalysisContext = 10;</code>
       */
      public Builder clearAnalysisContext() {
        bitField0_ = (bitField0_ & ~0x00000200);
        analysisContext_ = getDefaultInstance().getAnalysisContext();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssAddDumpReq)
    }

    static {
      defaultInstance = new CltDssAddDumpReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssAddDumpReq)
  }

  public interface DssCltAddDumpAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
     */
    boolean hasCipher();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher getCipher();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder getCipherOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
     */
    boolean hasFixedPt();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt getFixedPt();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder getFixedPtOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 6;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 6;</code>
     */
    boolean hasSwitchType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 6;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltAddDumpAck}
   */
  public static final class DssCltAddDumpAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltAddDumpAckOrBuilder {
    // Use DssCltAddDumpAck.newBuilder() to construct.
    private DssCltAddDumpAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltAddDumpAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltAddDumpAck defaultInstance;
    public static DssCltAddDumpAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltAddDumpAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddDumpAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddDumpAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltAddDumpAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltAddDumpAck>() {
      public DssCltAddDumpAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltAddDumpAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;
    public static final int CIPHER_FIELD_NUMBER = 4;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher cipher_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
     */
    public boolean hasCipher() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher getCipher() {
      return cipher_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder getCipherOrBuilder() {
      return cipher_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;
    public static final int FIXEDPT_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt fixedPt_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
     */
    public boolean hasFixedPt() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt getFixedPt() {
      return fixedPt_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder getFixedPtOrBuilder() {
      return fixedPt_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 6;
    public static final int SWITCHTYPE_FIELD_NUMBER = 6;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 6;</code>
     */
    public boolean hasSwitchType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 6;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
      return switchType_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
      fixedPt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
      switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltAddDumpAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddDumpAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddDumpAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRcvAddrFieldBuilder();
          getCipherFieldBuilder();
          getFixedPtFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (cipherBuilder_ == null) {
          cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
        } else {
          cipherBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (fixedPtBuilder_ == null) {
          fixedPt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
        } else {
          fixedPtBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddDumpAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (cipherBuilder_ == null) {
          result.cipher_ = cipher_;
        } else {
          result.cipher_ = cipherBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (fixedPtBuilder_ == null) {
          result.fixedPt_ = fixedPt_;
        } else {
          result.fixedPt_ = fixedPtBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.switchType_ = switchType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder> cipherBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public boolean hasCipher() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher getCipher() {
        if (cipherBuilder_ == null) {
          return cipher_;
        } else {
          return cipherBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public Builder setCipher(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher value) {
        if (cipherBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cipher_ = value;
          onChanged();
        } else {
          cipherBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public Builder setCipher(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder builderForValue) {
        if (cipherBuilder_ == null) {
          cipher_ = builderForValue.build();
          onChanged();
        } else {
          cipherBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public Builder mergeCipher(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher value) {
        if (cipherBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              cipher_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance()) {
            cipher_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.newBuilder(cipher_).mergeFrom(value).buildPartial();
          } else {
            cipher_ = value;
          }
          onChanged();
        } else {
          cipherBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public Builder clearCipher() {
        if (cipherBuilder_ == null) {
          cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
          onChanged();
        } else {
          cipherBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder getCipherBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getCipherFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder getCipherOrBuilder() {
        if (cipherBuilder_ != null) {
          return cipherBuilder_.getMessageOrBuilder();
        } else {
          return cipher_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder> 
          getCipherFieldBuilder() {
        if (cipherBuilder_ == null) {
          cipherBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder>(
                  cipher_,
                  getParentForChildren(),
                  isClean());
          cipher_ = null;
        }
        return cipherBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt fixedPt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder> fixedPtBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public boolean hasFixedPt() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt getFixedPt() {
        if (fixedPtBuilder_ == null) {
          return fixedPt_;
        } else {
          return fixedPtBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public Builder setFixedPt(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt value) {
        if (fixedPtBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fixedPt_ = value;
          onChanged();
        } else {
          fixedPtBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public Builder setFixedPt(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder builderForValue) {
        if (fixedPtBuilder_ == null) {
          fixedPt_ = builderForValue.build();
          onChanged();
        } else {
          fixedPtBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public Builder mergeFixedPt(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt value) {
        if (fixedPtBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              fixedPt_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance()) {
            fixedPt_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.newBuilder(fixedPt_).mergeFrom(value).buildPartial();
          } else {
            fixedPt_ = value;
          }
          onChanged();
        } else {
          fixedPtBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public Builder clearFixedPt() {
        if (fixedPtBuilder_ == null) {
          fixedPt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
          onChanged();
        } else {
          fixedPtBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder getFixedPtBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getFixedPtFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder getFixedPtOrBuilder() {
        if (fixedPtBuilder_ != null) {
          return fixedPtBuilder_.getMessageOrBuilder();
        } else {
          return fixedPt_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder> 
          getFixedPtFieldBuilder() {
        if (fixedPtBuilder_ == null) {
          fixedPtBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder>(
                  fixedPt_,
                  getParentForChildren(),
                  isClean());
          fixedPt_ = null;
        }
        return fixedPtBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 6;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 6;</code>
       */
      public boolean hasSwitchType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 6;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
        return switchType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 6;</code>
       */
      public Builder setSwitchType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        switchType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 6;</code>
       */
      public Builder clearSwitchType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltAddDumpAck)
    }

    static {
      defaultInstance = new DssCltAddDumpAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltAddDumpAck)
  }

  public interface DssCltAddDumpNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
     */
    boolean hasCipher();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher getCipher();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder getCipherOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
     */
    boolean hasFixedPt();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt getFixedPt();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder getFixedPtOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.EAddDumpSwitchResultCode resultcode = 6;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EAddDumpSwitchResultCode resultcode = 6;</code>
     */
    boolean hasResultcode();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EAddDumpSwitchResultCode resultcode = 6;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.EAddDumpSwitchResultCode getResultcode();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;</code>
     */
    boolean hasSwitchType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltAddDumpNack}
   */
  public static final class DssCltAddDumpNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltAddDumpNackOrBuilder {
    // Use DssCltAddDumpNack.newBuilder() to construct.
    private DssCltAddDumpNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltAddDumpNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltAddDumpNack defaultInstance;
    public static DssCltAddDumpNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltAddDumpNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddDumpNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddDumpNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltAddDumpNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltAddDumpNack>() {
      public DssCltAddDumpNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltAddDumpNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;
    public static final int CIPHER_FIELD_NUMBER = 4;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher cipher_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
     */
    public boolean hasCipher() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher getCipher() {
      return cipher_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder getCipherOrBuilder() {
      return cipher_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;
    public static final int FIXEDPT_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt fixedPt_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
     */
    public boolean hasFixedPt() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt getFixedPt() {
      return fixedPt_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder getFixedPtOrBuilder() {
      return fixedPt_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.EAddDumpSwitchResultCode resultcode = 6;
    public static final int RESULTCODE_FIELD_NUMBER = 6;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.EAddDumpSwitchResultCode resultcode_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EAddDumpSwitchResultCode resultcode = 6;</code>
     */
    public boolean hasResultcode() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.EAddDumpSwitchResultCode resultcode = 6;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.EAddDumpSwitchResultCode getResultcode() {
      return resultcode_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;
    public static final int SWITCHTYPE_FIELD_NUMBER = 7;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;</code>
     */
    public boolean hasSwitchType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
      return switchType_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
      fixedPt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
      resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EAddDumpSwitchResultCode.eAddDumpSwitchSucceed;
      switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltAddDumpNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddDumpNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddDumpNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRcvAddrFieldBuilder();
          getCipherFieldBuilder();
          getFixedPtFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (cipherBuilder_ == null) {
          cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
        } else {
          cipherBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (fixedPtBuilder_ == null) {
          fixedPt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
        } else {
          fixedPtBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EAddDumpSwitchResultCode.eAddDumpSwitchSucceed;
        bitField0_ = (bitField0_ & ~0x00000020);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddDumpNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltAddDumpNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (cipherBuilder_ == null) {
          result.cipher_ = cipher_;
        } else {
          result.cipher_ = cipherBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (fixedPtBuilder_ == null) {
          result.fixedPt_ = fixedPt_;
        } else {
          result.fixedPt_ = fixedPtBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.resultcode_ = resultcode_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.switchType_ = switchType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder> cipherBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public boolean hasCipher() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher getCipher() {
        if (cipherBuilder_ == null) {
          return cipher_;
        } else {
          return cipherBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public Builder setCipher(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher value) {
        if (cipherBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cipher_ = value;
          onChanged();
        } else {
          cipherBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public Builder setCipher(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder builderForValue) {
        if (cipherBuilder_ == null) {
          cipher_ = builderForValue.build();
          onChanged();
        } else {
          cipherBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public Builder mergeCipher(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher value) {
        if (cipherBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              cipher_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance()) {
            cipher_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.newBuilder(cipher_).mergeFrom(value).buildPartial();
          } else {
            cipher_ = value;
          }
          onChanged();
        } else {
          cipherBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public Builder clearCipher() {
        if (cipherBuilder_ == null) {
          cipher_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.getDefaultInstance();
          onChanged();
        } else {
          cipherBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder getCipherBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getCipherFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder getCipherOrBuilder() {
        if (cipherBuilder_ != null) {
          return cipherBuilder_.getMessageOrBuilder();
        } else {
          return cipher_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssCipher Cipher = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder> 
          getCipherFieldBuilder() {
        if (cipherBuilder_ == null) {
          cipherBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipher.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssCipherOrBuilder>(
                  cipher_,
                  getParentForChildren(),
                  isClean());
          cipher_ = null;
        }
        return cipherBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt fixedPt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder> fixedPtBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public boolean hasFixedPt() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt getFixedPt() {
        if (fixedPtBuilder_ == null) {
          return fixedPt_;
        } else {
          return fixedPtBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public Builder setFixedPt(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt value) {
        if (fixedPtBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fixedPt_ = value;
          onChanged();
        } else {
          fixedPtBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public Builder setFixedPt(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder builderForValue) {
        if (fixedPtBuilder_ == null) {
          fixedPt_ = builderForValue.build();
          onChanged();
        } else {
          fixedPtBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public Builder mergeFixedPt(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt value) {
        if (fixedPtBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              fixedPt_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance()) {
            fixedPt_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.newBuilder(fixedPt_).mergeFrom(value).buildPartial();
          } else {
            fixedPt_ = value;
          }
          onChanged();
        } else {
          fixedPtBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public Builder clearFixedPt() {
        if (fixedPtBuilder_ == null) {
          fixedPt_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.getDefaultInstance();
          onChanged();
        } else {
          fixedPtBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder getFixedPtBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getFixedPtFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder getFixedPtOrBuilder() {
        if (fixedPtBuilder_ != null) {
          return fixedPtBuilder_.getMessageOrBuilder();
        } else {
          return fixedPt_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssFixedPt FixedPt = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder> 
          getFixedPtFieldBuilder() {
        if (fixedPtBuilder_ == null) {
          fixedPtBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPt.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssFixedPtOrBuilder>(
                  fixedPt_,
                  getParentForChildren(),
                  isClean());
          fixedPt_ = null;
        }
        return fixedPtBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.EAddDumpSwitchResultCode resultcode = 6;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.EAddDumpSwitchResultCode resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EAddDumpSwitchResultCode.eAddDumpSwitchSucceed;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EAddDumpSwitchResultCode resultcode = 6;</code>
       */
      public boolean hasResultcode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EAddDumpSwitchResultCode resultcode = 6;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.EAddDumpSwitchResultCode getResultcode() {
        return resultcode_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EAddDumpSwitchResultCode resultcode = 6;</code>
       */
      public Builder setResultcode(com.kedacom.ops.flink.etl.proto.Dssevenum.EAddDumpSwitchResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        resultcode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.EAddDumpSwitchResultCode resultcode = 6;</code>
       */
      public Builder clearResultcode() {
        bitField0_ = (bitField0_ & ~0x00000020);
        resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.EAddDumpSwitchResultCode.eAddDumpSwitchSucceed;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;</code>
       */
      public boolean hasSwitchType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getSwitchType() {
        return switchType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;</code>
       */
      public Builder setSwitchType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        switchType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType SwitchType = 7;</code>
       */
      public Builder clearSwitchType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        switchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltAddDumpNack)
    }

    static {
      defaultInstance = new DssCltAddDumpNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltAddDumpNack)
  }

  public interface CltDssRemoveDumpReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional uint32 ClientTick = 3;
    /**
     * <code>optional uint32 ClientTick = 3;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 3;</code>
     */
    int getClientTick();

    // optional string MeetingHandle = 4;
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType DumpSwitchType = 5;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType DumpSwitchType = 5;</code>
     */
    boolean hasDumpSwitchType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType DumpSwitchType = 5;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getDumpSwitchType();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssRemoveDumpReq}
   */
  public static final class CltDssRemoveDumpReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssRemoveDumpReqOrBuilder {
    // Use CltDssRemoveDumpReq.newBuilder() to construct.
    private CltDssRemoveDumpReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssRemoveDumpReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssRemoveDumpReq defaultInstance;
    public static CltDssRemoveDumpReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssRemoveDumpReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveDumpReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveDumpReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssRemoveDumpReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssRemoveDumpReq>() {
      public CltDssRemoveDumpReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssRemoveDumpReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;
    public static final int RCVADDR_FIELD_NUMBER = 2;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional uint32 ClientTick = 3;
    public static final int CLIENTTICK_FIELD_NUMBER = 3;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 3;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 ClientTick = 3;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    // optional string MeetingHandle = 4;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 4;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchType DumpSwitchType = 5;
    public static final int DUMPSWITCHTYPE_FIELD_NUMBER = 5;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType dumpSwitchType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType DumpSwitchType = 5;</code>
     */
    public boolean hasDumpSwitchType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType DumpSwitchType = 5;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getDumpSwitchType() {
      return dumpSwitchType_;
    }

    private void initFields() {
      clientId_ = 0;
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      clientTick_ = 0;
      meetingHandle_ = "";
      dumpSwitchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssRemoveDumpReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveDumpReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveDumpReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRcvAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        dumpSwitchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveDumpReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveDumpReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.clientTick_ = clientTick_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.dumpSwitchType_ = dumpSwitchType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional uint32 ClientTick = 3;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 3;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 ClientTick = 3;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 3;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000004;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 3;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 4;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchType DumpSwitchType = 5;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType dumpSwitchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType DumpSwitchType = 5;</code>
       */
      public boolean hasDumpSwitchType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType DumpSwitchType = 5;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType getDumpSwitchType() {
        return dumpSwitchType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType DumpSwitchType = 5;</code>
       */
      public Builder setDumpSwitchType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        dumpSwitchType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchType DumpSwitchType = 5;</code>
       */
      public Builder clearDumpSwitchType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dumpSwitchType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchType.DsTypeUnknown;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssRemoveDumpReq)
    }

    static {
      defaultInstance = new CltDssRemoveDumpReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssRemoveDumpReq)
  }

  public interface DssCltRemoveDumpAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional string MeetingHandle = 3;
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveDumpAck}
   */
  public static final class DssCltRemoveDumpAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltRemoveDumpAckOrBuilder {
    // Use DssCltRemoveDumpAck.newBuilder() to construct.
    private DssCltRemoveDumpAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltRemoveDumpAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltRemoveDumpAck defaultInstance;
    public static DssCltRemoveDumpAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltRemoveDumpAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveDumpAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveDumpAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltRemoveDumpAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltRemoveDumpAck>() {
      public DssCltRemoveDumpAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltRemoveDumpAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;
    public static final int RCVADDR_FIELD_NUMBER = 2;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional string MeetingHandle = 3;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 3;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientId_ = 0;
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveDumpAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveDumpAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveDumpAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRcvAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveDumpAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional string MeetingHandle = 3;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 3;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveDumpAck)
    }

    static {
      defaultInstance = new DssCltRemoveDumpAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveDumpAck)
  }

  public interface DssCltRemoveDumpNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
     */
    boolean hasRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder();

    // optional .com.kedacom.ops.flink.etl.proto.ERmDumpSwitchResultCode resultcode = 3;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ERmDumpSwitchResultCode resultcode = 3;</code>
     */
    boolean hasResultcode();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ERmDumpSwitchResultCode resultcode = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ERmDumpSwitchResultCode getResultcode();

    // optional string MeetingHandle = 4;
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveDumpNack}
   */
  public static final class DssCltRemoveDumpNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltRemoveDumpNackOrBuilder {
    // Use DssCltRemoveDumpNack.newBuilder() to construct.
    private DssCltRemoveDumpNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltRemoveDumpNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltRemoveDumpNack defaultInstance;
    public static DssCltRemoveDumpNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltRemoveDumpNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveDumpNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveDumpNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltRemoveDumpNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltRemoveDumpNack>() {
      public DssCltRemoveDumpNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltRemoveDumpNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;
    public static final int RCVADDR_FIELD_NUMBER = 2;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
     */
    public boolean hasRcvAddr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
      return rcvAddr_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
      return rcvAddr_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ERmDumpSwitchResultCode resultcode = 3;
    public static final int RESULTCODE_FIELD_NUMBER = 3;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ERmDumpSwitchResultCode resultcode_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ERmDumpSwitchResultCode resultcode = 3;</code>
     */
    public boolean hasResultcode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ERmDumpSwitchResultCode resultcode = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ERmDumpSwitchResultCode getResultcode() {
      return resultcode_;
    }

    // optional string MeetingHandle = 4;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 4;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientId_ = 0;
      rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ERmDumpSwitchResultCode.eRmDumpSwitchSucceed;
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveDumpNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveDumpNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveDumpNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRcvAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ERmDumpSwitchResultCode.eRmDumpSwitchSucceed;
        bitField0_ = (bitField0_ & ~0x00000004);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveDumpNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveDumpNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (rcvAddrBuilder_ == null) {
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.resultcode_ = resultcode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public boolean hasRcvAddr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_;
        } else {
          return rcvAddrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public Builder setRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rcvAddr_ = value;
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public Builder setRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = builderForValue.build();
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public Builder mergeRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              rcvAddr_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance()) {
            rcvAddr_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.newBuilder(rcvAddr_).mergeFrom(value).buildPartial();
          } else {
            rcvAddr_ = value;
          }
          onChanged();
        } else {
          rcvAddrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance();
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRcvAddrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilder();
        } else {
          return rcvAddr_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ERmDumpSwitchResultCode resultcode = 3;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ERmDumpSwitchResultCode resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ERmDumpSwitchResultCode.eRmDumpSwitchSucceed;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ERmDumpSwitchResultCode resultcode = 3;</code>
       */
      public boolean hasResultcode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ERmDumpSwitchResultCode resultcode = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ERmDumpSwitchResultCode getResultcode() {
        return resultcode_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ERmDumpSwitchResultCode resultcode = 3;</code>
       */
      public Builder setResultcode(com.kedacom.ops.flink.etl.proto.Dssevenum.ERmDumpSwitchResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        resultcode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ERmDumpSwitchResultCode resultcode = 3;</code>
       */
      public Builder clearResultcode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        resultcode_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ERmDumpSwitchResultCode.eRmDumpSwitchSucceed;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 4;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveDumpNack)
    }

    static {
      defaultInstance = new DssCltRemoveDumpNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveDumpNack)
  }

  public interface DssCltSrvLostNtfOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 SrvHandle = 2;
    /**
     * <code>optional uint32 SrvHandle = 2;</code>
     */
    boolean hasSrvHandle();
    /**
     * <code>optional uint32 SrvHandle = 2;</code>
     */
    int getSrvHandle();

    // repeated uint32 PortHandle = 3;
    /**
     * <code>repeated uint32 PortHandle = 3;</code>
     */
    java.util.List<java.lang.Integer> getPortHandleList();
    /**
     * <code>repeated uint32 PortHandle = 3;</code>
     */
    int getPortHandleCount();
    /**
     * <code>repeated uint32 PortHandle = 3;</code>
     */
    int getPortHandle(int index);

    // optional uint32 NeedNtfOnlineAfter = 4;
    /**
     * <code>optional uint32 NeedNtfOnlineAfter = 4;</code>
     */
    boolean hasNeedNtfOnlineAfter();
    /**
     * <code>optional uint32 NeedNtfOnlineAfter = 4;</code>
     */
    int getNeedNtfOnlineAfter();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSrvLostNtf}
   */
  public static final class DssCltSrvLostNtf extends
      com.google.protobuf.GeneratedMessage
      implements DssCltSrvLostNtfOrBuilder {
    // Use DssCltSrvLostNtf.newBuilder() to construct.
    private DssCltSrvLostNtf(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltSrvLostNtf(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltSrvLostNtf defaultInstance;
    public static DssCltSrvLostNtf getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltSrvLostNtf getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSrvLostNtf_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSrvLostNtf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltSrvLostNtf> PARSER =
        new com.google.protobuf.AbstractParser<DssCltSrvLostNtf>() {
      public DssCltSrvLostNtf parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltSrvLostNtf> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 SrvHandle = 2;
    public static final int SRVHANDLE_FIELD_NUMBER = 2;
    private int srvHandle_;
    /**
     * <code>optional uint32 SrvHandle = 2;</code>
     */
    public boolean hasSrvHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 SrvHandle = 2;</code>
     */
    public int getSrvHandle() {
      return srvHandle_;
    }

    // repeated uint32 PortHandle = 3;
    public static final int PORTHANDLE_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> portHandle_;
    /**
     * <code>repeated uint32 PortHandle = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getPortHandleList() {
      return portHandle_;
    }
    /**
     * <code>repeated uint32 PortHandle = 3;</code>
     */
    public int getPortHandleCount() {
      return portHandle_.size();
    }
    /**
     * <code>repeated uint32 PortHandle = 3;</code>
     */
    public int getPortHandle(int index) {
      return portHandle_.get(index);
    }

    // optional uint32 NeedNtfOnlineAfter = 4;
    public static final int NEEDNTFONLINEAFTER_FIELD_NUMBER = 4;
    private int needNtfOnlineAfter_;
    /**
     * <code>optional uint32 NeedNtfOnlineAfter = 4;</code>
     */
    public boolean hasNeedNtfOnlineAfter() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 NeedNtfOnlineAfter = 4;</code>
     */
    public int getNeedNtfOnlineAfter() {
      return needNtfOnlineAfter_;
    }

    private void initFields() {
      clientId_ = 0;
      srvHandle_ = 0;
      portHandle_ = java.util.Collections.emptyList();
      needNtfOnlineAfter_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSrvLostNtf}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtfOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSrvLostNtf_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSrvLostNtf_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        srvHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        portHandle_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        needNtfOnlineAfter_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSrvLostNtf_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvLostNtf(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.srvHandle_ = srvHandle_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          portHandle_ = java.util.Collections.unmodifiableList(portHandle_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.portHandle_ = portHandle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.needNtfOnlineAfter_ = needNtfOnlineAfter_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 SrvHandle = 2;
      private int srvHandle_ ;
      /**
       * <code>optional uint32 SrvHandle = 2;</code>
       */
      public boolean hasSrvHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 SrvHandle = 2;</code>
       */
      public int getSrvHandle() {
        return srvHandle_;
      }
      /**
       * <code>optional uint32 SrvHandle = 2;</code>
       */
      public Builder setSrvHandle(int value) {
        bitField0_ |= 0x00000002;
        srvHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 SrvHandle = 2;</code>
       */
      public Builder clearSrvHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        srvHandle_ = 0;
        onChanged();
        return this;
      }

      // repeated uint32 PortHandle = 3;
      private java.util.List<java.lang.Integer> portHandle_ = java.util.Collections.emptyList();
      private void ensurePortHandleIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          portHandle_ = new java.util.ArrayList<java.lang.Integer>(portHandle_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated uint32 PortHandle = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getPortHandleList() {
        return java.util.Collections.unmodifiableList(portHandle_);
      }
      /**
       * <code>repeated uint32 PortHandle = 3;</code>
       */
      public int getPortHandleCount() {
        return portHandle_.size();
      }
      /**
       * <code>repeated uint32 PortHandle = 3;</code>
       */
      public int getPortHandle(int index) {
        return portHandle_.get(index);
      }
      /**
       * <code>repeated uint32 PortHandle = 3;</code>
       */
      public Builder setPortHandle(
          int index, int value) {
        ensurePortHandleIsMutable();
        portHandle_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 PortHandle = 3;</code>
       */
      public Builder addPortHandle(int value) {
        ensurePortHandleIsMutable();
        portHandle_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 PortHandle = 3;</code>
       */
      public Builder addAllPortHandle(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePortHandleIsMutable();
        super.addAll(values, portHandle_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 PortHandle = 3;</code>
       */
      public Builder clearPortHandle() {
        portHandle_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional uint32 NeedNtfOnlineAfter = 4;
      private int needNtfOnlineAfter_ ;
      /**
       * <code>optional uint32 NeedNtfOnlineAfter = 4;</code>
       */
      public boolean hasNeedNtfOnlineAfter() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 NeedNtfOnlineAfter = 4;</code>
       */
      public int getNeedNtfOnlineAfter() {
        return needNtfOnlineAfter_;
      }
      /**
       * <code>optional uint32 NeedNtfOnlineAfter = 4;</code>
       */
      public Builder setNeedNtfOnlineAfter(int value) {
        bitField0_ |= 0x00000008;
        needNtfOnlineAfter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 NeedNtfOnlineAfter = 4;</code>
       */
      public Builder clearNeedNtfOnlineAfter() {
        bitField0_ = (bitField0_ & ~0x00000008);
        needNtfOnlineAfter_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltSrvLostNtf)
    }

    static {
      defaultInstance = new DssCltSrvLostNtf(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltSrvLostNtf)
  }

  public interface DssCltSrvRegisterNtfOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 SrvHandle = 2;
    /**
     * <code>optional uint32 SrvHandle = 2;</code>
     */
    boolean hasSrvHandle();
    /**
     * <code>optional uint32 SrvHandle = 2;</code>
     */
    int getSrvHandle();

    // repeated string WorkerIp = 3;
    /**
     * <code>repeated string WorkerIp = 3;</code>
     */
    java.util.List<java.lang.String>
    getWorkerIpList();
    /**
     * <code>repeated string WorkerIp = 3;</code>
     */
    int getWorkerIpCount();
    /**
     * <code>repeated string WorkerIp = 3;</code>
     */
    java.lang.String getWorkerIp(int index);
    /**
     * <code>repeated string WorkerIp = 3;</code>
     */
    com.google.protobuf.ByteString
        getWorkerIpBytes(int index);
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSrvRegisterNtf}
   */
  public static final class DssCltSrvRegisterNtf extends
      com.google.protobuf.GeneratedMessage
      implements DssCltSrvRegisterNtfOrBuilder {
    // Use DssCltSrvRegisterNtf.newBuilder() to construct.
    private DssCltSrvRegisterNtf(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltSrvRegisterNtf(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltSrvRegisterNtf defaultInstance;
    public static DssCltSrvRegisterNtf getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltSrvRegisterNtf getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSrvRegisterNtf_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSrvRegisterNtf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltSrvRegisterNtf> PARSER =
        new com.google.protobuf.AbstractParser<DssCltSrvRegisterNtf>() {
      public DssCltSrvRegisterNtf parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltSrvRegisterNtf> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 SrvHandle = 2;
    public static final int SRVHANDLE_FIELD_NUMBER = 2;
    private int srvHandle_;
    /**
     * <code>optional uint32 SrvHandle = 2;</code>
     */
    public boolean hasSrvHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 SrvHandle = 2;</code>
     */
    public int getSrvHandle() {
      return srvHandle_;
    }

    // repeated string WorkerIp = 3;
    public static final int WORKERIP_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList workerIp_;
    /**
     * <code>repeated string WorkerIp = 3;</code>
     */
    public java.util.List<java.lang.String>
        getWorkerIpList() {
      return workerIp_;
    }
    /**
     * <code>repeated string WorkerIp = 3;</code>
     */
    public int getWorkerIpCount() {
      return workerIp_.size();
    }
    /**
     * <code>repeated string WorkerIp = 3;</code>
     */
    public java.lang.String getWorkerIp(int index) {
      return workerIp_.get(index);
    }
    /**
     * <code>repeated string WorkerIp = 3;</code>
     */
    public com.google.protobuf.ByteString
        getWorkerIpBytes(int index) {
      return workerIp_.getByteString(index);
    }

    private void initFields() {
      clientId_ = 0;
      srvHandle_ = 0;
      workerIp_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltSrvRegisterNtf}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtfOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSrvRegisterNtf_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSrvRegisterNtf_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        srvHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        workerIp_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltSrvRegisterNtf_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltSrvRegisterNtf(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.srvHandle_ = srvHandle_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          workerIp_ = new com.google.protobuf.UnmodifiableLazyStringList(
              workerIp_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.workerIp_ = workerIp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 SrvHandle = 2;
      private int srvHandle_ ;
      /**
       * <code>optional uint32 SrvHandle = 2;</code>
       */
      public boolean hasSrvHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 SrvHandle = 2;</code>
       */
      public int getSrvHandle() {
        return srvHandle_;
      }
      /**
       * <code>optional uint32 SrvHandle = 2;</code>
       */
      public Builder setSrvHandle(int value) {
        bitField0_ |= 0x00000002;
        srvHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 SrvHandle = 2;</code>
       */
      public Builder clearSrvHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        srvHandle_ = 0;
        onChanged();
        return this;
      }

      // repeated string WorkerIp = 3;
      private com.google.protobuf.LazyStringList workerIp_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureWorkerIpIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          workerIp_ = new com.google.protobuf.LazyStringArrayList(workerIp_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string WorkerIp = 3;</code>
       */
      public java.util.List<java.lang.String>
          getWorkerIpList() {
        return java.util.Collections.unmodifiableList(workerIp_);
      }
      /**
       * <code>repeated string WorkerIp = 3;</code>
       */
      public int getWorkerIpCount() {
        return workerIp_.size();
      }
      /**
       * <code>repeated string WorkerIp = 3;</code>
       */
      public java.lang.String getWorkerIp(int index) {
        return workerIp_.get(index);
      }
      /**
       * <code>repeated string WorkerIp = 3;</code>
       */
      public com.google.protobuf.ByteString
          getWorkerIpBytes(int index) {
        return workerIp_.getByteString(index);
      }
      /**
       * <code>repeated string WorkerIp = 3;</code>
       */
      public Builder setWorkerIp(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureWorkerIpIsMutable();
        workerIp_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string WorkerIp = 3;</code>
       */
      public Builder addWorkerIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureWorkerIpIsMutable();
        workerIp_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string WorkerIp = 3;</code>
       */
      public Builder addAllWorkerIp(
          java.lang.Iterable<java.lang.String> values) {
        ensureWorkerIpIsMutable();
        super.addAll(values, workerIp_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string WorkerIp = 3;</code>
       */
      public Builder clearWorkerIp() {
        workerIp_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string WorkerIp = 3;</code>
       */
      public Builder addWorkerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureWorkerIpIsMutable();
        workerIp_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltSrvRegisterNtf)
    }

    static {
      defaultInstance = new DssCltSrvRegisterNtf(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltSrvRegisterNtf)
  }

  public interface CltDssGetLostRateByPortReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
     */
    java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr> 
        getPortAddrList();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getPortAddr(int index);
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
     */
    int getPortAddrCount();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
     */
    java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
        getPortAddrOrBuilderList();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getPortAddrOrBuilder(
        int index);

    // optional uint32 ClientTick = 3;
    /**
     * <code>optional uint32 ClientTick = 3;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 3;</code>
     */
    int getClientTick();

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 4;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 4;</code>
     */
    boolean hasSwitchDirectionType();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 4;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType getSwitchDirectionType();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssGetLostRateByPortReq}
   */
  public static final class CltDssGetLostRateByPortReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssGetLostRateByPortReqOrBuilder {
    // Use CltDssGetLostRateByPortReq.newBuilder() to construct.
    private CltDssGetLostRateByPortReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssGetLostRateByPortReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssGetLostRateByPortReq defaultInstance;
    public static CltDssGetLostRateByPortReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssGetLostRateByPortReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssGetLostRateByPortReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssGetLostRateByPortReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssGetLostRateByPortReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssGetLostRateByPortReq>() {
      public CltDssGetLostRateByPortReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssGetLostRateByPortReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;
    public static final int PORTADDR_FIELD_NUMBER = 2;
    private java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr> portAddr_;
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
     */
    public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr> getPortAddrList() {
      return portAddr_;
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
     */
    public java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
        getPortAddrOrBuilderList() {
      return portAddr_;
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
     */
    public int getPortAddrCount() {
      return portAddr_.size();
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getPortAddr(int index) {
      return portAddr_.get(index);
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getPortAddrOrBuilder(
        int index) {
      return portAddr_.get(index);
    }

    // optional uint32 ClientTick = 3;
    public static final int CLIENTTICK_FIELD_NUMBER = 3;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 3;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ClientTick = 3;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 4;
    public static final int SWITCHDIRECTIONTYPE_FIELD_NUMBER = 4;
    private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType switchDirectionType_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 4;</code>
     */
    public boolean hasSwitchDirectionType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 4;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType getSwitchDirectionType() {
      return switchDirectionType_;
    }

    private void initFields() {
      clientId_ = 0;
      portAddr_ = java.util.Collections.emptyList();
      clientTick_ = 0;
      switchDirectionType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType.DSDIRECTION_NONE;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssGetLostRateByPortReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssGetLostRateByPortReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssGetLostRateByPortReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPortAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (portAddrBuilder_ == null) {
          portAddr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          portAddrBuilder_.clear();
        }
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        switchDirectionType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType.DSDIRECTION_NONE;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssGetLostRateByPortReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssGetLostRateByPortReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (portAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            portAddr_ = java.util.Collections.unmodifiableList(portAddr_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.portAddr_ = portAddr_;
        } else {
          result.portAddr_ = portAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clientTick_ = clientTick_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.switchDirectionType_ = switchDirectionType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;
      private java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr> portAddr_ =
        java.util.Collections.emptyList();
      private void ensurePortAddrIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          portAddr_ = new java.util.ArrayList<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr>(portAddr_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> portAddrBuilder_;

      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr> getPortAddrList() {
        if (portAddrBuilder_ == null) {
          return java.util.Collections.unmodifiableList(portAddr_);
        } else {
          return portAddrBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public int getPortAddrCount() {
        if (portAddrBuilder_ == null) {
          return portAddr_.size();
        } else {
          return portAddrBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getPortAddr(int index) {
        if (portAddrBuilder_ == null) {
          return portAddr_.get(index);
        } else {
          return portAddrBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public Builder setPortAddr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (portAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortAddrIsMutable();
          portAddr_.set(index, value);
          onChanged();
        } else {
          portAddrBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public Builder setPortAddr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (portAddrBuilder_ == null) {
          ensurePortAddrIsMutable();
          portAddr_.set(index, builderForValue.build());
          onChanged();
        } else {
          portAddrBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public Builder addPortAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (portAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortAddrIsMutable();
          portAddr_.add(value);
          onChanged();
        } else {
          portAddrBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public Builder addPortAddr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (portAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortAddrIsMutable();
          portAddr_.add(index, value);
          onChanged();
        } else {
          portAddrBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public Builder addPortAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (portAddrBuilder_ == null) {
          ensurePortAddrIsMutable();
          portAddr_.add(builderForValue.build());
          onChanged();
        } else {
          portAddrBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public Builder addPortAddr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (portAddrBuilder_ == null) {
          ensurePortAddrIsMutable();
          portAddr_.add(index, builderForValue.build());
          onChanged();
        } else {
          portAddrBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public Builder addAllPortAddr(
          java.lang.Iterable<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr> values) {
        if (portAddrBuilder_ == null) {
          ensurePortAddrIsMutable();
          super.addAll(values, portAddr_);
          onChanged();
        } else {
          portAddrBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public Builder clearPortAddr() {
        if (portAddrBuilder_ == null) {
          portAddr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          portAddrBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public Builder removePortAddr(int index) {
        if (portAddrBuilder_ == null) {
          ensurePortAddrIsMutable();
          portAddr_.remove(index);
          onChanged();
        } else {
          portAddrBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getPortAddrBuilder(
          int index) {
        return getPortAddrFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getPortAddrOrBuilder(
          int index) {
        if (portAddrBuilder_ == null) {
          return portAddr_.get(index);  } else {
          return portAddrBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
           getPortAddrOrBuilderList() {
        if (portAddrBuilder_ != null) {
          return portAddrBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(portAddr_);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder addPortAddrBuilder() {
        return getPortAddrFieldBuilder().addBuilder(
            com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance());
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder addPortAddrBuilder(
          int index) {
        return getPortAddrFieldBuilder().addBuilder(
            index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance());
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder> 
           getPortAddrBuilderList() {
        return getPortAddrFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getPortAddrFieldBuilder() {
        if (portAddrBuilder_ == null) {
          portAddrBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  portAddr_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          portAddr_ = null;
        }
        return portAddrBuilder_;
      }

      // optional uint32 ClientTick = 3;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 3;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 ClientTick = 3;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 3;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000004;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 3;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 4;
      private com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType switchDirectionType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType.DSDIRECTION_NONE;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 4;</code>
       */
      public boolean hasSwitchDirectionType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 4;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType getSwitchDirectionType() {
        return switchDirectionType_;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 4;</code>
       */
      public Builder setSwitchDirectionType(com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        switchDirectionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.ESwitchDirectionType SwitchDirectionType = 4;</code>
       */
      public Builder clearSwitchDirectionType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        switchDirectionType_ = com.kedacom.ops.flink.etl.proto.Dssevenum.ESwitchDirectionType.DSDIRECTION_NONE;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssGetLostRateByPortReq)
    }

    static {
      defaultInstance = new CltDssGetLostRateByPortReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssGetLostRateByPortReq)
  }

  public interface DssCltGetLostRateByPortReplyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
     */
    java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr> 
        getPortAddrList();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getPortAddr(int index);
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
     */
    int getPortAddrCount();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
     */
    java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
        getPortAddrOrBuilderList();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getPortAddrOrBuilder(
        int index);

    // optional uint32 ClientTick = 3;
    /**
     * <code>optional uint32 ClientTick = 3;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 3;</code>
     */
    int getClientTick();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltGetLostRateByPortReply}
   */
  public static final class DssCltGetLostRateByPortReply extends
      com.google.protobuf.GeneratedMessage
      implements DssCltGetLostRateByPortReplyOrBuilder {
    // Use DssCltGetLostRateByPortReply.newBuilder() to construct.
    private DssCltGetLostRateByPortReply(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltGetLostRateByPortReply(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltGetLostRateByPortReply defaultInstance;
    public static DssCltGetLostRateByPortReply getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltGetLostRateByPortReply getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltGetLostRateByPortReply_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltGetLostRateByPortReply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltGetLostRateByPortReply> PARSER =
        new com.google.protobuf.AbstractParser<DssCltGetLostRateByPortReply>() {
      public DssCltGetLostRateByPortReply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltGetLostRateByPortReply> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;
    public static final int PORTADDR_FIELD_NUMBER = 2;
    private java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr> portAddr_;
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
     */
    public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr> getPortAddrList() {
      return portAddr_;
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
     */
    public java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
        getPortAddrOrBuilderList() {
      return portAddr_;
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
     */
    public int getPortAddrCount() {
      return portAddr_.size();
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getPortAddr(int index) {
      return portAddr_.get(index);
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getPortAddrOrBuilder(
        int index) {
      return portAddr_.get(index);
    }

    // optional uint32 ClientTick = 3;
    public static final int CLIENTTICK_FIELD_NUMBER = 3;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 3;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ClientTick = 3;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    private void initFields() {
      clientId_ = 0;
      portAddr_ = java.util.Collections.emptyList();
      clientTick_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltGetLostRateByPortReply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltGetLostRateByPortReply_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltGetLostRateByPortReply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPortAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (portAddrBuilder_ == null) {
          portAddr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          portAddrBuilder_.clear();
        }
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltGetLostRateByPortReply_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltGetLostRateByPortReply(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (portAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            portAddr_ = java.util.Collections.unmodifiableList(portAddr_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.portAddr_ = portAddr_;
        } else {
          result.portAddr_ = portAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clientTick_ = clientTick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;
      private java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr> portAddr_ =
        java.util.Collections.emptyList();
      private void ensurePortAddrIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          portAddr_ = new java.util.ArrayList<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr>(portAddr_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> portAddrBuilder_;

      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr> getPortAddrList() {
        if (portAddrBuilder_ == null) {
          return java.util.Collections.unmodifiableList(portAddr_);
        } else {
          return portAddrBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public int getPortAddrCount() {
        if (portAddrBuilder_ == null) {
          return portAddr_.size();
        } else {
          return portAddrBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getPortAddr(int index) {
        if (portAddrBuilder_ == null) {
          return portAddr_.get(index);
        } else {
          return portAddrBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public Builder setPortAddr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (portAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortAddrIsMutable();
          portAddr_.set(index, value);
          onChanged();
        } else {
          portAddrBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public Builder setPortAddr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (portAddrBuilder_ == null) {
          ensurePortAddrIsMutable();
          portAddr_.set(index, builderForValue.build());
          onChanged();
        } else {
          portAddrBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public Builder addPortAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (portAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortAddrIsMutable();
          portAddr_.add(value);
          onChanged();
        } else {
          portAddrBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public Builder addPortAddr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (portAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortAddrIsMutable();
          portAddr_.add(index, value);
          onChanged();
        } else {
          portAddrBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public Builder addPortAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (portAddrBuilder_ == null) {
          ensurePortAddrIsMutable();
          portAddr_.add(builderForValue.build());
          onChanged();
        } else {
          portAddrBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public Builder addPortAddr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (portAddrBuilder_ == null) {
          ensurePortAddrIsMutable();
          portAddr_.add(index, builderForValue.build());
          onChanged();
        } else {
          portAddrBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public Builder addAllPortAddr(
          java.lang.Iterable<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr> values) {
        if (portAddrBuilder_ == null) {
          ensurePortAddrIsMutable();
          super.addAll(values, portAddr_);
          onChanged();
        } else {
          portAddrBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public Builder clearPortAddr() {
        if (portAddrBuilder_ == null) {
          portAddr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          portAddrBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public Builder removePortAddr(int index) {
        if (portAddrBuilder_ == null) {
          ensurePortAddrIsMutable();
          portAddr_.remove(index);
          onChanged();
        } else {
          portAddrBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getPortAddrBuilder(
          int index) {
        return getPortAddrFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getPortAddrOrBuilder(
          int index) {
        if (portAddrBuilder_ == null) {
          return portAddr_.get(index);  } else {
          return portAddrBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
           getPortAddrOrBuilderList() {
        if (portAddrBuilder_ != null) {
          return portAddrBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(portAddr_);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder addPortAddrBuilder() {
        return getPortAddrFieldBuilder().addBuilder(
            com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance());
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder addPortAddrBuilder(
          int index) {
        return getPortAddrFieldBuilder().addBuilder(
            index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance());
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr PortAddr = 2;</code>
       */
      public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder> 
           getPortAddrBuilderList() {
        return getPortAddrFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getPortAddrFieldBuilder() {
        if (portAddrBuilder_ == null) {
          portAddrBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  portAddr_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          portAddr_ = null;
        }
        return portAddrBuilder_;
      }

      // optional uint32 ClientTick = 3;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 3;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 ClientTick = 3;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 3;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000004;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 3;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltGetLostRateByPortReply)
    }

    static {
      defaultInstance = new DssCltGetLostRateByPortReply(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltGetLostRateByPortReply)
  }

  public interface CltDssBindWorkerToMeetingReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional string WorkerGroupId = 3;
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    boolean hasWorkerGroupId();
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    java.lang.String getWorkerGroupId();
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    com.google.protobuf.ByteString
        getWorkerGroupIdBytes();

    // optional uint32 ClientTick = 4;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    int getClientTick();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssBindWorkerToMeetingReq}
   */
  public static final class CltDssBindWorkerToMeetingReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssBindWorkerToMeetingReqOrBuilder {
    // Use CltDssBindWorkerToMeetingReq.newBuilder() to construct.
    private CltDssBindWorkerToMeetingReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssBindWorkerToMeetingReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssBindWorkerToMeetingReq defaultInstance;
    public static CltDssBindWorkerToMeetingReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssBindWorkerToMeetingReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssBindWorkerToMeetingReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssBindWorkerToMeetingReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssBindWorkerToMeetingReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssBindWorkerToMeetingReq>() {
      public CltDssBindWorkerToMeetingReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssBindWorkerToMeetingReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string WorkerGroupId = 3;
    public static final int WORKERGROUPID_FIELD_NUMBER = 3;
    private java.lang.Object workerGroupId_;
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    public boolean hasWorkerGroupId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    public java.lang.String getWorkerGroupId() {
      java.lang.Object ref = workerGroupId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          workerGroupId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getWorkerGroupIdBytes() {
      java.lang.Object ref = workerGroupId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workerGroupId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 ClientTick = 4;
    public static final int CLIENTTICK_FIELD_NUMBER = 4;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      workerGroupId_ = "";
      clientTick_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssBindWorkerToMeetingReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssBindWorkerToMeetingReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssBindWorkerToMeetingReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        workerGroupId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssBindWorkerToMeetingReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssBindWorkerToMeetingReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.workerGroupId_ = workerGroupId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clientTick_ = clientTick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional string WorkerGroupId = 3;
      private java.lang.Object workerGroupId_ = "";
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public boolean hasWorkerGroupId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public java.lang.String getWorkerGroupId() {
        java.lang.Object ref = workerGroupId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          workerGroupId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getWorkerGroupIdBytes() {
        java.lang.Object ref = workerGroupId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          workerGroupId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public Builder setWorkerGroupId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        workerGroupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public Builder clearWorkerGroupId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        workerGroupId_ = getDefaultInstance().getWorkerGroupId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public Builder setWorkerGroupIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        workerGroupId_ = value;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 4;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000008;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssBindWorkerToMeetingReq)
    }

    static {
      defaultInstance = new CltDssBindWorkerToMeetingReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssBindWorkerToMeetingReq)
  }

  public interface DssCltBindWorkerToMeetingAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional string WorkerGroupId = 3;
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    boolean hasWorkerGroupId();
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    java.lang.String getWorkerGroupId();
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    com.google.protobuf.ByteString
        getWorkerGroupIdBytes();

    // optional uint32 ClientTick = 4;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    int getClientTick();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltBindWorkerToMeetingAck}
   */
  public static final class DssCltBindWorkerToMeetingAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltBindWorkerToMeetingAckOrBuilder {
    // Use DssCltBindWorkerToMeetingAck.newBuilder() to construct.
    private DssCltBindWorkerToMeetingAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltBindWorkerToMeetingAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltBindWorkerToMeetingAck defaultInstance;
    public static DssCltBindWorkerToMeetingAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltBindWorkerToMeetingAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltBindWorkerToMeetingAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltBindWorkerToMeetingAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltBindWorkerToMeetingAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltBindWorkerToMeetingAck>() {
      public DssCltBindWorkerToMeetingAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltBindWorkerToMeetingAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string WorkerGroupId = 3;
    public static final int WORKERGROUPID_FIELD_NUMBER = 3;
    private java.lang.Object workerGroupId_;
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    public boolean hasWorkerGroupId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    public java.lang.String getWorkerGroupId() {
      java.lang.Object ref = workerGroupId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          workerGroupId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getWorkerGroupIdBytes() {
      java.lang.Object ref = workerGroupId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workerGroupId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 ClientTick = 4;
    public static final int CLIENTTICK_FIELD_NUMBER = 4;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      workerGroupId_ = "";
      clientTick_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltBindWorkerToMeetingAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltBindWorkerToMeetingAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltBindWorkerToMeetingAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        workerGroupId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltBindWorkerToMeetingAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.workerGroupId_ = workerGroupId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clientTick_ = clientTick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional string WorkerGroupId = 3;
      private java.lang.Object workerGroupId_ = "";
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public boolean hasWorkerGroupId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public java.lang.String getWorkerGroupId() {
        java.lang.Object ref = workerGroupId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          workerGroupId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getWorkerGroupIdBytes() {
        java.lang.Object ref = workerGroupId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          workerGroupId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public Builder setWorkerGroupId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        workerGroupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public Builder clearWorkerGroupId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        workerGroupId_ = getDefaultInstance().getWorkerGroupId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public Builder setWorkerGroupIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        workerGroupId_ = value;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 4;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000008;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltBindWorkerToMeetingAck)
    }

    static {
      defaultInstance = new DssCltBindWorkerToMeetingAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltBindWorkerToMeetingAck)
  }

  public interface DssCltBindWorkerToMeetingNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional string WorkerGroupId = 3;
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    boolean hasWorkerGroupId();
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    java.lang.String getWorkerGroupId();
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    com.google.protobuf.ByteString
        getWorkerGroupIdBytes();

    // optional uint32 ClientTick = 4;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    int getClientTick();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltBindWorkerToMeetingNack}
   */
  public static final class DssCltBindWorkerToMeetingNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltBindWorkerToMeetingNackOrBuilder {
    // Use DssCltBindWorkerToMeetingNack.newBuilder() to construct.
    private DssCltBindWorkerToMeetingNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltBindWorkerToMeetingNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltBindWorkerToMeetingNack defaultInstance;
    public static DssCltBindWorkerToMeetingNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltBindWorkerToMeetingNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltBindWorkerToMeetingNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltBindWorkerToMeetingNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltBindWorkerToMeetingNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltBindWorkerToMeetingNack>() {
      public DssCltBindWorkerToMeetingNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltBindWorkerToMeetingNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string WorkerGroupId = 3;
    public static final int WORKERGROUPID_FIELD_NUMBER = 3;
    private java.lang.Object workerGroupId_;
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    public boolean hasWorkerGroupId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    public java.lang.String getWorkerGroupId() {
      java.lang.Object ref = workerGroupId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          workerGroupId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getWorkerGroupIdBytes() {
      java.lang.Object ref = workerGroupId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workerGroupId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 ClientTick = 4;
    public static final int CLIENTTICK_FIELD_NUMBER = 4;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      workerGroupId_ = "";
      clientTick_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltBindWorkerToMeetingNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltBindWorkerToMeetingNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltBindWorkerToMeetingNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        workerGroupId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltBindWorkerToMeetingNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltBindWorkerToMeetingNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.workerGroupId_ = workerGroupId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clientTick_ = clientTick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional string WorkerGroupId = 3;
      private java.lang.Object workerGroupId_ = "";
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public boolean hasWorkerGroupId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public java.lang.String getWorkerGroupId() {
        java.lang.Object ref = workerGroupId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          workerGroupId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getWorkerGroupIdBytes() {
        java.lang.Object ref = workerGroupId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          workerGroupId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public Builder setWorkerGroupId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        workerGroupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public Builder clearWorkerGroupId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        workerGroupId_ = getDefaultInstance().getWorkerGroupId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public Builder setWorkerGroupIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        workerGroupId_ = value;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 4;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000008;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltBindWorkerToMeetingNack)
    }

    static {
      defaultInstance = new DssCltBindWorkerToMeetingNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltBindWorkerToMeetingNack)
  }

  public interface CltDssUnbindWorkerFromMeetingReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional string WorkerGroupId = 3;
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    boolean hasWorkerGroupId();
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    java.lang.String getWorkerGroupId();
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    com.google.protobuf.ByteString
        getWorkerGroupIdBytes();

    // optional uint32 ClientTick = 4;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    int getClientTick();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssUnbindWorkerFromMeetingReq}
   */
  public static final class CltDssUnbindWorkerFromMeetingReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssUnbindWorkerFromMeetingReqOrBuilder {
    // Use CltDssUnbindWorkerFromMeetingReq.newBuilder() to construct.
    private CltDssUnbindWorkerFromMeetingReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssUnbindWorkerFromMeetingReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssUnbindWorkerFromMeetingReq defaultInstance;
    public static CltDssUnbindWorkerFromMeetingReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssUnbindWorkerFromMeetingReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssUnbindWorkerFromMeetingReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssUnbindWorkerFromMeetingReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssUnbindWorkerFromMeetingReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssUnbindWorkerFromMeetingReq>() {
      public CltDssUnbindWorkerFromMeetingReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssUnbindWorkerFromMeetingReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string WorkerGroupId = 3;
    public static final int WORKERGROUPID_FIELD_NUMBER = 3;
    private java.lang.Object workerGroupId_;
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    public boolean hasWorkerGroupId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    public java.lang.String getWorkerGroupId() {
      java.lang.Object ref = workerGroupId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          workerGroupId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getWorkerGroupIdBytes() {
      java.lang.Object ref = workerGroupId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workerGroupId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 ClientTick = 4;
    public static final int CLIENTTICK_FIELD_NUMBER = 4;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      workerGroupId_ = "";
      clientTick_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssUnbindWorkerFromMeetingReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssUnbindWorkerFromMeetingReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssUnbindWorkerFromMeetingReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        workerGroupId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssUnbindWorkerFromMeetingReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUnbindWorkerFromMeetingReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.workerGroupId_ = workerGroupId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clientTick_ = clientTick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional string WorkerGroupId = 3;
      private java.lang.Object workerGroupId_ = "";
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public boolean hasWorkerGroupId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public java.lang.String getWorkerGroupId() {
        java.lang.Object ref = workerGroupId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          workerGroupId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getWorkerGroupIdBytes() {
        java.lang.Object ref = workerGroupId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          workerGroupId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public Builder setWorkerGroupId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        workerGroupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public Builder clearWorkerGroupId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        workerGroupId_ = getDefaultInstance().getWorkerGroupId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public Builder setWorkerGroupIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        workerGroupId_ = value;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 4;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000008;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssUnbindWorkerFromMeetingReq)
    }

    static {
      defaultInstance = new CltDssUnbindWorkerFromMeetingReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssUnbindWorkerFromMeetingReq)
  }

  public interface DssCltUnbindWorkerFromMeetingAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional string WorkerGroupId = 3;
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    boolean hasWorkerGroupId();
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    java.lang.String getWorkerGroupId();
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    com.google.protobuf.ByteString
        getWorkerGroupIdBytes();

    // optional uint32 ClientTick = 4;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    int getClientTick();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltUnbindWorkerFromMeetingAck}
   */
  public static final class DssCltUnbindWorkerFromMeetingAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltUnbindWorkerFromMeetingAckOrBuilder {
    // Use DssCltUnbindWorkerFromMeetingAck.newBuilder() to construct.
    private DssCltUnbindWorkerFromMeetingAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltUnbindWorkerFromMeetingAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltUnbindWorkerFromMeetingAck defaultInstance;
    public static DssCltUnbindWorkerFromMeetingAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltUnbindWorkerFromMeetingAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltUnbindWorkerFromMeetingAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltUnbindWorkerFromMeetingAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltUnbindWorkerFromMeetingAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltUnbindWorkerFromMeetingAck>() {
      public DssCltUnbindWorkerFromMeetingAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltUnbindWorkerFromMeetingAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string WorkerGroupId = 3;
    public static final int WORKERGROUPID_FIELD_NUMBER = 3;
    private java.lang.Object workerGroupId_;
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    public boolean hasWorkerGroupId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    public java.lang.String getWorkerGroupId() {
      java.lang.Object ref = workerGroupId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          workerGroupId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getWorkerGroupIdBytes() {
      java.lang.Object ref = workerGroupId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workerGroupId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 ClientTick = 4;
    public static final int CLIENTTICK_FIELD_NUMBER = 4;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      workerGroupId_ = "";
      clientTick_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltUnbindWorkerFromMeetingAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltUnbindWorkerFromMeetingAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltUnbindWorkerFromMeetingAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        workerGroupId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltUnbindWorkerFromMeetingAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.workerGroupId_ = workerGroupId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clientTick_ = clientTick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional string WorkerGroupId = 3;
      private java.lang.Object workerGroupId_ = "";
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public boolean hasWorkerGroupId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public java.lang.String getWorkerGroupId() {
        java.lang.Object ref = workerGroupId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          workerGroupId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getWorkerGroupIdBytes() {
        java.lang.Object ref = workerGroupId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          workerGroupId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public Builder setWorkerGroupId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        workerGroupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public Builder clearWorkerGroupId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        workerGroupId_ = getDefaultInstance().getWorkerGroupId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public Builder setWorkerGroupIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        workerGroupId_ = value;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 4;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000008;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltUnbindWorkerFromMeetingAck)
    }

    static {
      defaultInstance = new DssCltUnbindWorkerFromMeetingAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltUnbindWorkerFromMeetingAck)
  }

  public interface DssCltUnbindWorkerFromMeetingNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 2;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional string WorkerGroupId = 3;
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    boolean hasWorkerGroupId();
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    java.lang.String getWorkerGroupId();
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    com.google.protobuf.ByteString
        getWorkerGroupIdBytes();

    // optional uint32 ClientTick = 4;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    int getClientTick();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltUnbindWorkerFromMeetingNack}
   */
  public static final class DssCltUnbindWorkerFromMeetingNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltUnbindWorkerFromMeetingNackOrBuilder {
    // Use DssCltUnbindWorkerFromMeetingNack.newBuilder() to construct.
    private DssCltUnbindWorkerFromMeetingNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltUnbindWorkerFromMeetingNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltUnbindWorkerFromMeetingNack defaultInstance;
    public static DssCltUnbindWorkerFromMeetingNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltUnbindWorkerFromMeetingNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltUnbindWorkerFromMeetingNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltUnbindWorkerFromMeetingNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltUnbindWorkerFromMeetingNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltUnbindWorkerFromMeetingNack>() {
      public DssCltUnbindWorkerFromMeetingNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltUnbindWorkerFromMeetingNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 2;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 2;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string WorkerGroupId = 3;
    public static final int WORKERGROUPID_FIELD_NUMBER = 3;
    private java.lang.Object workerGroupId_;
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    public boolean hasWorkerGroupId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    public java.lang.String getWorkerGroupId() {
      java.lang.Object ref = workerGroupId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          workerGroupId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string WorkerGroupId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getWorkerGroupIdBytes() {
      java.lang.Object ref = workerGroupId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workerGroupId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 ClientTick = 4;
    public static final int CLIENTTICK_FIELD_NUMBER = 4;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    private void initFields() {
      clientId_ = 0;
      meetingHandle_ = "";
      workerGroupId_ = "";
      clientTick_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltUnbindWorkerFromMeetingNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltUnbindWorkerFromMeetingNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltUnbindWorkerFromMeetingNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        workerGroupId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltUnbindWorkerFromMeetingNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltUnbindWorkerFromMeetingNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.workerGroupId_ = workerGroupId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clientTick_ = clientTick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 2;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 2;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional string WorkerGroupId = 3;
      private java.lang.Object workerGroupId_ = "";
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public boolean hasWorkerGroupId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public java.lang.String getWorkerGroupId() {
        java.lang.Object ref = workerGroupId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          workerGroupId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getWorkerGroupIdBytes() {
        java.lang.Object ref = workerGroupId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          workerGroupId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public Builder setWorkerGroupId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        workerGroupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public Builder clearWorkerGroupId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        workerGroupId_ = getDefaultInstance().getWorkerGroupId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string WorkerGroupId = 3;</code>
       */
      public Builder setWorkerGroupIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        workerGroupId_ = value;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 4;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000008;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltUnbindWorkerFromMeetingNack)
    }

    static {
      defaultInstance = new DssCltUnbindWorkerFromMeetingNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltUnbindWorkerFromMeetingNack)
  }

  public interface DssCltRemoveClientNtfOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 ClientTick = 2;
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    int getClientTick();

    // optional uint32 ReasonCode = 3;
    /**
     * <code>optional uint32 ReasonCode = 3;</code>
     */
    boolean hasReasonCode();
    /**
     * <code>optional uint32 ReasonCode = 3;</code>
     */
    int getReasonCode();

    // optional bytes message_uuid = 4;
    /**
     * <code>optional bytes message_uuid = 4;</code>
     */
    boolean hasMessageUuid();
    /**
     * <code>optional bytes message_uuid = 4;</code>
     */
    com.google.protobuf.ByteString getMessageUuid();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveClientNtf}
   */
  public static final class DssCltRemoveClientNtf extends
      com.google.protobuf.GeneratedMessage
      implements DssCltRemoveClientNtfOrBuilder {
    // Use DssCltRemoveClientNtf.newBuilder() to construct.
    private DssCltRemoveClientNtf(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltRemoveClientNtf(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltRemoveClientNtf defaultInstance;
    public static DssCltRemoveClientNtf getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltRemoveClientNtf getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveClientNtf_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveClientNtf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltRemoveClientNtf> PARSER =
        new com.google.protobuf.AbstractParser<DssCltRemoveClientNtf>() {
      public DssCltRemoveClientNtf parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltRemoveClientNtf> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 ClientTick = 2;
    public static final int CLIENTTICK_FIELD_NUMBER = 2;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ClientTick = 2;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    // optional uint32 ReasonCode = 3;
    public static final int REASONCODE_FIELD_NUMBER = 3;
    private int reasonCode_;
    /**
     * <code>optional uint32 ReasonCode = 3;</code>
     */
    public boolean hasReasonCode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 ReasonCode = 3;</code>
     */
    public int getReasonCode() {
      return reasonCode_;
    }

    // optional bytes message_uuid = 4;
    public static final int MESSAGE_UUID_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString messageUuid_;
    /**
     * <code>optional bytes message_uuid = 4;</code>
     */
    public boolean hasMessageUuid() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bytes message_uuid = 4;</code>
     */
    public com.google.protobuf.ByteString getMessageUuid() {
      return messageUuid_;
    }

    private void initFields() {
      clientId_ = 0;
      clientTick_ = 0;
      reasonCode_ = 0;
      messageUuid_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveClientNtf}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtfOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveClientNtf_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveClientNtf_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        reasonCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        messageUuid_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveClientNtf_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveClientNtf(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clientTick_ = clientTick_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.reasonCode_ = reasonCode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.messageUuid_ = messageUuid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientTick = 2;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000002;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 2;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000002);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ReasonCode = 3;
      private int reasonCode_ ;
      /**
       * <code>optional uint32 ReasonCode = 3;</code>
       */
      public boolean hasReasonCode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 ReasonCode = 3;</code>
       */
      public int getReasonCode() {
        return reasonCode_;
      }
      /**
       * <code>optional uint32 ReasonCode = 3;</code>
       */
      public Builder setReasonCode(int value) {
        bitField0_ |= 0x00000004;
        reasonCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ReasonCode = 3;</code>
       */
      public Builder clearReasonCode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        reasonCode_ = 0;
        onChanged();
        return this;
      }

      // optional bytes message_uuid = 4;
      private com.google.protobuf.ByteString messageUuid_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes message_uuid = 4;</code>
       */
      public boolean hasMessageUuid() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bytes message_uuid = 4;</code>
       */
      public com.google.protobuf.ByteString getMessageUuid() {
        return messageUuid_;
      }
      /**
       * <code>optional bytes message_uuid = 4;</code>
       */
      public Builder setMessageUuid(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        messageUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes message_uuid = 4;</code>
       */
      public Builder clearMessageUuid() {
        bitField0_ = (bitField0_ & ~0x00000008);
        messageUuid_ = getDefaultInstance().getMessageUuid();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveClientNtf)
    }

    static {
      defaultInstance = new DssCltRemoveClientNtf(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveClientNtf)
  }

  public interface CltDssDestroyClientByUUIDReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 MasterId = 1;
    /**
     * <code>optional uint32 MasterId = 1;</code>
     */
    boolean hasMasterId();
    /**
     * <code>optional uint32 MasterId = 1;</code>
     */
    int getMasterId();

    // optional uint32 ClientId = 2;
    /**
     * <code>optional uint32 ClientId = 2;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 2;</code>
     */
    int getClientId();

    // optional bytes message_uuid = 3;
    /**
     * <code>optional bytes message_uuid = 3;</code>
     */
    boolean hasMessageUuid();
    /**
     * <code>optional bytes message_uuid = 3;</code>
     */
    com.google.protobuf.ByteString getMessageUuid();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssDestroyClientByUUIDReq}
   */
  public static final class CltDssDestroyClientByUUIDReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssDestroyClientByUUIDReqOrBuilder {
    // Use CltDssDestroyClientByUUIDReq.newBuilder() to construct.
    private CltDssDestroyClientByUUIDReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssDestroyClientByUUIDReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssDestroyClientByUUIDReq defaultInstance;
    public static CltDssDestroyClientByUUIDReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssDestroyClientByUUIDReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssDestroyClientByUUIDReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssDestroyClientByUUIDReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssDestroyClientByUUIDReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssDestroyClientByUUIDReq>() {
      public CltDssDestroyClientByUUIDReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssDestroyClientByUUIDReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 MasterId = 1;
    public static final int MASTERID_FIELD_NUMBER = 1;
    private int masterId_;
    /**
     * <code>optional uint32 MasterId = 1;</code>
     */
    public boolean hasMasterId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 MasterId = 1;</code>
     */
    public int getMasterId() {
      return masterId_;
    }

    // optional uint32 ClientId = 2;
    public static final int CLIENTID_FIELD_NUMBER = 2;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 2;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 ClientId = 2;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional bytes message_uuid = 3;
    public static final int MESSAGE_UUID_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString messageUuid_;
    /**
     * <code>optional bytes message_uuid = 3;</code>
     */
    public boolean hasMessageUuid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes message_uuid = 3;</code>
     */
    public com.google.protobuf.ByteString getMessageUuid() {
      return messageUuid_;
    }

    private void initFields() {
      masterId_ = 0;
      clientId_ = 0;
      messageUuid_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssDestroyClientByUUIDReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssDestroyClientByUUIDReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssDestroyClientByUUIDReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        masterId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        messageUuid_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssDestroyClientByUUIDReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssDestroyClientByUUIDReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.masterId_ = masterId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.messageUuid_ = messageUuid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 MasterId = 1;
      private int masterId_ ;
      /**
       * <code>optional uint32 MasterId = 1;</code>
       */
      public boolean hasMasterId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 MasterId = 1;</code>
       */
      public int getMasterId() {
        return masterId_;
      }
      /**
       * <code>optional uint32 MasterId = 1;</code>
       */
      public Builder setMasterId(int value) {
        bitField0_ |= 0x00000001;
        masterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 MasterId = 1;</code>
       */
      public Builder clearMasterId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        masterId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientId = 2;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 2;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 ClientId = 2;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 2;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000002;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 2;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional bytes message_uuid = 3;
      private com.google.protobuf.ByteString messageUuid_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes message_uuid = 3;</code>
       */
      public boolean hasMessageUuid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes message_uuid = 3;</code>
       */
      public com.google.protobuf.ByteString getMessageUuid() {
        return messageUuid_;
      }
      /**
       * <code>optional bytes message_uuid = 3;</code>
       */
      public Builder setMessageUuid(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        messageUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes message_uuid = 3;</code>
       */
      public Builder clearMessageUuid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        messageUuid_ = getDefaultInstance().getMessageUuid();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssDestroyClientByUUIDReq)
    }

    static {
      defaultInstance = new CltDssDestroyClientByUUIDReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssDestroyClientByUUIDReq)
  }

  public interface DssCltDestroyClientByUUIDAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bytes message_uuid = 1;
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    boolean hasMessageUuid();
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    com.google.protobuf.ByteString getMessageUuid();

    // optional uint32 MasterId = 2;
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    boolean hasMasterId();
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    int getMasterId();

    // optional uint32 ClientId = 3;
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    int getClientId();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltDestroyClientByUUIDAck}
   */
  public static final class DssCltDestroyClientByUUIDAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltDestroyClientByUUIDAckOrBuilder {
    // Use DssCltDestroyClientByUUIDAck.newBuilder() to construct.
    private DssCltDestroyClientByUUIDAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltDestroyClientByUUIDAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltDestroyClientByUUIDAck defaultInstance;
    public static DssCltDestroyClientByUUIDAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltDestroyClientByUUIDAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltDestroyClientByUUIDAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltDestroyClientByUUIDAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltDestroyClientByUUIDAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltDestroyClientByUUIDAck>() {
      public DssCltDestroyClientByUUIDAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltDestroyClientByUUIDAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bytes message_uuid = 1;
    public static final int MESSAGE_UUID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString messageUuid_;
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    public boolean hasMessageUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    public com.google.protobuf.ByteString getMessageUuid() {
      return messageUuid_;
    }

    // optional uint32 MasterId = 2;
    public static final int MASTERID_FIELD_NUMBER = 2;
    private int masterId_;
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    public boolean hasMasterId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    public int getMasterId() {
      return masterId_;
    }

    // optional uint32 ClientId = 3;
    public static final int CLIENTID_FIELD_NUMBER = 3;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    private void initFields() {
      messageUuid_ = com.google.protobuf.ByteString.EMPTY;
      masterId_ = 0;
      clientId_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltDestroyClientByUUIDAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltDestroyClientByUUIDAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltDestroyClientByUUIDAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        messageUuid_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        masterId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltDestroyClientByUUIDAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.messageUuid_ = messageUuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.masterId_ = masterId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.clientId_ = clientId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional bytes message_uuid = 1;
      private com.google.protobuf.ByteString messageUuid_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public boolean hasMessageUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public com.google.protobuf.ByteString getMessageUuid() {
        return messageUuid_;
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public Builder setMessageUuid(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        messageUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public Builder clearMessageUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        messageUuid_ = getDefaultInstance().getMessageUuid();
        onChanged();
        return this;
      }

      // optional uint32 MasterId = 2;
      private int masterId_ ;
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public boolean hasMasterId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public int getMasterId() {
        return masterId_;
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public Builder setMasterId(int value) {
        bitField0_ |= 0x00000002;
        masterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public Builder clearMasterId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        masterId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientId = 3;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000004;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltDestroyClientByUUIDAck)
    }

    static {
      defaultInstance = new DssCltDestroyClientByUUIDAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltDestroyClientByUUIDAck)
  }

  public interface DssCltDestroyClientByUUIDNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bytes message_uuid = 1;
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    boolean hasMessageUuid();
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    com.google.protobuf.ByteString getMessageUuid();

    // optional uint32 MasterId = 2;
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    boolean hasMasterId();
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    int getMasterId();

    // optional uint32 ClientId = 3;
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    int getClientId();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltDestroyClientByUUIDNack}
   */
  public static final class DssCltDestroyClientByUUIDNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltDestroyClientByUUIDNackOrBuilder {
    // Use DssCltDestroyClientByUUIDNack.newBuilder() to construct.
    private DssCltDestroyClientByUUIDNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltDestroyClientByUUIDNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltDestroyClientByUUIDNack defaultInstance;
    public static DssCltDestroyClientByUUIDNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltDestroyClientByUUIDNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltDestroyClientByUUIDNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltDestroyClientByUUIDNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltDestroyClientByUUIDNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltDestroyClientByUUIDNack>() {
      public DssCltDestroyClientByUUIDNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltDestroyClientByUUIDNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bytes message_uuid = 1;
    public static final int MESSAGE_UUID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString messageUuid_;
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    public boolean hasMessageUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    public com.google.protobuf.ByteString getMessageUuid() {
      return messageUuid_;
    }

    // optional uint32 MasterId = 2;
    public static final int MASTERID_FIELD_NUMBER = 2;
    private int masterId_;
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    public boolean hasMasterId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    public int getMasterId() {
      return masterId_;
    }

    // optional uint32 ClientId = 3;
    public static final int CLIENTID_FIELD_NUMBER = 3;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    private void initFields() {
      messageUuid_ = com.google.protobuf.ByteString.EMPTY;
      masterId_ = 0;
      clientId_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltDestroyClientByUUIDNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltDestroyClientByUUIDNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltDestroyClientByUUIDNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        messageUuid_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        masterId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltDestroyClientByUUIDNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDestroyClientByUUIDNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.messageUuid_ = messageUuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.masterId_ = masterId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.clientId_ = clientId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional bytes message_uuid = 1;
      private com.google.protobuf.ByteString messageUuid_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public boolean hasMessageUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public com.google.protobuf.ByteString getMessageUuid() {
        return messageUuid_;
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public Builder setMessageUuid(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        messageUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public Builder clearMessageUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        messageUuid_ = getDefaultInstance().getMessageUuid();
        onChanged();
        return this;
      }

      // optional uint32 MasterId = 2;
      private int masterId_ ;
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public boolean hasMasterId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public int getMasterId() {
        return masterId_;
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public Builder setMasterId(int value) {
        bitField0_ |= 0x00000002;
        masterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public Builder clearMasterId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        masterId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientId = 3;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000004;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltDestroyClientByUUIDNack)
    }

    static {
      defaultInstance = new DssCltDestroyClientByUUIDNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltDestroyClientByUUIDNack)
  }

  public interface CltDssReleasePortByUUIDReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bytes message_uuid = 1;
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    boolean hasMessageUuid();
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    com.google.protobuf.ByteString getMessageUuid();

    // optional uint32 MasterId = 2;
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    boolean hasMasterId();
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    int getMasterId();

    // optional uint32 ClientId = 3;
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    int getClientId();

    // optional string Meetinghandle = 4;
    /**
     * <code>optional string Meetinghandle = 4;</code>
     */
    boolean hasMeetinghandle();
    /**
     * <code>optional string Meetinghandle = 4;</code>
     */
    java.lang.String getMeetinghandle();
    /**
     * <code>optional string Meetinghandle = 4;</code>
     */
    com.google.protobuf.ByteString
        getMeetinghandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssReleasePortByUUIDReq}
   */
  public static final class CltDssReleasePortByUUIDReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssReleasePortByUUIDReqOrBuilder {
    // Use CltDssReleasePortByUUIDReq.newBuilder() to construct.
    private CltDssReleasePortByUUIDReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssReleasePortByUUIDReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssReleasePortByUUIDReq defaultInstance;
    public static CltDssReleasePortByUUIDReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssReleasePortByUUIDReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePortByUUIDReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePortByUUIDReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssReleasePortByUUIDReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssReleasePortByUUIDReq>() {
      public CltDssReleasePortByUUIDReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssReleasePortByUUIDReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bytes message_uuid = 1;
    public static final int MESSAGE_UUID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString messageUuid_;
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    public boolean hasMessageUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    public com.google.protobuf.ByteString getMessageUuid() {
      return messageUuid_;
    }

    // optional uint32 MasterId = 2;
    public static final int MASTERID_FIELD_NUMBER = 2;
    private int masterId_;
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    public boolean hasMasterId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    public int getMasterId() {
      return masterId_;
    }

    // optional uint32 ClientId = 3;
    public static final int CLIENTID_FIELD_NUMBER = 3;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string Meetinghandle = 4;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 4;
    private java.lang.Object meetinghandle_;
    /**
     * <code>optional string Meetinghandle = 4;</code>
     */
    public boolean hasMeetinghandle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string Meetinghandle = 4;</code>
     */
    public java.lang.String getMeetinghandle() {
      java.lang.Object ref = meetinghandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetinghandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string Meetinghandle = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMeetinghandleBytes() {
      java.lang.Object ref = meetinghandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetinghandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      messageUuid_ = com.google.protobuf.ByteString.EMPTY;
      masterId_ = 0;
      clientId_ = 0;
      meetinghandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssReleasePortByUUIDReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePortByUUIDReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePortByUUIDReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        messageUuid_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        masterId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        meetinghandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePortByUUIDReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssReleasePortByUUIDReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.messageUuid_ = messageUuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.masterId_ = masterId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.meetinghandle_ = meetinghandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional bytes message_uuid = 1;
      private com.google.protobuf.ByteString messageUuid_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public boolean hasMessageUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public com.google.protobuf.ByteString getMessageUuid() {
        return messageUuid_;
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public Builder setMessageUuid(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        messageUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public Builder clearMessageUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        messageUuid_ = getDefaultInstance().getMessageUuid();
        onChanged();
        return this;
      }

      // optional uint32 MasterId = 2;
      private int masterId_ ;
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public boolean hasMasterId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public int getMasterId() {
        return masterId_;
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public Builder setMasterId(int value) {
        bitField0_ |= 0x00000002;
        masterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public Builder clearMasterId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        masterId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientId = 3;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000004;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string Meetinghandle = 4;
      private java.lang.Object meetinghandle_ = "";
      /**
       * <code>optional string Meetinghandle = 4;</code>
       */
      public boolean hasMeetinghandle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string Meetinghandle = 4;</code>
       */
      public java.lang.String getMeetinghandle() {
        java.lang.Object ref = meetinghandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetinghandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string Meetinghandle = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMeetinghandleBytes() {
        java.lang.Object ref = meetinghandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetinghandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string Meetinghandle = 4;</code>
       */
      public Builder setMeetinghandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetinghandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string Meetinghandle = 4;</code>
       */
      public Builder clearMeetinghandle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        meetinghandle_ = getDefaultInstance().getMeetinghandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string Meetinghandle = 4;</code>
       */
      public Builder setMeetinghandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetinghandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssReleasePortByUUIDReq)
    }

    static {
      defaultInstance = new CltDssReleasePortByUUIDReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssReleasePortByUUIDReq)
  }

  public interface DssCltReleasePortByUUIDAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bytes message_uuid = 1;
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    boolean hasMessageUuid();
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    com.google.protobuf.ByteString getMessageUuid();

    // optional uint32 MasterId = 2;
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    boolean hasMasterId();
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    int getMasterId();

    // optional uint32 ClientId = 3;
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    int getClientId();

    // optional string Meetinghandle = 4;
    /**
     * <code>optional string Meetinghandle = 4;</code>
     */
    boolean hasMeetinghandle();
    /**
     * <code>optional string Meetinghandle = 4;</code>
     */
    java.lang.String getMeetinghandle();
    /**
     * <code>optional string Meetinghandle = 4;</code>
     */
    com.google.protobuf.ByteString
        getMeetinghandleBytes();

    // optional uint32 PortHandle = 5;
    /**
     * <code>optional uint32 PortHandle = 5;</code>
     */
    boolean hasPortHandle();
    /**
     * <code>optional uint32 PortHandle = 5;</code>
     */
    int getPortHandle();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltReleasePortByUUIDAck}
   */
  public static final class DssCltReleasePortByUUIDAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltReleasePortByUUIDAckOrBuilder {
    // Use DssCltReleasePortByUUIDAck.newBuilder() to construct.
    private DssCltReleasePortByUUIDAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltReleasePortByUUIDAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltReleasePortByUUIDAck defaultInstance;
    public static DssCltReleasePortByUUIDAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltReleasePortByUUIDAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortByUUIDAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortByUUIDAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltReleasePortByUUIDAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltReleasePortByUUIDAck>() {
      public DssCltReleasePortByUUIDAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltReleasePortByUUIDAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bytes message_uuid = 1;
    public static final int MESSAGE_UUID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString messageUuid_;
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    public boolean hasMessageUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    public com.google.protobuf.ByteString getMessageUuid() {
      return messageUuid_;
    }

    // optional uint32 MasterId = 2;
    public static final int MASTERID_FIELD_NUMBER = 2;
    private int masterId_;
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    public boolean hasMasterId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    public int getMasterId() {
      return masterId_;
    }

    // optional uint32 ClientId = 3;
    public static final int CLIENTID_FIELD_NUMBER = 3;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string Meetinghandle = 4;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 4;
    private java.lang.Object meetinghandle_;
    /**
     * <code>optional string Meetinghandle = 4;</code>
     */
    public boolean hasMeetinghandle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string Meetinghandle = 4;</code>
     */
    public java.lang.String getMeetinghandle() {
      java.lang.Object ref = meetinghandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetinghandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string Meetinghandle = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMeetinghandleBytes() {
      java.lang.Object ref = meetinghandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetinghandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 PortHandle = 5;
    public static final int PORTHANDLE_FIELD_NUMBER = 5;
    private int portHandle_;
    /**
     * <code>optional uint32 PortHandle = 5;</code>
     */
    public boolean hasPortHandle() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 PortHandle = 5;</code>
     */
    public int getPortHandle() {
      return portHandle_;
    }

    private void initFields() {
      messageUuid_ = com.google.protobuf.ByteString.EMPTY;
      masterId_ = 0;
      clientId_ = 0;
      meetinghandle_ = "";
      portHandle_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltReleasePortByUUIDAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortByUUIDAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortByUUIDAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        messageUuid_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        masterId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        meetinghandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        portHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortByUUIDAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.messageUuid_ = messageUuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.masterId_ = masterId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.meetinghandle_ = meetinghandle_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.portHandle_ = portHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional bytes message_uuid = 1;
      private com.google.protobuf.ByteString messageUuid_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public boolean hasMessageUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public com.google.protobuf.ByteString getMessageUuid() {
        return messageUuid_;
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public Builder setMessageUuid(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        messageUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public Builder clearMessageUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        messageUuid_ = getDefaultInstance().getMessageUuid();
        onChanged();
        return this;
      }

      // optional uint32 MasterId = 2;
      private int masterId_ ;
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public boolean hasMasterId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public int getMasterId() {
        return masterId_;
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public Builder setMasterId(int value) {
        bitField0_ |= 0x00000002;
        masterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public Builder clearMasterId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        masterId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientId = 3;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000004;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string Meetinghandle = 4;
      private java.lang.Object meetinghandle_ = "";
      /**
       * <code>optional string Meetinghandle = 4;</code>
       */
      public boolean hasMeetinghandle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string Meetinghandle = 4;</code>
       */
      public java.lang.String getMeetinghandle() {
        java.lang.Object ref = meetinghandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetinghandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string Meetinghandle = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMeetinghandleBytes() {
        java.lang.Object ref = meetinghandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetinghandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string Meetinghandle = 4;</code>
       */
      public Builder setMeetinghandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetinghandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string Meetinghandle = 4;</code>
       */
      public Builder clearMeetinghandle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        meetinghandle_ = getDefaultInstance().getMeetinghandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string Meetinghandle = 4;</code>
       */
      public Builder setMeetinghandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetinghandle_ = value;
        onChanged();
        return this;
      }

      // optional uint32 PortHandle = 5;
      private int portHandle_ ;
      /**
       * <code>optional uint32 PortHandle = 5;</code>
       */
      public boolean hasPortHandle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 PortHandle = 5;</code>
       */
      public int getPortHandle() {
        return portHandle_;
      }
      /**
       * <code>optional uint32 PortHandle = 5;</code>
       */
      public Builder setPortHandle(int value) {
        bitField0_ |= 0x00000010;
        portHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 PortHandle = 5;</code>
       */
      public Builder clearPortHandle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        portHandle_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltReleasePortByUUIDAck)
    }

    static {
      defaultInstance = new DssCltReleasePortByUUIDAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltReleasePortByUUIDAck)
  }

  public interface DssCltReleasePortByUUIDNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bytes message_uuid = 1;
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    boolean hasMessageUuid();
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    com.google.protobuf.ByteString getMessageUuid();

    // optional uint32 MasterId = 2;
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    boolean hasMasterId();
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    int getMasterId();

    // optional uint32 ClientId = 3;
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 4;
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltReleasePortByUUIDNack}
   */
  public static final class DssCltReleasePortByUUIDNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltReleasePortByUUIDNackOrBuilder {
    // Use DssCltReleasePortByUUIDNack.newBuilder() to construct.
    private DssCltReleasePortByUUIDNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltReleasePortByUUIDNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltReleasePortByUUIDNack defaultInstance;
    public static DssCltReleasePortByUUIDNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltReleasePortByUUIDNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortByUUIDNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortByUUIDNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltReleasePortByUUIDNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltReleasePortByUUIDNack>() {
      public DssCltReleasePortByUUIDNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltReleasePortByUUIDNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bytes message_uuid = 1;
    public static final int MESSAGE_UUID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString messageUuid_;
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    public boolean hasMessageUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    public com.google.protobuf.ByteString getMessageUuid() {
      return messageUuid_;
    }

    // optional uint32 MasterId = 2;
    public static final int MASTERID_FIELD_NUMBER = 2;
    private int masterId_;
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    public boolean hasMasterId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    public int getMasterId() {
      return masterId_;
    }

    // optional uint32 ClientId = 3;
    public static final int CLIENTID_FIELD_NUMBER = 3;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 4;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 4;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      messageUuid_ = com.google.protobuf.ByteString.EMPTY;
      masterId_ = 0;
      clientId_ = 0;
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltReleasePortByUUIDNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortByUUIDNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortByUUIDNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        messageUuid_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        masterId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortByUUIDNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltReleasePortByUUIDNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.messageUuid_ = messageUuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.masterId_ = masterId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional bytes message_uuid = 1;
      private com.google.protobuf.ByteString messageUuid_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public boolean hasMessageUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public com.google.protobuf.ByteString getMessageUuid() {
        return messageUuid_;
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public Builder setMessageUuid(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        messageUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public Builder clearMessageUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        messageUuid_ = getDefaultInstance().getMessageUuid();
        onChanged();
        return this;
      }

      // optional uint32 MasterId = 2;
      private int masterId_ ;
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public boolean hasMasterId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public int getMasterId() {
        return masterId_;
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public Builder setMasterId(int value) {
        bitField0_ |= 0x00000002;
        masterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public Builder clearMasterId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        masterId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientId = 3;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000004;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 4;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltReleasePortByUUIDNack)
    }

    static {
      defaultInstance = new DssCltReleasePortByUUIDNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltReleasePortByUUIDNack)
  }

  public interface CltDssRemoveBridgeByUUIDReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bytes message_uuid = 1;
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    boolean hasMessageUuid();
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    com.google.protobuf.ByteString getMessageUuid();

    // optional uint32 MasterId = 2;
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    boolean hasMasterId();
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    int getMasterId();

    // optional uint32 ClientId = 3;
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    int getClientId();

    // optional string Meetinghandle = 4;
    /**
     * <code>optional string Meetinghandle = 4;</code>
     */
    boolean hasMeetinghandle();
    /**
     * <code>optional string Meetinghandle = 4;</code>
     */
    java.lang.String getMeetinghandle();
    /**
     * <code>optional string Meetinghandle = 4;</code>
     */
    com.google.protobuf.ByteString
        getMeetinghandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssRemoveBridgeByUUIDReq}
   */
  public static final class CltDssRemoveBridgeByUUIDReq extends
      com.google.protobuf.GeneratedMessage
      implements CltDssRemoveBridgeByUUIDReqOrBuilder {
    // Use CltDssRemoveBridgeByUUIDReq.newBuilder() to construct.
    private CltDssRemoveBridgeByUUIDReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssRemoveBridgeByUUIDReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssRemoveBridgeByUUIDReq defaultInstance;
    public static CltDssRemoveBridgeByUUIDReq getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssRemoveBridgeByUUIDReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveBridgeByUUIDReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveBridgeByUUIDReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssRemoveBridgeByUUIDReq> PARSER =
        new com.google.protobuf.AbstractParser<CltDssRemoveBridgeByUUIDReq>() {
      public CltDssRemoveBridgeByUUIDReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssRemoveBridgeByUUIDReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bytes message_uuid = 1;
    public static final int MESSAGE_UUID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString messageUuid_;
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    public boolean hasMessageUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    public com.google.protobuf.ByteString getMessageUuid() {
      return messageUuid_;
    }

    // optional uint32 MasterId = 2;
    public static final int MASTERID_FIELD_NUMBER = 2;
    private int masterId_;
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    public boolean hasMasterId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    public int getMasterId() {
      return masterId_;
    }

    // optional uint32 ClientId = 3;
    public static final int CLIENTID_FIELD_NUMBER = 3;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string Meetinghandle = 4;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 4;
    private java.lang.Object meetinghandle_;
    /**
     * <code>optional string Meetinghandle = 4;</code>
     */
    public boolean hasMeetinghandle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string Meetinghandle = 4;</code>
     */
    public java.lang.String getMeetinghandle() {
      java.lang.Object ref = meetinghandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetinghandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string Meetinghandle = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMeetinghandleBytes() {
      java.lang.Object ref = meetinghandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetinghandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      messageUuid_ = com.google.protobuf.ByteString.EMPTY;
      masterId_ = 0;
      clientId_ = 0;
      meetinghandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssRemoveBridgeByUUIDReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveBridgeByUUIDReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveBridgeByUUIDReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        messageUuid_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        masterId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        meetinghandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveBridgeByUUIDReq_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssRemoveBridgeByUUIDReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.messageUuid_ = messageUuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.masterId_ = masterId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.meetinghandle_ = meetinghandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional bytes message_uuid = 1;
      private com.google.protobuf.ByteString messageUuid_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public boolean hasMessageUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public com.google.protobuf.ByteString getMessageUuid() {
        return messageUuid_;
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public Builder setMessageUuid(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        messageUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public Builder clearMessageUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        messageUuid_ = getDefaultInstance().getMessageUuid();
        onChanged();
        return this;
      }

      // optional uint32 MasterId = 2;
      private int masterId_ ;
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public boolean hasMasterId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public int getMasterId() {
        return masterId_;
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public Builder setMasterId(int value) {
        bitField0_ |= 0x00000002;
        masterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public Builder clearMasterId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        masterId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientId = 3;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000004;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string Meetinghandle = 4;
      private java.lang.Object meetinghandle_ = "";
      /**
       * <code>optional string Meetinghandle = 4;</code>
       */
      public boolean hasMeetinghandle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string Meetinghandle = 4;</code>
       */
      public java.lang.String getMeetinghandle() {
        java.lang.Object ref = meetinghandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetinghandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string Meetinghandle = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMeetinghandleBytes() {
        java.lang.Object ref = meetinghandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetinghandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string Meetinghandle = 4;</code>
       */
      public Builder setMeetinghandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetinghandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string Meetinghandle = 4;</code>
       */
      public Builder clearMeetinghandle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        meetinghandle_ = getDefaultInstance().getMeetinghandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string Meetinghandle = 4;</code>
       */
      public Builder setMeetinghandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetinghandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssRemoveBridgeByUUIDReq)
    }

    static {
      defaultInstance = new CltDssRemoveBridgeByUUIDReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssRemoveBridgeByUUIDReq)
  }

  public interface DssCltRemoveBridgeByUUIDAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bytes message_uuid = 1;
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    boolean hasMessageUuid();
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    com.google.protobuf.ByteString getMessageUuid();

    // optional uint32 MasterId = 2;
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    boolean hasMasterId();
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    int getMasterId();

    // optional uint32 ClientId = 3;
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 4;
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();

    // optional uint32 BridgeHandle = 5;
    /**
     * <code>optional uint32 BridgeHandle = 5;</code>
     */
    boolean hasBridgeHandle();
    /**
     * <code>optional uint32 BridgeHandle = 5;</code>
     */
    int getBridgeHandle();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveBridgeByUUIDAck}
   */
  public static final class DssCltRemoveBridgeByUUIDAck extends
      com.google.protobuf.GeneratedMessage
      implements DssCltRemoveBridgeByUUIDAckOrBuilder {
    // Use DssCltRemoveBridgeByUUIDAck.newBuilder() to construct.
    private DssCltRemoveBridgeByUUIDAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltRemoveBridgeByUUIDAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltRemoveBridgeByUUIDAck defaultInstance;
    public static DssCltRemoveBridgeByUUIDAck getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltRemoveBridgeByUUIDAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeByUUIDAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeByUUIDAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltRemoveBridgeByUUIDAck> PARSER =
        new com.google.protobuf.AbstractParser<DssCltRemoveBridgeByUUIDAck>() {
      public DssCltRemoveBridgeByUUIDAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltRemoveBridgeByUUIDAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bytes message_uuid = 1;
    public static final int MESSAGE_UUID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString messageUuid_;
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    public boolean hasMessageUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    public com.google.protobuf.ByteString getMessageUuid() {
      return messageUuid_;
    }

    // optional uint32 MasterId = 2;
    public static final int MASTERID_FIELD_NUMBER = 2;
    private int masterId_;
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    public boolean hasMasterId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    public int getMasterId() {
      return masterId_;
    }

    // optional uint32 ClientId = 3;
    public static final int CLIENTID_FIELD_NUMBER = 3;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 4;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 4;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 BridgeHandle = 5;
    public static final int BRIDGEHANDLE_FIELD_NUMBER = 5;
    private int bridgeHandle_;
    /**
     * <code>optional uint32 BridgeHandle = 5;</code>
     */
    public boolean hasBridgeHandle() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 BridgeHandle = 5;</code>
     */
    public int getBridgeHandle() {
      return bridgeHandle_;
    }

    private void initFields() {
      messageUuid_ = com.google.protobuf.ByteString.EMPTY;
      masterId_ = 0;
      clientId_ = 0;
      meetingHandle_ = "";
      bridgeHandle_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveBridgeByUUIDAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeByUUIDAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeByUUIDAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        messageUuid_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        masterId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        bridgeHandle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeByUUIDAck_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.messageUuid_ = messageUuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.masterId_ = masterId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.meetingHandle_ = meetingHandle_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bridgeHandle_ = bridgeHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional bytes message_uuid = 1;
      private com.google.protobuf.ByteString messageUuid_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public boolean hasMessageUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public com.google.protobuf.ByteString getMessageUuid() {
        return messageUuid_;
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public Builder setMessageUuid(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        messageUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public Builder clearMessageUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        messageUuid_ = getDefaultInstance().getMessageUuid();
        onChanged();
        return this;
      }

      // optional uint32 MasterId = 2;
      private int masterId_ ;
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public boolean hasMasterId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public int getMasterId() {
        return masterId_;
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public Builder setMasterId(int value) {
        bitField0_ |= 0x00000002;
        masterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public Builder clearMasterId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        masterId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientId = 3;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000004;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 4;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // optional uint32 BridgeHandle = 5;
      private int bridgeHandle_ ;
      /**
       * <code>optional uint32 BridgeHandle = 5;</code>
       */
      public boolean hasBridgeHandle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 BridgeHandle = 5;</code>
       */
      public int getBridgeHandle() {
        return bridgeHandle_;
      }
      /**
       * <code>optional uint32 BridgeHandle = 5;</code>
       */
      public Builder setBridgeHandle(int value) {
        bitField0_ |= 0x00000010;
        bridgeHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BridgeHandle = 5;</code>
       */
      public Builder clearBridgeHandle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bridgeHandle_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveBridgeByUUIDAck)
    }

    static {
      defaultInstance = new DssCltRemoveBridgeByUUIDAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveBridgeByUUIDAck)
  }

  public interface DssCltRemoveBridgeByUUIDNackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bytes message_uuid = 1;
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    boolean hasMessageUuid();
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    com.google.protobuf.ByteString getMessageUuid();

    // optional uint32 MasterId = 2;
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    boolean hasMasterId();
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    int getMasterId();

    // optional uint32 ClientId = 3;
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    int getClientId();

    // optional string MeetingHandle = 4;
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    boolean hasMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    java.lang.String getMeetingHandle();
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    com.google.protobuf.ByteString
        getMeetingHandleBytes();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveBridgeByUUIDNack}
   */
  public static final class DssCltRemoveBridgeByUUIDNack extends
      com.google.protobuf.GeneratedMessage
      implements DssCltRemoveBridgeByUUIDNackOrBuilder {
    // Use DssCltRemoveBridgeByUUIDNack.newBuilder() to construct.
    private DssCltRemoveBridgeByUUIDNack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltRemoveBridgeByUUIDNack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltRemoveBridgeByUUIDNack defaultInstance;
    public static DssCltRemoveBridgeByUUIDNack getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltRemoveBridgeByUUIDNack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeByUUIDNack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeByUUIDNack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltRemoveBridgeByUUIDNack> PARSER =
        new com.google.protobuf.AbstractParser<DssCltRemoveBridgeByUUIDNack>() {
      public DssCltRemoveBridgeByUUIDNack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltRemoveBridgeByUUIDNack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bytes message_uuid = 1;
    public static final int MESSAGE_UUID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString messageUuid_;
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    public boolean hasMessageUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes message_uuid = 1;</code>
     */
    public com.google.protobuf.ByteString getMessageUuid() {
      return messageUuid_;
    }

    // optional uint32 MasterId = 2;
    public static final int MASTERID_FIELD_NUMBER = 2;
    private int masterId_;
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    public boolean hasMasterId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 MasterId = 2;</code>
     */
    public int getMasterId() {
      return masterId_;
    }

    // optional uint32 ClientId = 3;
    public static final int CLIENTID_FIELD_NUMBER = 3;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 ClientId = 3;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional string MeetingHandle = 4;
    public static final int MEETINGHANDLE_FIELD_NUMBER = 4;
    private java.lang.Object meetingHandle_;
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public boolean hasMeetingHandle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public java.lang.String getMeetingHandle() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          meetingHandle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MeetingHandle = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMeetingHandleBytes() {
      java.lang.Object ref = meetingHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      messageUuid_ = com.google.protobuf.ByteString.EMPTY;
      masterId_ = 0;
      clientId_ = 0;
      meetingHandle_ = "";
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltRemoveBridgeByUUIDNack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeByUUIDNack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeByUUIDNack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        messageUuid_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        masterId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        meetingHandle_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeByUUIDNack_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltRemoveBridgeByUUIDNack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.messageUuid_ = messageUuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.masterId_ = masterId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.meetingHandle_ = meetingHandle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional bytes message_uuid = 1;
      private com.google.protobuf.ByteString messageUuid_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public boolean hasMessageUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public com.google.protobuf.ByteString getMessageUuid() {
        return messageUuid_;
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public Builder setMessageUuid(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        messageUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes message_uuid = 1;</code>
       */
      public Builder clearMessageUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        messageUuid_ = getDefaultInstance().getMessageUuid();
        onChanged();
        return this;
      }

      // optional uint32 MasterId = 2;
      private int masterId_ ;
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public boolean hasMasterId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public int getMasterId() {
        return masterId_;
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public Builder setMasterId(int value) {
        bitField0_ |= 0x00000002;
        masterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 MasterId = 2;</code>
       */
      public Builder clearMasterId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        masterId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ClientId = 3;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000004;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 3;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional string MeetingHandle = 4;
      private java.lang.Object meetingHandle_ = "";
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public boolean hasMeetingHandle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public java.lang.String getMeetingHandle() {
        java.lang.Object ref = meetingHandle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          meetingHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMeetingHandleBytes() {
        java.lang.Object ref = meetingHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder setMeetingHandle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetingHandle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder clearMeetingHandle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        meetingHandle_ = getDefaultInstance().getMeetingHandle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MeetingHandle = 4;</code>
       */
      public Builder setMeetingHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        meetingHandle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveBridgeByUUIDNack)
    }

    static {
      defaultInstance = new DssCltRemoveBridgeByUUIDNack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltRemoveBridgeByUUIDNack)
  }

  public interface DssCltDynamicEncryptKeyLessNtfOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional uint32 SessionIdLen = 2;
    /**
     * <code>optional uint32 SessionIdLen = 2;</code>
     */
    boolean hasSessionIdLen();
    /**
     * <code>optional uint32 SessionIdLen = 2;</code>
     */
    int getSessionIdLen();

    // optional bytes SessionId = 3;
    /**
     * <code>optional bytes SessionId = 3;</code>
     */
    boolean hasSessionId();
    /**
     * <code>optional bytes SessionId = 3;</code>
     */
    com.google.protobuf.ByteString getSessionId();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltDynamicEncryptKeyLessNtf}
   */
  public static final class DssCltDynamicEncryptKeyLessNtf extends
      com.google.protobuf.GeneratedMessage
      implements DssCltDynamicEncryptKeyLessNtfOrBuilder {
    // Use DssCltDynamicEncryptKeyLessNtf.newBuilder() to construct.
    private DssCltDynamicEncryptKeyLessNtf(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DssCltDynamicEncryptKeyLessNtf(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DssCltDynamicEncryptKeyLessNtf defaultInstance;
    public static DssCltDynamicEncryptKeyLessNtf getDefaultInstance() {
      return defaultInstance;
    }

    public DssCltDynamicEncryptKeyLessNtf getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltDynamicEncryptKeyLessNtf_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltDynamicEncryptKeyLessNtf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf.Builder.class);
    }

    public static com.google.protobuf.Parser<DssCltDynamicEncryptKeyLessNtf> PARSER =
        new com.google.protobuf.AbstractParser<DssCltDynamicEncryptKeyLessNtf>() {
      public DssCltDynamicEncryptKeyLessNtf parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DssCltDynamicEncryptKeyLessNtf> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional uint32 SessionIdLen = 2;
    public static final int SESSIONIDLEN_FIELD_NUMBER = 2;
    private int sessionIdLen_;
    /**
     * <code>optional uint32 SessionIdLen = 2;</code>
     */
    public boolean hasSessionIdLen() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 SessionIdLen = 2;</code>
     */
    public int getSessionIdLen() {
      return sessionIdLen_;
    }

    // optional bytes SessionId = 3;
    public static final int SESSIONID_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString sessionId_;
    /**
     * <code>optional bytes SessionId = 3;</code>
     */
    public boolean hasSessionId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes SessionId = 3;</code>
     */
    public com.google.protobuf.ByteString getSessionId() {
      return sessionId_;
    }

    private void initFields() {
      clientId_ = 0;
      sessionIdLen_ = 0;
      sessionId_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.DssCltDynamicEncryptKeyLessNtf}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtfOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltDynamicEncryptKeyLessNtf_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltDynamicEncryptKeyLessNtf_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf.class, com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sessionIdLen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        sessionId_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_DssCltDynamicEncryptKeyLessNtf_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf result = new com.kedacom.ops.flink.etl.proto.Dssevent.DssCltDynamicEncryptKeyLessNtf(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sessionIdLen_ = sessionIdLen_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sessionId_ = sessionId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 SessionIdLen = 2;
      private int sessionIdLen_ ;
      /**
       * <code>optional uint32 SessionIdLen = 2;</code>
       */
      public boolean hasSessionIdLen() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 SessionIdLen = 2;</code>
       */
      public int getSessionIdLen() {
        return sessionIdLen_;
      }
      /**
       * <code>optional uint32 SessionIdLen = 2;</code>
       */
      public Builder setSessionIdLen(int value) {
        bitField0_ |= 0x00000002;
        sessionIdLen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 SessionIdLen = 2;</code>
       */
      public Builder clearSessionIdLen() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sessionIdLen_ = 0;
        onChanged();
        return this;
      }

      // optional bytes SessionId = 3;
      private com.google.protobuf.ByteString sessionId_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes SessionId = 3;</code>
       */
      public boolean hasSessionId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes SessionId = 3;</code>
       */
      public com.google.protobuf.ByteString getSessionId() {
        return sessionId_;
      }
      /**
       * <code>optional bytes SessionId = 3;</code>
       */
      public Builder setSessionId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        sessionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes SessionId = 3;</code>
       */
      public Builder clearSessionId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sessionId_ = getDefaultInstance().getSessionId();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.DssCltDynamicEncryptKeyLessNtf)
    }

    static {
      defaultInstance = new DssCltDynamicEncryptKeyLessNtf(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.DssCltDynamicEncryptKeyLessNtf)
  }

  public interface CltDssUpdateDynamicEncryptKeyCmdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ClientId = 1;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    boolean hasClientId();
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    int getClientId();

    // optional .com.kedacom.ops.flink.etl.proto.DssSecKey SecKey = 2;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey SecKey = 2;</code>
     */
    boolean hasSecKey();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey SecKey = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey getSecKey();
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey SecKey = 2;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKeyOrBuilder getSecKeyOrBuilder();

    // repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr> 
        getRcvAddrList();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr(int index);
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    int getRcvAddrCount();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
        getRcvAddrOrBuilderList();
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder(
        int index);

    // optional uint32 ClientTick = 4;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    boolean hasClientTick();
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    int getClientTick();
  }
  /**
   * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssUpdateDynamicEncryptKeyCmd}
   */
  public static final class CltDssUpdateDynamicEncryptKeyCmd extends
      com.google.protobuf.GeneratedMessage
      implements CltDssUpdateDynamicEncryptKeyCmdOrBuilder {
    // Use CltDssUpdateDynamicEncryptKeyCmd.newBuilder() to construct.
    private CltDssUpdateDynamicEncryptKeyCmd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CltDssUpdateDynamicEncryptKeyCmd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CltDssUpdateDynamicEncryptKeyCmd defaultInstance;
    public static CltDssUpdateDynamicEncryptKeyCmd getDefaultInstance() {
      return defaultInstance;
    }

    public CltDssUpdateDynamicEncryptKeyCmd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssUpdateDynamicEncryptKeyCmd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssUpdateDynamicEncryptKeyCmd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd.Builder.class);
    }

    public static com.google.protobuf.Parser<CltDssUpdateDynamicEncryptKeyCmd> PARSER =
        new com.google.protobuf.AbstractParser<CltDssUpdateDynamicEncryptKeyCmd>() {
      public CltDssUpdateDynamicEncryptKeyCmd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CltDssUpdateDynamicEncryptKeyCmd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ClientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private int clientId_;
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ClientId = 1;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    // optional .com.kedacom.ops.flink.etl.proto.DssSecKey SecKey = 2;
    public static final int SECKEY_FIELD_NUMBER = 2;
    private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey secKey_;
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey SecKey = 2;</code>
     */
    public boolean hasSecKey() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey SecKey = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey getSecKey() {
      return secKey_;
    }
    /**
     * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey SecKey = 2;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKeyOrBuilder getSecKeyOrBuilder() {
      return secKey_;
    }

    // repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
    public static final int RCVADDR_FIELD_NUMBER = 3;
    private java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr> rcvAddr_;
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr> getRcvAddrList() {
      return rcvAddr_;
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
        getRcvAddrOrBuilderList() {
      return rcvAddr_;
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public int getRcvAddrCount() {
      return rcvAddr_.size();
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr(int index) {
      return rcvAddr_.get(index);
    }
    /**
     * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
     */
    public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder(
        int index) {
      return rcvAddr_.get(index);
    }

    // optional uint32 ClientTick = 4;
    public static final int CLIENTTICK_FIELD_NUMBER = 4;
    private int clientTick_;
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public boolean hasClientTick() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 ClientTick = 4;</code>
     */
    public int getClientTick() {
      return clientTick_;
    }

    private void initFields() {
      clientId_ = 0;
      secKey_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey.getDefaultInstance();
      rcvAddr_ = java.util.Collections.emptyList();
      clientTick_ = 0;
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kedacom.ops.flink.etl.proto.CltDssUpdateDynamicEncryptKeyCmd}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssUpdateDynamicEncryptKeyCmd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssUpdateDynamicEncryptKeyCmd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd.class, com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd.Builder.class);
      }

      // Construct using com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSecKeyFieldBuilder();
          getRcvAddrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (secKeyBuilder_ == null) {
          secKey_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey.getDefaultInstance();
        } else {
          secKeyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rcvAddrBuilder_.clear();
        }
        clientTick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.internal_static_com_kedacom_ops_flink_etl_proto_CltDssUpdateDynamicEncryptKeyCmd_descriptor;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd getDefaultInstanceForType() {
        return com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd.getDefaultInstance();
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd build() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd buildPartial() {
        com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd result = new com.kedacom.ops.flink.etl.proto.Dssevent.CltDssUpdateDynamicEncryptKeyCmd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (secKeyBuilder_ == null) {
          result.secKey_ = secKey_;
        } else {
          result.secKey_ = secKeyBuilder_.build();
        }
        if (rcvAddrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            rcvAddr_ = java.util.Collections.unmodifiableList(rcvAddr_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.rcvAddr_ = rcvAddr_;
        } else {
          result.rcvAddr_ = rcvAddrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.clientTick_ = clientTick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      // optional uint32 ClientId = 1;
      private int clientId_ ;
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientId = 1;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // optional .com.kedacom.ops.flink.etl.proto.DssSecKey SecKey = 2;
      private com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey secKey_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKeyOrBuilder> secKeyBuilder_;
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey SecKey = 2;</code>
       */
      public boolean hasSecKey() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey SecKey = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey getSecKey() {
        if (secKeyBuilder_ == null) {
          return secKey_;
        } else {
          return secKeyBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey SecKey = 2;</code>
       */
      public Builder setSecKey(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey value) {
        if (secKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          secKey_ = value;
          onChanged();
        } else {
          secKeyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey SecKey = 2;</code>
       */
      public Builder setSecKey(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey.Builder builderForValue) {
        if (secKeyBuilder_ == null) {
          secKey_ = builderForValue.build();
          onChanged();
        } else {
          secKeyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey SecKey = 2;</code>
       */
      public Builder mergeSecKey(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey value) {
        if (secKeyBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              secKey_ != com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey.getDefaultInstance()) {
            secKey_ =
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey.newBuilder(secKey_).mergeFrom(value).buildPartial();
          } else {
            secKey_ = value;
          }
          onChanged();
        } else {
          secKeyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey SecKey = 2;</code>
       */
      public Builder clearSecKey() {
        if (secKeyBuilder_ == null) {
          secKey_ = com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey.getDefaultInstance();
          onChanged();
        } else {
          secKeyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey SecKey = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey.Builder getSecKeyBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSecKeyFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey SecKey = 2;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKeyOrBuilder getSecKeyOrBuilder() {
        if (secKeyBuilder_ != null) {
          return secKeyBuilder_.getMessageOrBuilder();
        } else {
          return secKey_;
        }
      }
      /**
       * <code>optional .com.kedacom.ops.flink.etl.proto.DssSecKey SecKey = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKeyOrBuilder> 
          getSecKeyFieldBuilder() {
        if (secKeyBuilder_ == null) {
          secKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKey.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssSecKeyOrBuilder>(
                  secKey_,
                  getParentForChildren(),
                  isClean());
          secKey_ = null;
        }
        return secKeyBuilder_;
      }

      // repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;
      private java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr> rcvAddr_ =
        java.util.Collections.emptyList();
      private void ensureRcvAddrIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          rcvAddr_ = new java.util.ArrayList<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr>(rcvAddr_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> rcvAddrBuilder_;

      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr> getRcvAddrList() {
        if (rcvAddrBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rcvAddr_);
        } else {
          return rcvAddrBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public int getRcvAddrCount() {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_.size();
        } else {
          return rcvAddrBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr getRcvAddr(int index) {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_.get(index);
        } else {
          return rcvAddrBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRcvAddrIsMutable();
          rcvAddr_.set(index, value);
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder setRcvAddr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          ensureRcvAddrIsMutable();
          rcvAddr_.set(index, builderForValue.build());
          onChanged();
        } else {
          rcvAddrBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder addRcvAddr(com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRcvAddrIsMutable();
          rcvAddr_.add(value);
          onChanged();
        } else {
          rcvAddrBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder addRcvAddr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr value) {
        if (rcvAddrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRcvAddrIsMutable();
          rcvAddr_.add(index, value);
          onChanged();
        } else {
          rcvAddrBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder addRcvAddr(
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          ensureRcvAddrIsMutable();
          rcvAddr_.add(builderForValue.build());
          onChanged();
        } else {
          rcvAddrBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder addRcvAddr(
          int index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder builderForValue) {
        if (rcvAddrBuilder_ == null) {
          ensureRcvAddrIsMutable();
          rcvAddr_.add(index, builderForValue.build());
          onChanged();
        } else {
          rcvAddrBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder addAllRcvAddr(
          java.lang.Iterable<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr> values) {
        if (rcvAddrBuilder_ == null) {
          ensureRcvAddrIsMutable();
          super.addAll(values, rcvAddr_);
          onChanged();
        } else {
          rcvAddrBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder clearRcvAddr() {
        if (rcvAddrBuilder_ == null) {
          rcvAddr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rcvAddrBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public Builder removeRcvAddr(int index) {
        if (rcvAddrBuilder_ == null) {
          ensureRcvAddrIsMutable();
          rcvAddr_.remove(index);
          onChanged();
        } else {
          rcvAddrBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder getRcvAddrBuilder(
          int index) {
        return getRcvAddrFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder getRcvAddrOrBuilder(
          int index) {
        if (rcvAddrBuilder_ == null) {
          return rcvAddr_.get(index);  } else {
          return rcvAddrBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public java.util.List<? extends com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
           getRcvAddrOrBuilderList() {
        if (rcvAddrBuilder_ != null) {
          return rcvAddrBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rcvAddr_);
        }
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder addRcvAddrBuilder() {
        return getRcvAddrFieldBuilder().addBuilder(
            com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance());
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder addRcvAddrBuilder(
          int index) {
        return getRcvAddrFieldBuilder().addBuilder(
            index, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.getDefaultInstance());
      }
      /**
       * <code>repeated .com.kedacom.ops.flink.etl.proto.DssNetAddr RcvAddr = 3;</code>
       */
      public java.util.List<com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder> 
           getRcvAddrBuilderList() {
        return getRcvAddrFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder> 
          getRcvAddrFieldBuilder() {
        if (rcvAddrBuilder_ == null) {
          rcvAddrBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddr.Builder, com.kedacom.ops.flink.etl.proto.Dssevstruct.DssNetAddrOrBuilder>(
                  rcvAddr_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          rcvAddr_ = null;
        }
        return rcvAddrBuilder_;
      }

      // optional uint32 ClientTick = 4;
      private int clientTick_ ;
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public boolean hasClientTick() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public int getClientTick() {
        return clientTick_;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder setClientTick(int value) {
        bitField0_ |= 0x00000008;
        clientTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ClientTick = 4;</code>
       */
      public Builder clearClientTick() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clientTick_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kedacom.ops.flink.etl.proto.CltDssUpdateDynamicEncryptKeyCmd)
    }

    static {
      defaultInstance = new CltDssUpdateDynamicEncryptKeyCmd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kedacom.ops.flink.etl.proto.CltDssUpdateDynamicEncryptKeyCmd)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssConnectMasterReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssConnectMasterReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltConnectMasterAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltConnectMasterAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltConnectMasterNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltConnectMasterNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssDestroyClientReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssDestroyClientReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltPing_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltPing_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssPong_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssPong_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssPing_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssPing_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltPong_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltPong_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyLocalPortReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyLocalPortReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyLocalPortAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyLocalPortAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyLocalPortNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyLocalPortNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyLocalPortReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyLocalPortReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyLocalPortAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyLocalPortAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyLocalPortNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyLocalPortNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyCarrierPortReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyCarrierPortReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyCarrierPortAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyCarrierPortAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyCarrierPortNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyCarrierPortNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyCarrierPortReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyCarrierPortReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyCarrierPortAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyCarrierPortAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyCarrierPortNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyCarrierPortNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyPortReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyPortReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyPortAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyPortAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyPortNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyPortNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyPortReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyPortReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyPortAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyPortAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyPortNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyPortNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePortReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePortReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePartPortReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePartPortReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePartPortAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePartPortAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePartPortNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePartPortNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncAddBridgeReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncAddBridgeReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncAddBridgeAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncAddBridgeAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncAddBridgeNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncAddBridgeNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncAddBridgeReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncAddBridgeReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncAddBridgeAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncAddBridgeAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncAddBridgeNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncAddBridgeNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveBridgeReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveBridgeReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssSendToBridgeReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssSendToBridgeReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltSendToBridgeAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltSendToBridgeAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltSendToBridgeNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltSendToBridgeNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltBridgeSpeakerRemovedNtf_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltBridgeSpeakerRemovedNtf_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssStopSendToBridgeReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssStopSendToBridgeReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopSendToBridgeAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopSendToBridgeAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopSendToBridgeNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopSendToBridgeNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssReceiveFromBridgeReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssReceiveFromBridgeReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltReceiveFromBridgeAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltReceiveFromBridgeAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltReceiveFromBridgeNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltReceiveFromBridgeNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssStopReceiveFromBridgeReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssStopReceiveFromBridgeReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopReceiveFromBridgeAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopReceiveFromBridgeAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopReceiveFromBridgeNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopReceiveFromBridgeNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddSwitchReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddSwitchReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddSwitchAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddSwitchAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddSwitchNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddSwitchNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveSwitchReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveSwitchReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveSwitchAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveSwitchAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveSwitchNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveSwitchNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddM2OneSwitchReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddM2OneSwitchReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddM2OneSwitchAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddM2OneSwitchAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddM2OneSwitchNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddM2OneSwitchNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveM2OneSwitchReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveM2OneSwitchReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveM2OneSwitchAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveM2OneSwitchAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveM2OneSwitchNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveM2OneSwitchNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddDumpReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddDumpReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddDumpAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddDumpAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddDumpNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddDumpNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveDumpReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveDumpReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveDumpAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveDumpAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveDumpNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveDumpNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltSrvLostNtf_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltSrvLostNtf_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltSrvRegisterNtf_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltSrvRegisterNtf_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssGetLostRateByPortReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssGetLostRateByPortReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltGetLostRateByPortReply_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltGetLostRateByPortReply_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssBindWorkerToMeetingReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssBindWorkerToMeetingReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltBindWorkerToMeetingAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltBindWorkerToMeetingAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltBindWorkerToMeetingNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltBindWorkerToMeetingNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssUnbindWorkerFromMeetingReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssUnbindWorkerFromMeetingReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltUnbindWorkerFromMeetingAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltUnbindWorkerFromMeetingAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltUnbindWorkerFromMeetingNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltUnbindWorkerFromMeetingNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveClientNtf_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveClientNtf_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssDestroyClientByUUIDReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssDestroyClientByUUIDReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltDestroyClientByUUIDAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltDestroyClientByUUIDAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltDestroyClientByUUIDNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltDestroyClientByUUIDNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePortByUUIDReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePortByUUIDReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortByUUIDAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortByUUIDAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortByUUIDNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortByUUIDNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveBridgeByUUIDReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveBridgeByUUIDReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeByUUIDAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeByUUIDAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeByUUIDNack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeByUUIDNack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_DssCltDynamicEncryptKeyLessNtf_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_DssCltDynamicEncryptKeyLessNtf_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kedacom_ops_flink_etl_proto_CltDssUpdateDynamicEncryptKeyCmd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kedacom_ops_flink_etl_proto_CltDssUpdateDynamicEncryptKeyCmd_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016dssevent.proto\022\037com.kedacom.ops.flink." +
      "etl.proto\032\021dssevstruct.proto\"\213\001\n\026CltDssC" +
      "onnectMasterReq\022\r\n\005Alias\030\001 \001(\t\022\r\n\005QName\030" +
      "\002 \001(\t\022\017\n\007Materid\030\003 \001(\r\022\023\n\013ProcessName\030\004 " +
      "\001(\t\022\017\n\007AppMoid\030\005 \001(\t\022\034\n\rbFirstConnect\030\006 " +
      "\001(\010:\005false\"\211\001\n\026DssCltConnectMasterAck\022\r\n" +
      "\005Alias\030\001 \001(\t\022\020\n\010ClientId\030\002 \001(\r\022\022\n\nClient" +
      "Tick\030\003 \001(\r\022\020\n\010MasterId\030\004 \001(\r\022\025\n\rKeepaliv" +
      "eTime\030\005 \001(\r\022\021\n\tAnyWorker\030\006 \001(\010\"H\n\027DssClt" +
      "ConnectMasterNack\022\r\n\005Alias\030\001 \001(\t\022\r\n\005QNam",
      "e\030\002 \001(\t\022\017\n\007Materid\030\003 \001(\r\"\356\001\n\024DssCltCreat" +
      "ClientReq\022\r\n\005Alias\030\001 \001(\t\022@\n\nClientType\030\002" +
      " \001(\0162,.com.kedacom.ops.flink.etl.proto.E" +
      "ClientType\022\r\n\005QName\030\003 \001(\t\022\025\n\rReplyCallBa" +
      "ck\030\004 \001(\r\022\020\n\010MasterId\030\005 \001(\r\022\017\n\007Context\030\006 " +
      "\001(\r\022\023\n\013ProcessName\030\007 \001(\t\022\017\n\007AppMoid\030\010 \001(" +
      "\t\022\026\n\016reply_callback\030\t \001(\014\"\205\002\n\024DssCltCrea" +
      "tClientAck\022\r\n\005Alias\030\001 \001(\t\022@\n\nClientType\030" +
      "\002 \001(\0162,.com.kedacom.ops.flink.etl.proto." +
      "EClientType\022\r\n\005QName\030\003 \001(\t\022\025\n\rReplyCallB",
      "ack\030\004 \001(\r\022\020\n\010Masterid\030\005 \001(\r\022\020\n\010ClientId\030" +
      "\006 \001(\r\022\022\n\nClientTick\030\007 \001(\r\022\025\n\rkeepaliveti" +
      "me\030\010 \001(\r\022\017\n\007Context\030\t \001(\r\022\026\n\016reply_callb" +
      "ack\030\n \001(\014\"\311\001\n\025DssCltCreatClientNack\022\r\n\005A" +
      "lias\030\001 \001(\t\022@\n\nClientType\030\002 \001(\0162,.com.ked" +
      "acom.ops.flink.etl.proto.EClientType\022\r\n\005" +
      "QName\030\003 \001(\t\022\025\n\rReplyCallBack\030\004 \001(\r\022\020\n\010Ma" +
      "sterId\030\005 \001(\r\022\017\n\007Context\030\006 \001(\r\022\026\n\016reply_c" +
      "allback\030\007 \001(\014\">\n\026CltDssDestroyClientReq\022" +
      "\020\n\010ClientId\030\001 \001(\r\022\022\n\nClientTick\030\002 \001(\r\"2\n",
      "\nDssCltPing\022\020\n\010ClientId\030\001 \001(\r\022\022\n\nClientT" +
      "ick\030\002 \001(\r\"E\n\nCltDssPong\022\020\n\010ClientId\030\001 \001(" +
      "\r\022\022\n\nClientTick\030\002 \001(\r\022\021\n\tClientIds\030\003 \003(\r" +
      "\"2\n\nCltDssPing\022\020\n\010ClientId\030\001 \001(\r\022\022\n\nClie" +
      "ntTick\030\002 \001(\r\"2\n\nDssCltPong\022\020\n\010ClientId\030\001" +
      " \001(\r\022\022\n\nClientTick\030\002 \001(\r\"\254\001\n\033CltDssSyncA" +
      "pplyLocalPortReq\022\020\n\010ClientId\030\001 \001(\r\022\025\n\rMe" +
      "etingHandle\030\002 \001(\t\022\025\n\rForceWorkerIp\030\003 \001(\t" +
      "\022\025\n\rForceConsPort\030\004 \001(\010\022\021\n\tBandWidth\030\005 \001" +
      "(\r\022\017\n\007PortNum\030\006 \001(\r\022\022\n\nClientTick\030\007 \001(\r\"",
      "z\n\033DssCltSyncApplyLocalPortAck\022\020\n\010Client" +
      "Id\030\001 \001(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022\022\n\nPortH" +
      "andle\030\003 \001(\r\022\020\n\010WorkerIp\030\004 \001(\t\022\014\n\004Port\030\005 " +
      "\003(\r\"\346\001\n\034DssCltSyncApplyLocalPortNack\022\020\n\010" +
      "ClientId\030\001 \001(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022\025\n" +
      "\rForceWorkerIp\030\003 \001(\t\022\025\n\rForceConsPort\030\004 " +
      "\001(\010\022\021\n\tBandWidth\030\005 \001(\r\022\017\n\007PortNum\030\006 \001(\r\022" +
      "K\n\nResultCode\030\007 \001(\01627.com.kedacom.ops.fl" +
      "ink.etl.proto.EDssLocalReqResultCode\"\255\001\n" +
      "\034CltDssASyncApplyLocalPortReq\022\020\n\010ClientI",
      "d\030\001 \001(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022\025\n\rForceW" +
      "orkerIp\030\003 \001(\t\022\025\n\rForceConsPort\030\004 \001(\010\022\021\n\t" +
      "BandWidth\030\005 \001(\r\022\017\n\007PortNum\030\006 \001(\r\022\022\n\nClie" +
      "ntTick\030\007 \001(\r\"{\n\034DssCltASyncApplyLocalPor" +
      "tAck\022\020\n\010ClientId\030\001 \001(\r\022\025\n\rMeetingHandle\030" +
      "\002 \001(\t\022\022\n\nPortHandle\030\003 \001(\r\022\020\n\010WorkerIp\030\004 " +
      "\001(\t\022\014\n\004Port\030\005 \003(\r\"\347\001\n\035DssCltASyncApplyLo" +
      "calPortNack\022\020\n\010ClientId\030\001 \001(\r\022\025\n\rMeeting" +
      "Handle\030\002 \001(\t\022\025\n\rForceWorkerIp\030\003 \001(\t\022\025\n\rF" +
      "orceConsPort\030\004 \001(\010\022\021\n\tBandWidth\030\005 \001(\r\022\017\n",
      "\007PortNum\030\006 \001(\r\022K\n\nResultCode\030\007 \001(\01627.com" +
      ".kedacom.ops.flink.etl.proto.EDssLocalRe" +
      "qResultCode\"\250\002\n\035CltDssSyncApplyCarrierPo" +
      "rtReq\022\020\n\010ClientId\030\001 \001(\r\022\025\n\rForceWorkerIp" +
      "\030\002 \001(\t\022\025\n\rMeetingHandle\030\003 \001(\t\022\017\n\007PortNum" +
      "\030\004 \001(\r\022\021\n\tBandWidth\030\005 \001(\r\022\025\n\rForceConsPo" +
      "rt\030\006 \001(\010\022\032\n\022ChannerCarrierType\030\007 \001(\t\022\024\n\014" +
      "IsChannerDmz\030\010 \001(\010\022\032\n\022ChanneeCarrierType" +
      "\030\t \001(\t\022\024\n\014IsChanneeDmz\030\n \001(\010\022\022\n\nClientTi" +
      "ck\030\013 \001(\r\022\024\n\014MtEncyptType\030\014 \001(\r\"\274\001\n\035DssCl",
      "tSyncApplyCarrierPortAck\022\020\n\010ClientId\030\001 \001" +
      "(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022\021\n\tChannerIp\030\003" +
      " \001(\t\022\024\n\014ChannerDmzIp\030\004 \001(\t\022\021\n\tChanneeIp\030" +
      "\005 \001(\t\022\024\n\014ChanneeDmzIp\030\006 \001(\t\022\014\n\004Port\030\007 \003(" +
      "\r\022\022\n\nPortHandle\030\010 \001(\r\"\316\002\n\036DssCltSyncAppl" +
      "yCarrierPortNack\022\020\n\010ClientId\030\001 \001(\r\022\025\n\rFo" +
      "rceWorkerIp\030\002 \001(\t\022\025\n\rMeetingHandle\030\003 \001(\t" +
      "\022\017\n\007PortNum\030\004 \001(\r\022\021\n\tBandWidth\030\005 \001(\r\022\025\n\r" +
      "ForceConsPort\030\006 \001(\010\022\032\n\022ChannerCarrierTyp" +
      "e\030\007 \001(\t\022\024\n\014IsChannerDmz\030\010 \001(\010\022\032\n\022Channee",
      "CarrierType\030\t \001(\t\022\024\n\014IsChanneeDmz\030\n \001(\010\022" +
      "M\n\nResultCode\030\013 \001(\01629.com.kedacom.ops.fl" +
      "ink.etl.proto.EDssCarrierReqResultCode\"\251" +
      "\002\n\036CltDssASyncApplyCarrierPortReq\022\020\n\010Cli" +
      "entId\030\001 \001(\r\022\025\n\rForceWorkerIp\030\002 \001(\t\022\025\n\rMe" +
      "etingHandle\030\003 \001(\t\022\017\n\007PortNum\030\004 \001(\r\022\021\n\tBa" +
      "ndWidth\030\005 \001(\r\022\025\n\rForceConsPort\030\006 \001(\010\022\032\n\022" +
      "ChannerCarrierType\030\007 \001(\t\022\024\n\014IsChannerDmz" +
      "\030\010 \001(\010\022\032\n\022ChanneeCarrierType\030\t \001(\t\022\024\n\014Is" +
      "ChanneeDmz\030\n \001(\010\022\022\n\nClientTick\030\013 \001(\r\022\024\n\014",
      "MtEncyptType\030\014 \001(\r\"\275\001\n\036DssCltASyncApplyC" +
      "arrierPortAck\022\020\n\010ClientId\030\001 \001(\r\022\025\n\rMeeti" +
      "ngHandle\030\002 \001(\t\022\021\n\tChannerIp\030\003 \001(\t\022\024\n\014Cha" +
      "nnerDmzIp\030\004 \001(\t\022\021\n\tChanneeIp\030\005 \001(\t\022\024\n\014Ch" +
      "anneeDmzIp\030\006 \001(\t\022\014\n\004Port\030\007 \003(\r\022\022\n\nPortHa" +
      "ndle\030\010 \001(\r\"\317\002\n\037DssCltASyncApplyCarrierPo" +
      "rtNack\022\020\n\010ClientId\030\001 \001(\r\022\025\n\rForceWorkerI" +
      "p\030\002 \001(\t\022\025\n\rMeetingHandle\030\003 \001(\t\022\017\n\007PortNu" +
      "m\030\004 \001(\r\022\021\n\tBandWidth\030\005 \001(\r\022\025\n\rForceConsP" +
      "ort\030\006 \001(\010\022\032\n\022ChannerCarrierType\030\007 \001(\t\022\024\n",
      "\014IsChannerDmz\030\010 \001(\010\022\032\n\022ChanneeCarrierTyp" +
      "e\030\t \001(\t\022\024\n\014IsChanneeDmz\030\n \001(\010\022M\n\nResultC" +
      "ode\030\013 \001(\01629.com.kedacom.ops.flink.etl.pr" +
      "oto.EDssCarrierReqResultCode\"\355\001\n\026CltDssS" +
      "yncApplyPortReq\022\020\n\010ClientId\030\001 \001(\r\022\025\n\rFor" +
      "ceWorkerIp\030\002 \001(\t\022\025\n\rMeetingHandle\030\003 \001(\t\022" +
      "\017\n\007PortNum\030\004 \001(\r\022\021\n\tBandWidth\030\005 \001(\r\022\025\n\rF" +
      "orceConsPort\030\006 \001(\010\022D\n\013CarrierAttr\030\007 \003(\0132" +
      "/.com.kedacom.ops.flink.etl.proto.DssCar" +
      "rierAttr\022\022\n\nClientTick\030\010 \001(\r\"\251\001\n\026DssCltS",
      "yncApplyPortAck\022\020\n\010ClientId\030\001 \001(\r\022\025\n\rMee" +
      "tingHandle\030\002 \001(\t\022D\n\013CarrierAddr\030\003 \003(\0132/." +
      "com.kedacom.ops.flink.etl.proto.DssCarri" +
      "erAddr\022\014\n\004Port\030\004 \003(\r\022\022\n\nPortHandle\030\005 \001(\r" +
      "\"\250\002\n\027DssCltSyncApplyPortNack\022\020\n\010ClientId" +
      "\030\001 \001(\r\022\025\n\rForceWorkerIp\030\002 \001(\t\022\025\n\rMeeting" +
      "Handle\030\003 \001(\t\022\017\n\007PortNum\030\004 \001(\r\022\021\n\tBandWid" +
      "th\030\005 \001(\r\022\025\n\rForceConsPort\030\006 \001(\010\022D\n\013Carri" +
      "erAttr\030\007 \003(\0132/.com.kedacom.ops.flink.etl" +
      ".proto.DssCarrierAttr\022L\n\nResultCode\030\010 \001(",
      "\01628.com.kedacom.ops.flink.etl.proto.EDss" +
      "ApplyPortResultCode\"\356\001\n\027CltDssASyncApply" +
      "PortReq\022\020\n\010ClientId\030\001 \001(\r\022\025\n\rForceWorker" +
      "Ip\030\002 \001(\t\022\025\n\rMeetingHandle\030\003 \001(\t\022\017\n\007PortN" +
      "um\030\004 \001(\r\022\021\n\tBandWidth\030\005 \001(\r\022\025\n\rForceCons" +
      "Port\030\006 \001(\010\022D\n\013CarrierAttr\030\007 \003(\0132/.com.ke" +
      "dacom.ops.flink.etl.proto.DssCarrierAttr" +
      "\022\022\n\nClientTick\030\010 \001(\r\"\252\001\n\027DssCltASyncAppl" +
      "yPortAck\022\020\n\010ClientId\030\001 \001(\r\022\025\n\rMeetingHan" +
      "dle\030\002 \001(\t\022D\n\013CarrierAddr\030\003 \003(\0132/.com.ked",
      "acom.ops.flink.etl.proto.DssCarrierAddr\022" +
      "\014\n\004Port\030\004 \003(\r\022\022\n\nPortHandle\030\005 \001(\r\"\251\002\n\030Ds" +
      "sCltASyncApplyPortNack\022\020\n\010ClientId\030\001 \001(\r" +
      "\022\025\n\rForceWorkerIp\030\002 \001(\t\022\025\n\rMeetingHandle" +
      "\030\003 \001(\t\022\017\n\007PortNum\030\004 \001(\r\022\021\n\tBandWidth\030\005 \001" +
      "(\r\022\025\n\rForceConsPort\030\006 \001(\010\022D\n\013CarrierAttr" +
      "\030\007 \003(\0132/.com.kedacom.ops.flink.etl.proto" +
      ".DssCarrierAttr\022L\n\nResultCode\030\010 \001(\01628.co" +
      "m.kedacom.ops.flink.etl.proto.EDssApplyP" +
      "ortResultCode\"g\n\024CltDssReleasePortReq\022\020\n",
      "\010ClientId\030\001 \001(\r\022\025\n\rMeetinghandle\030\002 \001(\t\022\022" +
      "\n\nPortHandle\030\003 \001(\r\022\022\n\nClientTick\030\004 \001(\r\"S" +
      "\n\024DssCltReleasePortAck\022\020\n\010ClientId\030\001 \001(\r" +
      "\022\025\n\rMeetinghandle\030\002 \001(\t\022\022\n\nPortHandle\030\003 " +
      "\001(\r\"T\n\025DssCltReleasePortNack\022\020\n\010ClientId" +
      "\030\001 \001(\r\022\025\n\rMeetinghandle\030\002 \001(\t\022\022\n\nPortHan" +
      "dle\030\003 \001(\r\"y\n\030CltDssReleasePartPortReq\022\020\n" +
      "\010ClientId\030\001 \001(\r\022\025\n\rMeetinghandle\030\002 \001(\t\022\022" +
      "\n\nPortHandle\030\003 \001(\r\022\022\n\nClientTick\030\004 \001(\r\022\014" +
      "\n\004Port\030\005 \003(\r\"\205\001\n\030DssCltReleasePartPortAc",
      "k\022\020\n\010ClientId\030\001 \001(\r\022\025\n\rMeetinghandle\030\002 \001" +
      "(\t\022\022\n\nPortHandle\030\003 \001(\r\022\021\n\tStartPort\030\004 \001(" +
      "\r\022\031\n\021ReleasePortNumber\030\005 \001(\r\"\206\001\n\031DssCltR" +
      "eleasePartPortNack\022\020\n\010ClientId\030\001 \001(\r\022\025\n\r" +
      "Meetinghandle\030\002 \001(\t\022\022\n\nPortHandle\030\003 \001(\r\022" +
      "\021\n\tStartPort\030\004 \001(\r\022\031\n\021ReleasePortNumber\030" +
      "\005 \001(\r\"l\n\026CltDssSyncAddBridgeReq\022\020\n\010Clien" +
      "tId\030\001 \001(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022\025\n\rForc" +
      "eKeyFrame\030\003 \001(\010\022\022\n\nClientTick\030\004 \001(\r\"n\n\026D" +
      "ssCltSyncAddBridgeAck\022\020\n\010ClientId\030\001 \001(\r\022",
      "\025\n\rMeetingHandle\030\002 \001(\t\022\025\n\rForceKeyFrame\030" +
      "\003 \001(\010\022\024\n\014BridgeHandle\030\004 \001(\r\"\247\001\n\027DssCltSy" +
      "ncAddBridgeNack\022\020\n\010ClientId\030\001 \001(\r\022\025\n\rMee" +
      "tingHandle\030\002 \001(\t\022\025\n\rForceKeyFrame\030\003 \001(\010\022" +
      "L\n\nResultCode\030\004 \001(\01628.com.kedacom.ops.fl" +
      "ink.etl.proto.EDssAddBridgeResultCode\"m\n" +
      "\027CltDssASyncAddBridgeReq\022\020\n\010ClientId\030\001 \001" +
      "(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022\025\n\rForceKeyFra" +
      "me\030\003 \001(\010\022\022\n\nClientTick\030\004 \001(\r\"o\n\027DssCltAS" +
      "yncAddBridgeAck\022\020\n\010ClientId\030\001 \001(\r\022\025\n\rMee",
      "tingHandle\030\002 \001(\t\022\025\n\rForceKeyFrame\030\003 \001(\010\022" +
      "\024\n\014BridgeHandle\030\004 \001(\r\"\276\001\n\030DssCltASyncAdd" +
      "BridgeNack\022\020\n\010ClientId\030\001 \001(\r\022\025\n\rMeetingH" +
      "andle\030\002 \001(\t\022\025\n\rForceKeyFrame\030\003 \001(\010\022\024\n\014Br" +
      "idgeHandle\030\004 \001(\r\022L\n\nResultCode\030\005 \001(\01628.c" +
      "om.kedacom.ops.flink.etl.proto.EDssAddBr" +
      "idgeResultCode\"j\n\025CltDssRemoveBridgeReq\022" +
      "\020\n\010ClientId\030\001 \001(\r\022\025\n\rMeetingHandle\030\002 \001(\t" +
      "\022\024\n\014BridgeHandle\030\003 \001(\r\022\022\n\nClientTick\030\004 \001" +
      "(\r\"V\n\025DssCltRemoveBridgeAck\022\020\n\010ClientId\030",
      "\001 \001(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022\024\n\014BridgeHa" +
      "ndle\030\003 \001(\r\"\244\001\n\026DssCltRemoveBridgeNack\022\020\n" +
      "\010ClientId\030\001 \001(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022\024" +
      "\n\014BridgeHandle\030\003 \001(\r\022K\n\nResultCode\030\004 \001(\016" +
      "27.com.kedacom.ops.flink.etl.proto.EDssR" +
      "mBridgeResultCode\"\250\001\n\025CltDssSendToBridge" +
      "Req\022\020\n\010ClientId\030\001 \001(\r\022\024\n\014BridgeHandle\030\002 " +
      "\001(\r\022<\n\007RcvAddr\030\003 \001(\0132+.com.kedacom.ops.f" +
      "link.etl.proto.DssNetAddr\022\022\n\nClientTick\030" +
      "\004 \001(\r\022\025\n\rMeetingHandle\030\005 \001(\t\"\224\001\n\025DssCltS",
      "endToBridgeAck\022\020\n\010ClientId\030\001 \001(\r\022\024\n\014Brid" +
      "geHandle\030\002 \001(\r\022<\n\007RcvAddr\030\003 \001(\0132+.com.ke" +
      "dacom.ops.flink.etl.proto.DssNetAddr\022\025\n\r" +
      "MeetingHandle\030\004 \001(\t\"\343\001\n\026DssCltSendToBrid" +
      "geNack\022\020\n\010ClientId\030\001 \001(\r\022\024\n\014BridgeHandle" +
      "\030\002 \001(\r\022<\n\007RcvAddr\030\003 \001(\0132+.com.kedacom.op" +
      "s.flink.etl.proto.DssNetAddr\022\025\n\rMeetingH" +
      "andle\030\004 \001(\t\022L\n\nResultCode\030\005 \001(\01628.com.ke" +
      "dacom.ops.flink.etl.proto.ESendToBridgeR" +
      "esultCode\"\234\001\n\035DssCltBridgeSpeakerRemoved",
      "Ntf\022\020\n\010ClientId\030\001 \001(\r\022\024\n\014BridgeHandle\030\002 " +
      "\001(\r\022<\n\007RcvAddr\030\003 \001(\0132+.com.kedacom.ops.f" +
      "link.etl.proto.DssNetAddr\022\025\n\rMeetingHand" +
      "le\030\004 \001(\t\"\301\001\n\031CltDssStopSendToBridgeReq\022\020" +
      "\n\010ClientId\030\001 \001(\r\022\024\n\014BridgeHandle\030\002 \001(\r\022<" +
      "\n\007RcvAddr\030\003 \001(\0132+.com.kedacom.ops.flink." +
      "etl.proto.DssNetAddr\022\023\n\013RemoveByDst\030\004 \001(" +
      "\010\022\022\n\nClientTick\030\005 \001(\r\022\025\n\rMeetingHandle\030\006" +
      " \001(\t\"\255\001\n\031DssCltStopSendToBridgeAck\022\020\n\010Cl" +
      "ientId\030\001 \001(\r\022\024\n\014BridgeHandle\030\002 \001(\r\022<\n\007Rc",
      "vAddr\030\003 \001(\0132+.com.kedacom.ops.flink.etl." +
      "proto.DssNetAddr\022\023\n\013RemoveByDst\030\004 \001(\010\022\025\n" +
      "\rMeetingHandle\030\005 \001(\t\"\200\002\n\032DssCltStopSendT" +
      "oBridgeNack\022\020\n\010ClientId\030\001 \001(\r\022\024\n\014BridgeH" +
      "andle\030\002 \001(\r\022<\n\007RcvAddr\030\003 \001(\0132+.com.kedac" +
      "om.ops.flink.etl.proto.DssNetAddr\022\023\n\013Rem" +
      "oveByDst\030\004 \001(\010\022\025\n\rMeetingHandle\030\005 \001(\t\022P\n" +
      "\nResultCode\030\006 \001(\0162<.com.kedacom.ops.flin" +
      "k.etl.proto.EStopSendToBridgeResultCode\"" +
      "\255\001\n\032CltDssReceiveFromBridgeReq\022\020\n\010Client",
      "Id\030\001 \001(\r\022\024\n\014BridgeHandle\030\002 \001(\r\022<\n\007DstAdd" +
      "r\030\003 \001(\0132+.com.kedacom.ops.flink.etl.prot" +
      "o.DssNetAddr\022\022\n\nClientTick\030\004 \001(\r\022\025\n\rMeet" +
      "ingHandle\030\005 \001(\t\"\231\001\n\032DssCltReceiveFromBri" +
      "dgeAck\022\020\n\010ClientId\030\001 \001(\r\022\024\n\014BridgeHandle" +
      "\030\002 \001(\r\022<\n\007DstAddr\030\003 \001(\0132+.com.kedacom.op" +
      "s.flink.etl.proto.DssNetAddr\022\025\n\rMeetingH" +
      "andle\030\004 \001(\t\"\355\001\n\033DssCltReceiveFromBridgeN" +
      "ack\022\020\n\010ClientId\030\001 \001(\r\022\024\n\014BridgeHandle\030\002 " +
      "\001(\r\022<\n\007DstAddr\030\003 \001(\0132+.com.kedacom.ops.f",
      "link.etl.proto.DssNetAddr\022\025\n\rMeetingHand" +
      "le\030\004 \001(\t\022Q\n\nResultCode\030\005 \001(\0162=.com.kedac" +
      "om.ops.flink.etl.proto.EReceiveFromBridg" +
      "eResultCode\"\204\002\n\036CltDssStopReceiveFromBri" +
      "dgeReq\022\020\n\010ClientId\030\001 \001(\r\022\024\n\014BridgeHandle" +
      "\030\002 \001(\r\022<\n\007MapAddr\030\003 \001(\0132+.com.kedacom.op" +
      "s.flink.etl.proto.DssNetAddr\022\023\n\013RemoveBy" +
      "Dst\030\004 \001(\010\022<\n\007DstAddr\030\005 \001(\0132+.com.kedacom" +
      ".ops.flink.etl.proto.DssNetAddr\022\022\n\nClien" +
      "tTick\030\006 \001(\r\022\025\n\rMeetingHandle\030\007 \001(\t\"\360\001\n\036D",
      "ssCltStopReceiveFromBridgeAck\022\020\n\010ClientI" +
      "d\030\001 \001(\r\022\024\n\014BridgeHandle\030\002 \001(\r\022<\n\007MapAddr" +
      "\030\003 \001(\0132+.com.kedacom.ops.flink.etl.proto" +
      ".DssNetAddr\022\023\n\013RemoveByDst\030\004 \001(\010\022<\n\007DstA" +
      "ddr\030\005 \001(\0132+.com.kedacom.ops.flink.etl.pr" +
      "oto.DssNetAddr\022\025\n\rMeetingHandle\030\006 \001(\t\"\310\002" +
      "\n\037DssCltStopReceiveFromBridgeNack\022\020\n\010Cli" +
      "entId\030\001 \001(\r\022\024\n\014BridgeHandle\030\002 \001(\r\022<\n\007Map" +
      "Addr\030\003 \001(\0132+.com.kedacom.ops.flink.etl.p" +
      "roto.DssNetAddr\022\023\n\013RemoveByDst\030\004 \001(\010\022<\n\007",
      "DstAddr\030\005 \001(\0132+.com.kedacom.ops.flink.et" +
      "l.proto.DssNetAddr\022\025\n\rMeetingHandle\030\006 \001(" +
      "\t\022U\n\nResultCode\030\007 \001(\0162A.com.kedacom.ops." +
      "flink.etl.proto.EStopReceiveFromBridgeRe" +
      "sultCode\"\316\006\n\022CltDssAddSwitchReq\022\020\n\010Clien" +
      "tId\030\001 \001(\r\022<\n\007DstAddr\030\002 \001(\0132+.com.kedacom" +
      ".ops.flink.etl.proto.DssNetAddr\022<\n\007RcvAd" +
      "dr\030\003 \001(\0132+.com.kedacom.ops.flink.etl.pro" +
      "to.DssNetAddr\022<\n\007MapAddr\030\004 \001(\0132+.com.ked" +
      "acom.ops.flink.etl.proto.DssNetAddr\022@\n\nS",
      "witchType\030\005 \001(\0162,.com.kedacom.ops.flink." +
      "etl.proto.ESwitchType\022\016\n\006DisFec\030\006 \001(\010\022\022\n" +
      "\nMdyRtpData\030\007 \001(\010\022:\n\006Cipher\030\010 \001(\0132*.com." +
      "kedacom.ops.flink.etl.proto.DssCipher\022\021\n" +
      "\tFixedSsrc\030\t \001(\010\022<\n\007fixedpt\030\n \001(\0132+.com." +
      "kedacom.ops.flink.etl.proto.DssFixedPt\022\021" +
      "\n\tFilterRed\030\013 \001(\010\022\021\n\tRemoveExt\030\014 \001(\010\022\022\n\n" +
      "ClientTick\030\r \001(\r\022\025\n\rMeetingHandle\030\016 \001(\t\022" +
      "L\n\020SwitchStreamType\030\017 \001(\01622.com.kedacom." +
      "ops.flink.etl.proto.ESwitchStreamType\022R\n",
      "\023SwitchDirectionType\030\020 \001(\01625.com.kedacom" +
      ".ops.flink.etl.proto.ESwitchDirectionTyp" +
      "e\022\027\n\017AnalysisContext\030\021 \001(\014\022 \n\030DsAllocEpA" +
      "ttrPayloadHole\030\022 \001(\010\022\024\n\014EpSilentAttr\030\023 \001" +
      "(\010\022\022\n\nEpMuteAttr\030\024 \001(\010\022\023\n\013isValidSSRC\030\025 " +
      "\001(\010\022\014\n\004ssrc\030\026 \001(\r\"\220\004\n\022DssCltAddSwitchAck" +
      "\022\020\n\010ClientId\030\001 \001(\r\022<\n\007DstAddr\030\002 \001(\0132+.co" +
      "m.kedacom.ops.flink.etl.proto.DssNetAddr" +
      "\022<\n\007RcvAddr\030\003 \001(\0132+.com.kedacom.ops.flin" +
      "k.etl.proto.DssNetAddr\022<\n\007MapAddr\030\004 \001(\0132",
      "+.com.kedacom.ops.flink.etl.proto.DssNet" +
      "Addr\022@\n\nSwitchType\030\005 \001(\0162,.com.kedacom.o" +
      "ps.flink.etl.proto.ESwitchType\022\016\n\006DisFec" +
      "\030\006 \001(\010\022\022\n\nMdyRtpData\030\007 \001(\010\022:\n\006Cipher\030\010 \001" +
      "(\0132*.com.kedacom.ops.flink.etl.proto.Dss" +
      "Cipher\022\021\n\tFixedSsrc\030\t \001(\010\022<\n\007fixedpt\030\n \001" +
      "(\0132+.com.kedacom.ops.flink.etl.proto.Dss" +
      "FixedPt\022\021\n\tFilterRed\030\013 \001(\010\022\021\n\tRemoveExt\030" +
      "\014 \001(\010\022\025\n\rMeetingHandle\030\r \001(\t\"\334\004\n\023DssCltA" +
      "ddSwitchNack\022\020\n\010ClientId\030\001 \001(\r\022<\n\007DstAdd",
      "r\030\002 \001(\0132+.com.kedacom.ops.flink.etl.prot" +
      "o.DssNetAddr\022<\n\007RcvAddr\030\003 \001(\0132+.com.keda" +
      "com.ops.flink.etl.proto.DssNetAddr\022<\n\007Ma" +
      "pAddr\030\004 \001(\0132+.com.kedacom.ops.flink.etl." +
      "proto.DssNetAddr\022@\n\nSwitchType\030\005 \001(\0162,.c" +
      "om.kedacom.ops.flink.etl.proto.ESwitchTy" +
      "pe\022\016\n\006DisFec\030\006 \001(\010\022\022\n\nMdyRtpData\030\007 \001(\010\022:" +
      "\n\006Cipher\030\010 \001(\0132*.com.kedacom.ops.flink.e" +
      "tl.proto.DssCipher\022\021\n\tFixedSsrc\030\t \001(\010\022<\n" +
      "\007fixedpt\030\n \001(\0132+.com.kedacom.ops.flink.e",
      "tl.proto.DssFixedPt\022\021\n\tFilterRed\030\013 \001(\010\022\021" +
      "\n\tRemoveExt\030\014 \001(\010\022I\n\nresultcode\030\r \001(\01625." +
      "com.kedacom.ops.flink.etl.proto.EAddSwit" +
      "chResultCode\022\025\n\rMeetingHandle\030\016 \001(\t\"\345\002\n\025" +
      "CltDssRemoveSwitchReq\022\020\n\010ClientId\030\001 \001(\r\022" +
      "<\n\007DstAddr\030\002 \001(\0132+.com.kedacom.ops.flink" +
      ".etl.proto.DssNetAddr\022<\n\007RcvAddr\030\003 \001(\0132+" +
      ".com.kedacom.ops.flink.etl.proto.DssNetA" +
      "ddr\022<\n\007MapAddr\030\004 \001(\0132+.com.kedacom.ops.f" +
      "link.etl.proto.DssNetAddr\022@\n\nSwitchType\030",
      "\005 \001(\0162,.com.kedacom.ops.flink.etl.proto." +
      "ESwitchType\022\023\n\013RemoveByDst\030\006 \001(\010\022\022\n\nClie" +
      "ntTick\030\007 \001(\r\022\025\n\rMeetingHandle\030\010 \001(\t\"\321\002\n\025" +
      "DssCltRemoveSwitchAck\022\020\n\010ClientId\030\001 \001(\r\022" +
      "<\n\007DstAddr\030\002 \001(\0132+.com.kedacom.ops.flink" +
      ".etl.proto.DssNetAddr\022<\n\007RcvAddr\030\003 \001(\0132+" +
      ".com.kedacom.ops.flink.etl.proto.DssNetA" +
      "ddr\022<\n\007MapAddr\030\004 \001(\0132+.com.kedacom.ops.f" +
      "link.etl.proto.DssNetAddr\022@\n\nSwitchType\030" +
      "\005 \001(\0162,.com.kedacom.ops.flink.etl.proto.",
      "ESwitchType\022\023\n\013RemoveByDst\030\006 \001(\010\022\025\n\rMeet" +
      "ingHandle\030\007 \001(\t\"\234\003\n\026DssCltRemoveSwitchNa" +
      "ck\022\020\n\010ClientId\030\001 \001(\r\022<\n\007DstAddr\030\002 \001(\0132+." +
      "com.kedacom.ops.flink.etl.proto.DssNetAd" +
      "dr\022<\n\007RcvAddr\030\003 \001(\0132+.com.kedacom.ops.fl" +
      "ink.etl.proto.DssNetAddr\022<\n\007MapAddr\030\004 \001(" +
      "\0132+.com.kedacom.ops.flink.etl.proto.DssN" +
      "etAddr\022@\n\nSwitchType\030\005 \001(\0162,.com.kedacom" +
      ".ops.flink.etl.proto.ESwitchType\022\023\n\013Remo" +
      "veByDst\030\006 \001(\010\022H\n\nresultcode\030\007 \001(\01624.com.",
      "kedacom.ops.flink.etl.proto.ERmSwitchRes" +
      "ultCode\022\025\n\rMeetingHandle\030\010 \001(\t\"\364\003\n\027CltDs" +
      "sAddM2OneSwitchReq\022\020\n\010ClientId\030\001 \001(\r\022<\n\007" +
      "DstAddr\030\002 \001(\0132+.com.kedacom.ops.flink.et" +
      "l.proto.DssNetAddr\022<\n\007RcvAddr\030\003 \001(\0132+.co" +
      "m.kedacom.ops.flink.etl.proto.DssNetAddr" +
      "\022<\n\007MapAddr\030\004 \001(\0132+.com.kedacom.ops.flin" +
      "k.etl.proto.DssNetAddr\022@\n\nSwitchType\030\005 \001" +
      "(\0162,.com.kedacom.ops.flink.etl.proto.ESw" +
      "itchType\022\022\n\nClientTick\030\006 \001(\r\022\025\n\rMeetingH",
      "andle\030\007 \001(\t\022L\n\020SwitchStreamType\030\010 \001(\01622." +
      "com.kedacom.ops.flink.etl.proto.ESwitchS" +
      "treamType\022R\n\023SwitchDirectionType\030\t \001(\01625" +
      ".com.kedacom.ops.flink.etl.proto.ESwitch" +
      "DirectionType\"\276\002\n\027DssCltAddM2OneSwitchAc" +
      "k\022\020\n\010ClientId\030\001 \001(\r\022<\n\007DstAddr\030\002 \001(\0132+.c" +
      "om.kedacom.ops.flink.etl.proto.DssNetAdd" +
      "r\022<\n\007RcvAddr\030\003 \001(\0132+.com.kedacom.ops.fli" +
      "nk.etl.proto.DssNetAddr\022<\n\007MapAddr\030\004 \001(\013" +
      "2+.com.kedacom.ops.flink.etl.proto.DssNe",
      "tAddr\022@\n\nSwitchType\030\005 \001(\0162,.com.kedacom." +
      "ops.flink.etl.proto.ESwitchType\022\025\n\rMeeti" +
      "ngHandle\030\006 \001(\t\"\217\003\n\030DssCltAddM2OneSwitchN" +
      "ack\022\020\n\010ClientId\030\001 \001(\r\022<\n\007DstAddr\030\002 \001(\0132+" +
      ".com.kedacom.ops.flink.etl.proto.DssNetA" +
      "ddr\022<\n\007RcvAddr\030\003 \001(\0132+.com.kedacom.ops.f" +
      "link.etl.proto.DssNetAddr\022<\n\007MapAddr\030\004 \001" +
      "(\0132+.com.kedacom.ops.flink.etl.proto.Dss" +
      "NetAddr\022@\n\nSwitchType\030\005 \001(\0162,.com.kedaco" +
      "m.ops.flink.etl.proto.ESwitchType\022N\n\nres",
      "ultcode\030\006 \001(\0162:.com.kedacom.ops.flink.et" +
      "l.proto.EAddM2OneSwitchResultCode\022\025\n\rMee" +
      "tingHandle\030\007 \001(\t\"\202\003\n\032CltDssRemoveM2OneSw" +
      "itchReq\022\020\n\010ClientId\030\001 \001(\r\022<\n\007DstAddr\030\002 \001" +
      "(\0132+.com.kedacom.ops.flink.etl.proto.Dss" +
      "NetAddr\022<\n\007RcvAddr\030\003 \001(\0132+.com.kedacom.o" +
      "ps.flink.etl.proto.DssNetAddr\022<\n\007MapAddr" +
      "\030\004 \001(\0132+.com.kedacom.ops.flink.etl.proto" +
      ".DssNetAddr\022@\n\nSwitchType\030\005 \001(\0162,.com.ke" +
      "dacom.ops.flink.etl.proto.ESwitchType\022\023\n",
      "\013RemoveByDst\030\006 \001(\010\022\026\n\016RemoveByRcvDst\030\007 \001" +
      "(\010\022\022\n\nClientTick\030\010 \001(\r\022\025\n\rMeetingHandle\030" +
      "\t \001(\t\"\326\002\n\032DssCltRemoveM2OneSwitchAck\022\020\n\010" +
      "ClientId\030\001 \001(\r\022<\n\007DstAddr\030\002 \001(\0132+.com.ke" +
      "dacom.ops.flink.etl.proto.DssNetAddr\022<\n\007" +
      "RcvAddr\030\003 \001(\0132+.com.kedacom.ops.flink.et" +
      "l.proto.DssNetAddr\022<\n\007MapAddr\030\004 \001(\0132+.co" +
      "m.kedacom.ops.flink.etl.proto.DssNetAddr" +
      "\022@\n\nSwitchType\030\005 \001(\0162,.com.kedacom.ops.f" +
      "link.etl.proto.ESwitchType\022\023\n\013RemoveByDs",
      "t\030\006 \001(\010\022\025\n\rMeetingHandle\030\007 \001(\t\"\246\003\n\033DssCl" +
      "tRemoveM2OneSwitchNack\022\020\n\010ClientId\030\001 \001(\r" +
      "\022<\n\007DstAddr\030\002 \001(\0132+.com.kedacom.ops.flin" +
      "k.etl.proto.DssNetAddr\022<\n\007RcvAddr\030\003 \001(\0132" +
      "+.com.kedacom.ops.flink.etl.proto.DssNet" +
      "Addr\022<\n\007MapAddr\030\004 \001(\0132+.com.kedacom.ops." +
      "flink.etl.proto.DssNetAddr\022@\n\nSwitchType" +
      "\030\005 \001(\0162,.com.kedacom.ops.flink.etl.proto" +
      ".ESwitchType\022\023\n\013RemoveByDst\030\006 \001(\010\022M\n\nres" +
      "ultcode\030\007 \001(\01629.com.kedacom.ops.flink.et",
      "l.proto.ERmM2OneSwitchResultCode\022\025\n\rMeet" +
      "ingHandle\030\010 \001(\t\"\204\004\n\020CltDssAddDumpReq\022\020\n\010" +
      "ClientId\030\001 \001(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022<\n" +
      "\007RcvAddr\030\003 \001(\0132+.com.kedacom.ops.flink.e" +
      "tl.proto.DssNetAddr\022:\n\006Cipher\030\004 \001(\0132*.co" +
      "m.kedacom.ops.flink.etl.proto.DssCipher\022" +
      "<\n\007FixedPt\030\005 \001(\0132+.com.kedacom.ops.flink" +
      ".etl.proto.DssFixedPt\022\022\n\nClientTick\030\006 \001(" +
      "\r\022@\n\nSwitchType\030\007 \001(\0162,.com.kedacom.ops." +
      "flink.etl.proto.ESwitchType\022L\n\020SwitchStr",
      "eamType\030\010 \001(\01622.com.kedacom.ops.flink.et" +
      "l.proto.ESwitchStreamType\022R\n\023SwitchDirec" +
      "tionType\030\t \001(\01625.com.kedacom.ops.flink.e" +
      "tl.proto.ESwitchDirectionType\022\027\n\017Analysi" +
      "sContext\030\n \001(\014\"\265\002\n\020DssCltAddDumpAck\022\020\n\010C" +
      "lientId\030\001 \001(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022<\n\007" +
      "RcvAddr\030\003 \001(\0132+.com.kedacom.ops.flink.et" +
      "l.proto.DssNetAddr\022:\n\006Cipher\030\004 \001(\0132*.com" +
      ".kedacom.ops.flink.etl.proto.DssCipher\022<" +
      "\n\007FixedPt\030\005 \001(\0132+.com.kedacom.ops.flink.",
      "etl.proto.DssFixedPt\022@\n\nSwitchType\030\006 \001(\016" +
      "2,.com.kedacom.ops.flink.etl.proto.ESwit" +
      "chType\"\205\003\n\021DssCltAddDumpNack\022\020\n\010ClientId" +
      "\030\001 \001(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022<\n\007RcvAddr" +
      "\030\003 \001(\0132+.com.kedacom.ops.flink.etl.proto" +
      ".DssNetAddr\022:\n\006Cipher\030\004 \001(\0132*.com.kedaco" +
      "m.ops.flink.etl.proto.DssCipher\022<\n\007Fixed" +
      "Pt\030\005 \001(\0132+.com.kedacom.ops.flink.etl.pro" +
      "to.DssFixedPt\022M\n\nresultcode\030\006 \001(\01629.com." +
      "kedacom.ops.flink.etl.proto.EAddDumpSwit",
      "chResultCode\022@\n\nSwitchType\030\007 \001(\0162,.com.k" +
      "edacom.ops.flink.etl.proto.ESwitchType\"\326" +
      "\001\n\023CltDssRemoveDumpReq\022\020\n\010ClientId\030\001 \001(\r" +
      "\022<\n\007RcvAddr\030\002 \001(\0132+.com.kedacom.ops.flin" +
      "k.etl.proto.DssNetAddr\022\022\n\nClientTick\030\003 \001" +
      "(\r\022\025\n\rMeetingHandle\030\004 \001(\t\022D\n\016DumpSwitchT" +
      "ype\030\005 \001(\0162,.com.kedacom.ops.flink.etl.pr" +
      "oto.ESwitchType\"|\n\023DssCltRemoveDumpAck\022\020" +
      "\n\010ClientId\030\001 \001(\r\022<\n\007RcvAddr\030\002 \001(\0132+.com." +
      "kedacom.ops.flink.etl.proto.DssNetAddr\022\025",
      "\n\rMeetingHandle\030\003 \001(\t\"\313\001\n\024DssCltRemoveDu" +
      "mpNack\022\020\n\010ClientId\030\001 \001(\r\022<\n\007RcvAddr\030\002 \001(" +
      "\0132+.com.kedacom.ops.flink.etl.proto.DssN" +
      "etAddr\022L\n\nresultcode\030\003 \001(\01628.com.kedacom" +
      ".ops.flink.etl.proto.ERmDumpSwitchResult" +
      "Code\022\025\n\rMeetingHandle\030\004 \001(\t\"g\n\020DssCltSrv" +
      "LostNtf\022\020\n\010ClientId\030\001 \001(\r\022\021\n\tSrvHandle\030\002" +
      " \001(\r\022\022\n\nPortHandle\030\003 \003(\r\022\032\n\022NeedNtfOnlin" +
      "eAfter\030\004 \001(\r\"M\n\024DssCltSrvRegisterNtf\022\020\n\010" +
      "ClientId\030\001 \001(\r\022\021\n\tSrvHandle\030\002 \001(\r\022\020\n\010Wor",
      "kerIp\030\003 \003(\t\"\325\001\n\032CltDssGetLostRateByPortR" +
      "eq\022\020\n\010ClientId\030\001 \001(\r\022=\n\010PortAddr\030\002 \003(\0132+" +
      ".com.kedacom.ops.flink.etl.proto.DssNetA" +
      "ddr\022\022\n\nClientTick\030\003 \001(\r\022R\n\023SwitchDirecti" +
      "onType\030\004 \001(\01625.com.kedacom.ops.flink.etl" +
      ".proto.ESwitchDirectionType\"\203\001\n\034DssCltGe" +
      "tLostRateByPortReply\022\020\n\010ClientId\030\001 \001(\r\022=" +
      "\n\010PortAddr\030\002 \003(\0132+.com.kedacom.ops.flink" +
      ".etl.proto.DssNetAddr\022\022\n\nClientTick\030\003 \001(" +
      "\r\"r\n\034CltDssBindWorkerToMeetingReq\022\020\n\010Cli",
      "entId\030\001 \001(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022\025\n\rWo" +
      "rkerGroupId\030\003 \001(\t\022\022\n\nClientTick\030\004 \001(\r\"r\n" +
      "\034DssCltBindWorkerToMeetingAck\022\020\n\010ClientI" +
      "d\030\001 \001(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022\025\n\rWorker" +
      "GroupId\030\003 \001(\t\022\022\n\nClientTick\030\004 \001(\r\"s\n\035Dss" +
      "CltBindWorkerToMeetingNack\022\020\n\010ClientId\030\001" +
      " \001(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022\025\n\rWorkerGro" +
      "upId\030\003 \001(\t\022\022\n\nClientTick\030\004 \001(\r\"v\n CltDss" +
      "UnbindWorkerFromMeetingReq\022\020\n\010ClientId\030\001" +
      " \001(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022\025\n\rWorkerGro",
      "upId\030\003 \001(\t\022\022\n\nClientTick\030\004 \001(\r\"v\n DssClt" +
      "UnbindWorkerFromMeetingAck\022\020\n\010ClientId\030\001" +
      " \001(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022\025\n\rWorkerGro" +
      "upId\030\003 \001(\t\022\022\n\nClientTick\030\004 \001(\r\"w\n!DssClt" +
      "UnbindWorkerFromMeetingNack\022\020\n\010ClientId\030" +
      "\001 \001(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022\025\n\rWorkerGr" +
      "oupId\030\003 \001(\t\022\022\n\nClientTick\030\004 \001(\r\"g\n\025DssCl" +
      "tRemoveClientNtf\022\020\n\010ClientId\030\001 \001(\r\022\022\n\nCl" +
      "ientTick\030\002 \001(\r\022\022\n\nReasonCode\030\003 \001(\r\022\024\n\014me" +
      "ssage_uuid\030\004 \001(\014\"X\n\034CltDssDestroyClientB",
      "yUUIDReq\022\020\n\010MasterId\030\001 \001(\r\022\020\n\010ClientId\030\002" +
      " \001(\r\022\024\n\014message_uuid\030\003 \001(\014\"X\n\034DssCltDest" +
      "royClientByUUIDAck\022\024\n\014message_uuid\030\001 \001(\014" +
      "\022\020\n\010MasterId\030\002 \001(\r\022\020\n\010ClientId\030\003 \001(\r\"Y\n\035" +
      "DssCltDestroyClientByUUIDNack\022\024\n\014message" +
      "_uuid\030\001 \001(\014\022\020\n\010MasterId\030\002 \001(\r\022\020\n\010ClientI" +
      "d\030\003 \001(\r\"m\n\032CltDssReleasePortByUUIDReq\022\024\n" +
      "\014message_uuid\030\001 \001(\014\022\020\n\010MasterId\030\002 \001(\r\022\020\n" +
      "\010ClientId\030\003 \001(\r\022\025\n\rMeetinghandle\030\004 \001(\t\"\201" +
      "\001\n\032DssCltReleasePortByUUIDAck\022\024\n\014message",
      "_uuid\030\001 \001(\014\022\020\n\010MasterId\030\002 \001(\r\022\020\n\010ClientI" +
      "d\030\003 \001(\r\022\025\n\rMeetinghandle\030\004 \001(\t\022\022\n\nPortHa" +
      "ndle\030\005 \001(\r\"n\n\033DssCltReleasePortByUUIDNac" +
      "k\022\024\n\014message_uuid\030\001 \001(\014\022\020\n\010MasterId\030\002 \001(" +
      "\r\022\020\n\010ClientId\030\003 \001(\r\022\025\n\rMeetingHandle\030\004 \001" +
      "(\t\"n\n\033CltDssRemoveBridgeByUUIDReq\022\024\n\014mes" +
      "sage_uuid\030\001 \001(\014\022\020\n\010MasterId\030\002 \001(\r\022\020\n\010Cli" +
      "entId\030\003 \001(\r\022\025\n\rMeetinghandle\030\004 \001(\t\"\204\001\n\033D" +
      "ssCltRemoveBridgeByUUIDAck\022\024\n\014message_uu" +
      "id\030\001 \001(\014\022\020\n\010MasterId\030\002 \001(\r\022\020\n\010ClientId\030\003",
      " \001(\r\022\025\n\rMeetingHandle\030\004 \001(\t\022\024\n\014BridgeHan" +
      "dle\030\005 \001(\r\"o\n\034DssCltRemoveBridgeByUUIDNac" +
      "k\022\024\n\014message_uuid\030\001 \001(\014\022\020\n\010MasterId\030\002 \001(" +
      "\r\022\020\n\010ClientId\030\003 \001(\r\022\025\n\rMeetingHandle\030\004 \001" +
      "(\t\"[\n\036DssCltDynamicEncryptKeyLessNtf\022\020\n\010" +
      "ClientId\030\001 \001(\r\022\024\n\014SessionIdLen\030\002 \001(\r\022\021\n\t" +
      "SessionId\030\003 \001(\014\"\302\001\n CltDssUpdateDynamicE" +
      "ncryptKeyCmd\022\020\n\010ClientId\030\001 \001(\r\022:\n\006SecKey" +
      "\030\002 \001(\0132*.com.kedacom.ops.flink.etl.proto" +
      ".DssSecKey\022<\n\007RcvAddr\030\003 \003(\0132+.com.kedaco",
      "m.ops.flink.etl.proto.DssNetAddr\022\022\n\nClie" +
      "ntTick\030\004 \001(\rB\002H\002P\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssConnectMasterReq_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssConnectMasterReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssConnectMasterReq_descriptor,
              new java.lang.String[] { "Alias", "QName", "Materid", "ProcessName", "AppMoid", "BFirstConnect", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltConnectMasterAck_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltConnectMasterAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltConnectMasterAck_descriptor,
              new java.lang.String[] { "Alias", "ClientId", "ClientTick", "MasterId", "KeepaliveTime", "AnyWorker", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltConnectMasterNack_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltConnectMasterNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltConnectMasterNack_descriptor,
              new java.lang.String[] { "Alias", "QName", "Materid", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientReq_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientReq_descriptor,
              new java.lang.String[] { "Alias", "ClientType", "QName", "ReplyCallBack", "MasterId", "Context", "ProcessName", "AppMoid", "ReplyCallback", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientAck_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientAck_descriptor,
              new java.lang.String[] { "Alias", "ClientType", "QName", "ReplyCallBack", "Masterid", "ClientId", "ClientTick", "Keepalivetime", "Context", "ReplyCallback", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientNack_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltCreatClientNack_descriptor,
              new java.lang.String[] { "Alias", "ClientType", "QName", "ReplyCallBack", "MasterId", "Context", "ReplyCallback", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssDestroyClientReq_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssDestroyClientReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssDestroyClientReq_descriptor,
              new java.lang.String[] { "ClientId", "ClientTick", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltPing_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltPing_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltPing_descriptor,
              new java.lang.String[] { "ClientId", "ClientTick", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssPong_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssPong_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssPong_descriptor,
              new java.lang.String[] { "ClientId", "ClientTick", "ClientIds", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssPing_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssPing_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssPing_descriptor,
              new java.lang.String[] { "ClientId", "ClientTick", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltPong_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltPong_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltPong_descriptor,
              new java.lang.String[] { "ClientId", "ClientTick", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyLocalPortReq_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyLocalPortReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyLocalPortReq_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "ForceWorkerIp", "ForceConsPort", "BandWidth", "PortNum", "ClientTick", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyLocalPortAck_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyLocalPortAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyLocalPortAck_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "PortHandle", "WorkerIp", "Port", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyLocalPortNack_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyLocalPortNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyLocalPortNack_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "ForceWorkerIp", "ForceConsPort", "BandWidth", "PortNum", "ResultCode", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyLocalPortReq_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyLocalPortReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyLocalPortReq_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "ForceWorkerIp", "ForceConsPort", "BandWidth", "PortNum", "ClientTick", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyLocalPortAck_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyLocalPortAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyLocalPortAck_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "PortHandle", "WorkerIp", "Port", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyLocalPortNack_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyLocalPortNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyLocalPortNack_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "ForceWorkerIp", "ForceConsPort", "BandWidth", "PortNum", "ResultCode", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyCarrierPortReq_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyCarrierPortReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyCarrierPortReq_descriptor,
              new java.lang.String[] { "ClientId", "ForceWorkerIp", "MeetingHandle", "PortNum", "BandWidth", "ForceConsPort", "ChannerCarrierType", "IsChannerDmz", "ChanneeCarrierType", "IsChanneeDmz", "ClientTick", "MtEncyptType", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyCarrierPortAck_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyCarrierPortAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyCarrierPortAck_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "ChannerIp", "ChannerDmzIp", "ChanneeIp", "ChanneeDmzIp", "Port", "PortHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyCarrierPortNack_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyCarrierPortNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyCarrierPortNack_descriptor,
              new java.lang.String[] { "ClientId", "ForceWorkerIp", "MeetingHandle", "PortNum", "BandWidth", "ForceConsPort", "ChannerCarrierType", "IsChannerDmz", "ChanneeCarrierType", "IsChanneeDmz", "ResultCode", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyCarrierPortReq_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyCarrierPortReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyCarrierPortReq_descriptor,
              new java.lang.String[] { "ClientId", "ForceWorkerIp", "MeetingHandle", "PortNum", "BandWidth", "ForceConsPort", "ChannerCarrierType", "IsChannerDmz", "ChanneeCarrierType", "IsChanneeDmz", "ClientTick", "MtEncyptType", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyCarrierPortAck_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyCarrierPortAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyCarrierPortAck_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "ChannerIp", "ChannerDmzIp", "ChanneeIp", "ChanneeDmzIp", "Port", "PortHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyCarrierPortNack_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyCarrierPortNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyCarrierPortNack_descriptor,
              new java.lang.String[] { "ClientId", "ForceWorkerIp", "MeetingHandle", "PortNum", "BandWidth", "ForceConsPort", "ChannerCarrierType", "IsChannerDmz", "ChanneeCarrierType", "IsChanneeDmz", "ResultCode", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyPortReq_descriptor =
            getDescriptor().getMessageTypes().get(23);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyPortReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncApplyPortReq_descriptor,
              new java.lang.String[] { "ClientId", "ForceWorkerIp", "MeetingHandle", "PortNum", "BandWidth", "ForceConsPort", "CarrierAttr", "ClientTick", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyPortAck_descriptor =
            getDescriptor().getMessageTypes().get(24);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyPortAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyPortAck_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "CarrierAddr", "Port", "PortHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyPortNack_descriptor =
            getDescriptor().getMessageTypes().get(25);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyPortNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncApplyPortNack_descriptor,
              new java.lang.String[] { "ClientId", "ForceWorkerIp", "MeetingHandle", "PortNum", "BandWidth", "ForceConsPort", "CarrierAttr", "ResultCode", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyPortReq_descriptor =
            getDescriptor().getMessageTypes().get(26);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyPortReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncApplyPortReq_descriptor,
              new java.lang.String[] { "ClientId", "ForceWorkerIp", "MeetingHandle", "PortNum", "BandWidth", "ForceConsPort", "CarrierAttr", "ClientTick", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyPortAck_descriptor =
            getDescriptor().getMessageTypes().get(27);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyPortAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyPortAck_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "CarrierAddr", "Port", "PortHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyPortNack_descriptor =
            getDescriptor().getMessageTypes().get(28);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyPortNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncApplyPortNack_descriptor,
              new java.lang.String[] { "ClientId", "ForceWorkerIp", "MeetingHandle", "PortNum", "BandWidth", "ForceConsPort", "CarrierAttr", "ResultCode", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePortReq_descriptor =
            getDescriptor().getMessageTypes().get(29);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePortReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePortReq_descriptor,
              new java.lang.String[] { "ClientId", "Meetinghandle", "PortHandle", "ClientTick", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortAck_descriptor =
            getDescriptor().getMessageTypes().get(30);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortAck_descriptor,
              new java.lang.String[] { "ClientId", "Meetinghandle", "PortHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortNack_descriptor =
            getDescriptor().getMessageTypes().get(31);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortNack_descriptor,
              new java.lang.String[] { "ClientId", "Meetinghandle", "PortHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePartPortReq_descriptor =
            getDescriptor().getMessageTypes().get(32);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePartPortReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePartPortReq_descriptor,
              new java.lang.String[] { "ClientId", "Meetinghandle", "PortHandle", "ClientTick", "Port", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePartPortAck_descriptor =
            getDescriptor().getMessageTypes().get(33);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePartPortAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePartPortAck_descriptor,
              new java.lang.String[] { "ClientId", "Meetinghandle", "PortHandle", "StartPort", "ReleasePortNumber", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePartPortNack_descriptor =
            getDescriptor().getMessageTypes().get(34);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePartPortNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePartPortNack_descriptor,
              new java.lang.String[] { "ClientId", "Meetinghandle", "PortHandle", "StartPort", "ReleasePortNumber", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncAddBridgeReq_descriptor =
            getDescriptor().getMessageTypes().get(35);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncAddBridgeReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssSyncAddBridgeReq_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "ForceKeyFrame", "ClientTick", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncAddBridgeAck_descriptor =
            getDescriptor().getMessageTypes().get(36);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncAddBridgeAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncAddBridgeAck_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "ForceKeyFrame", "BridgeHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncAddBridgeNack_descriptor =
            getDescriptor().getMessageTypes().get(37);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncAddBridgeNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltSyncAddBridgeNack_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "ForceKeyFrame", "ResultCode", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncAddBridgeReq_descriptor =
            getDescriptor().getMessageTypes().get(38);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncAddBridgeReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssASyncAddBridgeReq_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "ForceKeyFrame", "ClientTick", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncAddBridgeAck_descriptor =
            getDescriptor().getMessageTypes().get(39);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncAddBridgeAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncAddBridgeAck_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "ForceKeyFrame", "BridgeHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncAddBridgeNack_descriptor =
            getDescriptor().getMessageTypes().get(40);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncAddBridgeNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltASyncAddBridgeNack_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "ForceKeyFrame", "BridgeHandle", "ResultCode", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveBridgeReq_descriptor =
            getDescriptor().getMessageTypes().get(41);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveBridgeReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveBridgeReq_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "BridgeHandle", "ClientTick", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeAck_descriptor =
            getDescriptor().getMessageTypes().get(42);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeAck_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "BridgeHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeNack_descriptor =
            getDescriptor().getMessageTypes().get(43);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeNack_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "BridgeHandle", "ResultCode", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssSendToBridgeReq_descriptor =
            getDescriptor().getMessageTypes().get(44);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssSendToBridgeReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssSendToBridgeReq_descriptor,
              new java.lang.String[] { "ClientId", "BridgeHandle", "RcvAddr", "ClientTick", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSendToBridgeAck_descriptor =
            getDescriptor().getMessageTypes().get(45);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSendToBridgeAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltSendToBridgeAck_descriptor,
              new java.lang.String[] { "ClientId", "BridgeHandle", "RcvAddr", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSendToBridgeNack_descriptor =
            getDescriptor().getMessageTypes().get(46);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSendToBridgeNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltSendToBridgeNack_descriptor,
              new java.lang.String[] { "ClientId", "BridgeHandle", "RcvAddr", "MeetingHandle", "ResultCode", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltBridgeSpeakerRemovedNtf_descriptor =
            getDescriptor().getMessageTypes().get(47);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltBridgeSpeakerRemovedNtf_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltBridgeSpeakerRemovedNtf_descriptor,
              new java.lang.String[] { "ClientId", "BridgeHandle", "RcvAddr", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssStopSendToBridgeReq_descriptor =
            getDescriptor().getMessageTypes().get(48);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssStopSendToBridgeReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssStopSendToBridgeReq_descriptor,
              new java.lang.String[] { "ClientId", "BridgeHandle", "RcvAddr", "RemoveByDst", "ClientTick", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopSendToBridgeAck_descriptor =
            getDescriptor().getMessageTypes().get(49);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopSendToBridgeAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopSendToBridgeAck_descriptor,
              new java.lang.String[] { "ClientId", "BridgeHandle", "RcvAddr", "RemoveByDst", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopSendToBridgeNack_descriptor =
            getDescriptor().getMessageTypes().get(50);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopSendToBridgeNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopSendToBridgeNack_descriptor,
              new java.lang.String[] { "ClientId", "BridgeHandle", "RcvAddr", "RemoveByDst", "MeetingHandle", "ResultCode", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssReceiveFromBridgeReq_descriptor =
            getDescriptor().getMessageTypes().get(51);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssReceiveFromBridgeReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssReceiveFromBridgeReq_descriptor,
              new java.lang.String[] { "ClientId", "BridgeHandle", "DstAddr", "ClientTick", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltReceiveFromBridgeAck_descriptor =
            getDescriptor().getMessageTypes().get(52);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltReceiveFromBridgeAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltReceiveFromBridgeAck_descriptor,
              new java.lang.String[] { "ClientId", "BridgeHandle", "DstAddr", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltReceiveFromBridgeNack_descriptor =
            getDescriptor().getMessageTypes().get(53);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltReceiveFromBridgeNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltReceiveFromBridgeNack_descriptor,
              new java.lang.String[] { "ClientId", "BridgeHandle", "DstAddr", "MeetingHandle", "ResultCode", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssStopReceiveFromBridgeReq_descriptor =
            getDescriptor().getMessageTypes().get(54);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssStopReceiveFromBridgeReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssStopReceiveFromBridgeReq_descriptor,
              new java.lang.String[] { "ClientId", "BridgeHandle", "MapAddr", "RemoveByDst", "DstAddr", "ClientTick", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopReceiveFromBridgeAck_descriptor =
            getDescriptor().getMessageTypes().get(55);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopReceiveFromBridgeAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopReceiveFromBridgeAck_descriptor,
              new java.lang.String[] { "ClientId", "BridgeHandle", "MapAddr", "RemoveByDst", "DstAddr", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopReceiveFromBridgeNack_descriptor =
            getDescriptor().getMessageTypes().get(56);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopReceiveFromBridgeNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltStopReceiveFromBridgeNack_descriptor,
              new java.lang.String[] { "ClientId", "BridgeHandle", "MapAddr", "RemoveByDst", "DstAddr", "MeetingHandle", "ResultCode", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddSwitchReq_descriptor =
            getDescriptor().getMessageTypes().get(57);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddSwitchReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddSwitchReq_descriptor,
              new java.lang.String[] { "ClientId", "DstAddr", "RcvAddr", "MapAddr", "SwitchType", "DisFec", "MdyRtpData", "Cipher", "FixedSsrc", "Fixedpt", "FilterRed", "RemoveExt", "ClientTick", "MeetingHandle", "SwitchStreamType", "SwitchDirectionType", "AnalysisContext", "DsAllocEpAttrPayloadHole", "EpSilentAttr", "EpMuteAttr", "IsValidSSRC", "Ssrc", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddSwitchAck_descriptor =
            getDescriptor().getMessageTypes().get(58);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddSwitchAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddSwitchAck_descriptor,
              new java.lang.String[] { "ClientId", "DstAddr", "RcvAddr", "MapAddr", "SwitchType", "DisFec", "MdyRtpData", "Cipher", "FixedSsrc", "Fixedpt", "FilterRed", "RemoveExt", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddSwitchNack_descriptor =
            getDescriptor().getMessageTypes().get(59);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddSwitchNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddSwitchNack_descriptor,
              new java.lang.String[] { "ClientId", "DstAddr", "RcvAddr", "MapAddr", "SwitchType", "DisFec", "MdyRtpData", "Cipher", "FixedSsrc", "Fixedpt", "FilterRed", "RemoveExt", "Resultcode", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveSwitchReq_descriptor =
            getDescriptor().getMessageTypes().get(60);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveSwitchReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveSwitchReq_descriptor,
              new java.lang.String[] { "ClientId", "DstAddr", "RcvAddr", "MapAddr", "SwitchType", "RemoveByDst", "ClientTick", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveSwitchAck_descriptor =
            getDescriptor().getMessageTypes().get(61);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveSwitchAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveSwitchAck_descriptor,
              new java.lang.String[] { "ClientId", "DstAddr", "RcvAddr", "MapAddr", "SwitchType", "RemoveByDst", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveSwitchNack_descriptor =
            getDescriptor().getMessageTypes().get(62);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveSwitchNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveSwitchNack_descriptor,
              new java.lang.String[] { "ClientId", "DstAddr", "RcvAddr", "MapAddr", "SwitchType", "RemoveByDst", "Resultcode", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddM2OneSwitchReq_descriptor =
            getDescriptor().getMessageTypes().get(63);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddM2OneSwitchReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddM2OneSwitchReq_descriptor,
              new java.lang.String[] { "ClientId", "DstAddr", "RcvAddr", "MapAddr", "SwitchType", "ClientTick", "MeetingHandle", "SwitchStreamType", "SwitchDirectionType", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddM2OneSwitchAck_descriptor =
            getDescriptor().getMessageTypes().get(64);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddM2OneSwitchAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddM2OneSwitchAck_descriptor,
              new java.lang.String[] { "ClientId", "DstAddr", "RcvAddr", "MapAddr", "SwitchType", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddM2OneSwitchNack_descriptor =
            getDescriptor().getMessageTypes().get(65);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddM2OneSwitchNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddM2OneSwitchNack_descriptor,
              new java.lang.String[] { "ClientId", "DstAddr", "RcvAddr", "MapAddr", "SwitchType", "Resultcode", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveM2OneSwitchReq_descriptor =
            getDescriptor().getMessageTypes().get(66);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveM2OneSwitchReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveM2OneSwitchReq_descriptor,
              new java.lang.String[] { "ClientId", "DstAddr", "RcvAddr", "MapAddr", "SwitchType", "RemoveByDst", "RemoveByRcvDst", "ClientTick", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveM2OneSwitchAck_descriptor =
            getDescriptor().getMessageTypes().get(67);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveM2OneSwitchAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveM2OneSwitchAck_descriptor,
              new java.lang.String[] { "ClientId", "DstAddr", "RcvAddr", "MapAddr", "SwitchType", "RemoveByDst", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveM2OneSwitchNack_descriptor =
            getDescriptor().getMessageTypes().get(68);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveM2OneSwitchNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveM2OneSwitchNack_descriptor,
              new java.lang.String[] { "ClientId", "DstAddr", "RcvAddr", "MapAddr", "SwitchType", "RemoveByDst", "Resultcode", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddDumpReq_descriptor =
            getDescriptor().getMessageTypes().get(69);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddDumpReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssAddDumpReq_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "RcvAddr", "Cipher", "FixedPt", "ClientTick", "SwitchType", "SwitchStreamType", "SwitchDirectionType", "AnalysisContext", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddDumpAck_descriptor =
            getDescriptor().getMessageTypes().get(70);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddDumpAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddDumpAck_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "RcvAddr", "Cipher", "FixedPt", "SwitchType", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddDumpNack_descriptor =
            getDescriptor().getMessageTypes().get(71);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddDumpNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltAddDumpNack_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "RcvAddr", "Cipher", "FixedPt", "Resultcode", "SwitchType", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveDumpReq_descriptor =
            getDescriptor().getMessageTypes().get(72);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveDumpReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveDumpReq_descriptor,
              new java.lang.String[] { "ClientId", "RcvAddr", "ClientTick", "MeetingHandle", "DumpSwitchType", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveDumpAck_descriptor =
            getDescriptor().getMessageTypes().get(73);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveDumpAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveDumpAck_descriptor,
              new java.lang.String[] { "ClientId", "RcvAddr", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveDumpNack_descriptor =
            getDescriptor().getMessageTypes().get(74);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveDumpNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveDumpNack_descriptor,
              new java.lang.String[] { "ClientId", "RcvAddr", "Resultcode", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSrvLostNtf_descriptor =
            getDescriptor().getMessageTypes().get(75);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSrvLostNtf_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltSrvLostNtf_descriptor,
              new java.lang.String[] { "ClientId", "SrvHandle", "PortHandle", "NeedNtfOnlineAfter", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSrvRegisterNtf_descriptor =
            getDescriptor().getMessageTypes().get(76);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltSrvRegisterNtf_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltSrvRegisterNtf_descriptor,
              new java.lang.String[] { "ClientId", "SrvHandle", "WorkerIp", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssGetLostRateByPortReq_descriptor =
            getDescriptor().getMessageTypes().get(77);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssGetLostRateByPortReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssGetLostRateByPortReq_descriptor,
              new java.lang.String[] { "ClientId", "PortAddr", "ClientTick", "SwitchDirectionType", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltGetLostRateByPortReply_descriptor =
            getDescriptor().getMessageTypes().get(78);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltGetLostRateByPortReply_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltGetLostRateByPortReply_descriptor,
              new java.lang.String[] { "ClientId", "PortAddr", "ClientTick", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssBindWorkerToMeetingReq_descriptor =
            getDescriptor().getMessageTypes().get(79);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssBindWorkerToMeetingReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssBindWorkerToMeetingReq_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "WorkerGroupId", "ClientTick", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltBindWorkerToMeetingAck_descriptor =
            getDescriptor().getMessageTypes().get(80);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltBindWorkerToMeetingAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltBindWorkerToMeetingAck_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "WorkerGroupId", "ClientTick", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltBindWorkerToMeetingNack_descriptor =
            getDescriptor().getMessageTypes().get(81);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltBindWorkerToMeetingNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltBindWorkerToMeetingNack_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "WorkerGroupId", "ClientTick", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssUnbindWorkerFromMeetingReq_descriptor =
            getDescriptor().getMessageTypes().get(82);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssUnbindWorkerFromMeetingReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssUnbindWorkerFromMeetingReq_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "WorkerGroupId", "ClientTick", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltUnbindWorkerFromMeetingAck_descriptor =
            getDescriptor().getMessageTypes().get(83);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltUnbindWorkerFromMeetingAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltUnbindWorkerFromMeetingAck_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "WorkerGroupId", "ClientTick", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltUnbindWorkerFromMeetingNack_descriptor =
            getDescriptor().getMessageTypes().get(84);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltUnbindWorkerFromMeetingNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltUnbindWorkerFromMeetingNack_descriptor,
              new java.lang.String[] { "ClientId", "MeetingHandle", "WorkerGroupId", "ClientTick", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveClientNtf_descriptor =
            getDescriptor().getMessageTypes().get(85);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveClientNtf_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveClientNtf_descriptor,
              new java.lang.String[] { "ClientId", "ClientTick", "ReasonCode", "MessageUuid", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssDestroyClientByUUIDReq_descriptor =
            getDescriptor().getMessageTypes().get(86);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssDestroyClientByUUIDReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssDestroyClientByUUIDReq_descriptor,
              new java.lang.String[] { "MasterId", "ClientId", "MessageUuid", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltDestroyClientByUUIDAck_descriptor =
            getDescriptor().getMessageTypes().get(87);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltDestroyClientByUUIDAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltDestroyClientByUUIDAck_descriptor,
              new java.lang.String[] { "MessageUuid", "MasterId", "ClientId", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltDestroyClientByUUIDNack_descriptor =
            getDescriptor().getMessageTypes().get(88);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltDestroyClientByUUIDNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltDestroyClientByUUIDNack_descriptor,
              new java.lang.String[] { "MessageUuid", "MasterId", "ClientId", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePortByUUIDReq_descriptor =
            getDescriptor().getMessageTypes().get(89);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePortByUUIDReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssReleasePortByUUIDReq_descriptor,
              new java.lang.String[] { "MessageUuid", "MasterId", "ClientId", "Meetinghandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortByUUIDAck_descriptor =
            getDescriptor().getMessageTypes().get(90);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortByUUIDAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortByUUIDAck_descriptor,
              new java.lang.String[] { "MessageUuid", "MasterId", "ClientId", "Meetinghandle", "PortHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortByUUIDNack_descriptor =
            getDescriptor().getMessageTypes().get(91);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortByUUIDNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltReleasePortByUUIDNack_descriptor,
              new java.lang.String[] { "MessageUuid", "MasterId", "ClientId", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveBridgeByUUIDReq_descriptor =
            getDescriptor().getMessageTypes().get(92);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveBridgeByUUIDReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssRemoveBridgeByUUIDReq_descriptor,
              new java.lang.String[] { "MessageUuid", "MasterId", "ClientId", "Meetinghandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeByUUIDAck_descriptor =
            getDescriptor().getMessageTypes().get(93);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeByUUIDAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeByUUIDAck_descriptor,
              new java.lang.String[] { "MessageUuid", "MasterId", "ClientId", "MeetingHandle", "BridgeHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeByUUIDNack_descriptor =
            getDescriptor().getMessageTypes().get(94);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeByUUIDNack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltRemoveBridgeByUUIDNack_descriptor,
              new java.lang.String[] { "MessageUuid", "MasterId", "ClientId", "MeetingHandle", });
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltDynamicEncryptKeyLessNtf_descriptor =
            getDescriptor().getMessageTypes().get(95);
          internal_static_com_kedacom_ops_flink_etl_proto_DssCltDynamicEncryptKeyLessNtf_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_DssCltDynamicEncryptKeyLessNtf_descriptor,
              new java.lang.String[] { "ClientId", "SessionIdLen", "SessionId", });
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssUpdateDynamicEncryptKeyCmd_descriptor =
            getDescriptor().getMessageTypes().get(96);
          internal_static_com_kedacom_ops_flink_etl_proto_CltDssUpdateDynamicEncryptKeyCmd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kedacom_ops_flink_etl_proto_CltDssUpdateDynamicEncryptKeyCmd_descriptor,
              new java.lang.String[] { "ClientId", "SecKey", "RcvAddr", "ClientTick", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.kedacom.ops.flink.etl.proto.Dssevstruct.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
